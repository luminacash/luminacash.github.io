{"version":3,"sources":["components/IconButton.module.css","components/LoadingIcon.module.css","components/Challenges.module.css","components/Address.module.css","components/Category.module.css","hardhat/typechain/factories/LuminaToken__factory.ts","hardhat/typechain/factories/LuminaRecords__factory.ts","hardhat/typechain/factories/LuminaAdmin__factory.ts","hardhat/typechain/factories/LuminaTrustee__factory.ts","hardhat/typechain/factories/ProgressContractLocker__factory.ts","hardhat/typechain/factories/LuminaMarketing__factory.ts","utils/bigNumber.tsx","components/Parameters.ts","app/AppContext.tsx","components/Rules.ts","components/IconButton.tsx","utils/hex.tsx","app/ConnectedAddress.tsx","utils/colors.tsx","components/Err.tsx","components/Network.tsx","utils/error.tsx","app/Web3Modal.tsx","components/Solve.tsx","components/Category.tsx","components/Challenges.tsx","components/LoadingIcon.tsx","token/Launch.tsx","components/Address.tsx","components/CommisionSetting.js","token/YourWallet.tsx","token/Coins.tsx","token/Difficulties.tsx","token/RegisteredBalances.tsx","token/Contracts.tsx","token/Management.tsx","token/Marketing.tsx","token/TokenPage.tsx","components/Referral.tsx","app/AppPage.tsx","app/AppContainer.tsx","components/Icons.js","App.tsx","serviceWorker.ts","index.tsx","app/ConnectedAddress.module.css"],"names":["module","exports","LuminaToken__factory","signer","_abi","_bytecode","name","symbol","initSupply","recordsAddr_","overrides","address","signerOrProvider","Contract","ContractFactory","inputs","internalType","type","stateMutability","anonymous","indexed","outputs","LuminaRecords__factory","LuminaAdmin__factory","components","LuminaTrustee__factory","tokenAddr_","adminAddr_","ProgressContractLocker__factory","erc20Addr_","progressingAddr_","LuminaMarketing__factory","formatBalance","balance","decimals","b1","div","BigNumber","from","pow","b2","mod","toNumber","toLocaleString","isZero","toString","padStart","ZERO","ONE","TEN","ZERO_ADDRESS","MIN_CHALLENGE_DIFFICULTY","demo","REWARDS_CNT_LIMIT","REWARD_UNIT","TOKEN_DECIMALS","deployments","polygon","token","LuminaTokenPolygonDeployment","records","LuminaRecordsPolygonDeployment","admin","LuminaAdminPolygonDeployment","trustee","LuminaTrusteePolygonDeployment","locker","ProgressContractLockerPolygonDeployment","marketing","LuminaMarketingPolygonDeployment","mumbai","LuminaTokenMumbaiDeployment","LuminaRecordsMumbaiDeployment","LuminaAdminMumbaiDeployment","LuminaTrusteeMumbaiDeployment","ProgressContractLockerMumbaiDeployment","LuminaMarketingMumbaiDeployment","localhost","LuminaTokenLocalhostDeployment","LuminaRecordsLocalhostDeployment","LuminaAdminLocalhostDeployment","LuminaTrusteeLocalhostDeployment","ProgressContractLockerLocalhostDeployment","LuminaMarketingLocalhostDeployment","unknown","factories","connect","getContractSigner","network","contract","_signer","contractAddress","getContract","_provider","getAppContext","contextNetwork","contextUrlIndex","setContextNetwork","incContextUrlIndex","rpcProvider","referrer","URLSearchParams","window","location","search","get","config","appConfig","chainId","url","options","Array","isArray","length","Error","urln","ws","startsWith","WebSocketProvider","StaticJsonRpcProvider","pollingInterval","rpcToken","rpcRecords","rpcAdmin","rpcTrustee","rpcLocker","rpcMarketing","AppContext","React","createContext","getRewardUnits","challengeHash","getWalletDifficultyDiscount","h1","h2","n","to","middle","mask","shl","sub","and","findLsb","xor","gte","getDifficultyLabel","difficulty","IconButton","children","cn","useState","hover","setHover","down","setDown","button","css","buttonHover","buttonDown","className","onPointerOver","onPointerOut","onPointerDown","onPointerUp","title","href","target","rel","hexRegex","verifyAddress","hex","test","ConnectedAddress","logo","logoName","changeFn","disconnectFn","trim","valid","shortAddress","substring","invalid","style","position","top","width","src","alt","onClick","icon","text","white","backgroundColor","red","pink","purple","deepPurple","indigo","blue","lightBlue","black","color","cyan","teal","green","lightGreen","yellow","amber","orange","brown","darkGrey","grey","lightgrey","blueGrey","Err","err","Colors","split","map","line","key","useContext","fontWeight","display","blackList","getErrMsg","ex","msg","data","message","see","err0","appConfigChainMap","Object","keys","forEach","initConnection","web3Modal","connected","connection","provider","cancel","Web3Modal","setProvider","setAddress","refreshCnt","setRefreshCnt","conn","setConn","appContext","contextChainId","disconnect","close","a","clearCachedProvider","useEffect","chainChanged","subscribeProvider","on","_disconnect","_accountsChanged","accounts","_chainChanged","chainIdLike","parseInt","removeListener","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","portis","Portis","id","fortmatic","Fortmatic","rpcUrl","authereum","Authereum","description","appName","networkUrl","WalletLink","connector","_","walletLink","makeWeb3Provider","enable","web3modal","cacheProvider","disableInjectedProvider","Web3Provider","listAccounts","getNetwork","console","log","localStorage","getItem","refresh","userOptions","filter","o","Network","solve","blockNumber","solvedDifficulty","status","one","random","isReady","rnd","randomWords","rnds","i","nonce","difficultyN","targetN","stop","cnt","timeMs","setTimeout","batch","startTimeMs","Date","now","digest","keccak256","digestNum","lte","add","endTimeMs","Category","props","cat","Cat2Color","stopAll","runStatus","bnStr","rs","undefined","stopFn","challengesRunStatus","Challenges","challenges","group","registeredBalances","mobile","claimReward","challengesMap","blockNumbers","bn","toHexString","challengeHashes","bal","balances","findBalance","generalDifficulty","MAX_CHALLENGE_DIFFICULTY","totalCnt","addressDiscount","balanceDiscount","getBalanceDifficultyDiscount","adjustedDifficulty","ch","blockNumberHex","claimsCnt","claimed","toChallengesMap","runStatusSnap","setRunStatusSnap","currentAddress","setCurrentAddress","indexes","rewardUnits","nexts","currentChallenges","setCurrentChallenges","nrn","nrs","cmt","targetDifficulty","solved","_refresh","handleStartMining","e","preventDefault","trials","solutionTrials","claiming","trials0","timeMs0","solution","handleStopMining","handleClaimReward","success","textAlign","rewardsCnt","rewardUnit","rewardsCntLimit","progressTitle","progress","startable","stopable","claimable","disabled","height","labelSize","labelColor","bgColor","labelAlignment","animateOnRender","transitionTimingFunction","transitionDuration","completed","maxCompleted","Math","floor","vspinner","spinner","icon2","svg","version","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","fill","stroke","strokeWidth","strokeMiterlimit","cx","cy","r","strokeLinecap","x1","y1","x2","y2","attributeName","dur","repeatCount","launchDate","UTC","launchDateStr","sep","indexOf","launchDateStr1","launchDateStr2","countdownRenderer","days","hours","minutes","seconds","Launch","getTime","margin","date","renderer","Address","commisionOptions","value","label","commisionOptionsMap","customStyles","control","provided","state","background","borderColor","minHeight","boxShadow","isFocused","valueContainer","padding","input","indicatorSeparator","indicatorsContainer","CommisionSetting","handleChange","selectedOption","setCommision","commision","this","styles","placeholder","onChange","Component","YourWallet","contracts","paused","runTx","balanceMatic","lockedBalance","lockedAvailableBalance","faucetUrl","tradeUrl","handleLockBalance","lockerAddress","t","approve","l","deposit","handleWithdrawBalance","withdraw","handleRegisterBalance","registerBalance","alert","marginLeft","marginRight","tokenDecimals","gt","eq","Coins","totalSupply","claimedTokens","availableTokens","totalLockedBalance","difficulties","timeLabels1","timeLabels","timeSpans0","quadYears","trillionYears","billionYears","millionYears","millenium","century","year","week","day","hour","minute","second","timeSpans","ts","time","label1","Difficulties","d","fts","s","RegisteredBalances","slice","Contracts","Management","ownerAddress","handlePause","pause","handleUnpause","unpause","Marketing","marketingCampaignAddrs","setMarketingCampaignAddrs","marketingCampaigns","setMarketingCampaigns","marketingPaused","getCampaigns","addrs","cgns","addr","getCampaign","cgn","campaignId","tokenBudget","active","SmallLogo","loading","sleeping","colors","LoadingIcon","Demo","TokenPage","basicChallenges","premiumChallenges","challengesAllowance","verifyClaim","handleAddChallenges","addChallenges","fontSize","BigLogo","AppPage","Referral","AppContainer","initChallenges","initAppData","txCnt","setTxCnt","theme","setDemo","setSleeping","setSigner","setContracts","appData","setAppData","setErr","setLoading","setOwnerAddress","setPaused","setMarketingPaused","txf","f","tx","wait","confirmations","remove","na","push","claimsListener","recipient","miner","commisionPrc","claimNo","updateChallenges","len","nch","updateBalances","findIndex","reward","mul","commisionListener","wallet","registeredBalanceListener","concat","BALANCE_RECORDS_CNT","addChallengeListener","challenge","premium","readChallenges","transferListener","basicCha","getSigner","ctrs","Promise","all","DEMO","owner","getChallengesAllowance","getClaimedTokens","initRegisteredBalances","balanceOf","getBalance","availableBalanceOf","getCommision","getBalances","prevBalance","timerStartMs","subscribed","subscribeCancel","timerListener","timerId","setInterval","transferFilter1","filters","Transfer","transferFilter2","commisionFilter","Commision","registeredBalanceFilter","RegisteredBalance","clearTimeout","off","subscribe","reason","claimAlert","getReasonLabel","library","faWifi","faHeart","farHeart","faHeartbeat","faExclamationTriangle","faThumbsUp","faHome","faTerminal","faChartLine","faTachometerAlt","faInfo","faMicrochip","faTrophy","faPlus","faMinus","faHandPaper","faCheck","faBackspace","faCalculator","faPercent","faSmile","faUser","faUserMinus","faUserPlus","faRandom","faDiceD20","faSyncAlt","faToggleOn","faToggleOff","faTrashAlt","faFilter","faSearch","faSearchMinus","faSearchPlus","faArrowsAltH","faPlay","faPause","faStop","faShareSquare","faEllipsisH","faRunning","faTh","faGripVertical","faGripHorizontal","faBug","faHistory","faCodeBranch","faGenderless","faTable","faListUl","faBookMedical","faPalette","faCog","faGolfBall","faBowlingBall","faTrashRestore","faCoins","faCopy","faLock","faRecycle","faExternalLinkAlt","faHourglass","faShoppingCart","App","setContextUrlIndex","Provider","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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ACdV,KAAM,GACNW,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEF,OAAQ,GACRT,KAAM,qBACNe,QAAS,CACP,CACEL,aAAc,SACdV,KAAM,GACNW,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEF,OAAQ,GACRT,KAAM,iBACNe,QAAS,CACP,CACEL,aAAc,QACdV,KAAM,GACNW,KAAM,UAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEF,OAAQ,GACRT,KAAM,aACNe,QAAS,CACP,CACEL,aAAc,UACdV,KAAM,GACNW,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,SACdV,KAAM,cACNW,KAAM,UAER,CACED,aAAc,OACdV,KAAM,UACNW,KAAM,SAGVX,KAAM,oBACNe,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,QACdV,KAAM,QACNW,KAAM,UAGVX,KAAM,gBACNe,QAAS,CACP,CACEL,aAAc,QACdV,KAAM,GACNW,KAAM,UAGVC,gBAAiB,aACjBD,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,UACdV,KAAM,eACNW,KAAM,YAGVX,KAAM,gBACNe,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEF,OAAQ,GACRT,KAAM,yBACNe,QAAS,CACP,CACEL,aAAc,QACdV,KAAM,GACNW,KAAM,UAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,OACdV,KAAM,UACNW,KAAM,QAER,CACED,aAAc,QACdV,KAAM,QACNW,KAAM,UAGVX,KAAM,iBACNe,QAAS,CACP,CACEL,aAAc,QACdV,KAAM,WACNW,KAAM,SAER,CACED,aAAc,UACdV,KAAM,UACNW,KAAM,WAER,CACED,aAAc,WACdV,KAAM,eACNW,KAAM,YAER,CACED,aAAc,WACdV,KAAM,cACNW,KAAM,YAER,CACED,aAAc,YACdV,KAAM,kBACNW,KAAM,aAER,CACED,aAAc,UACdV,KAAM,QACNW,KAAM,WAER,CACED,aAAc,WACdV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,KAAM,YAER,CACEF,OAAQ,GACRT,KAAM,UACNe,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,SACdV,KAAM,cACNW,KAAM,UAER,CACED,aAAc,UACdV,KAAM,QACNW,KAAM,WAER,CACED,aAAc,UACdV,KAAM,YACNW,KAAM,WAER,CACED,aAAc,UACdV,KAAM,WACNW,KAAM,YAGVX,KAAM,cACNe,QAAS,CACP,CACEL,aAAc,SACdV,KAAM,cACNW,KAAM,UAER,CACED,aAAc,QACdV,KAAM,SACNW,KAAM,SAER,CACED,aAAc,OACdV,KAAM,UACNW,KAAM,QAER,CACED,aAAc,SACdV,KAAM,aACNW,KAAM,UAER,CACED,aAAc,SACdV,KAAM,YACNW,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,SACdV,KAAM,cACNW,KAAM,UAER,CACED,aAAc,UACdV,KAAM,QACNW,KAAM,WAER,CACED,aAAc,UACdV,KAAM,YACNW,KAAM,WAER,CACED,aAAc,UACdV,KAAM,WACNW,KAAM,YAGVX,KAAM,iBACNe,QAAS,CACP,CACEL,aAAc,SACdV,KAAM,mBACNW,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,aAIJZ,EACJ,28oB,2BC1vBWuB,EAAb,kDACE,WAAYzB,GAAkB,uCACtBC,EAAMC,EAAWF,GAF3B,0CAKE,SACE0B,EACAC,EACApB,GAEA,OAAO,8DACLmB,EACAC,EACApB,GAAa,MAbnB,kCAgBE,SACEmB,EACAC,EACApB,GAEA,OAAO,4EACLmB,EACAC,EACApB,GAAa,MAxBnB,oBA2BE,SAAOC,GACL,OAAO,8DAAaA,KA5BxB,qBA8BE,SAAQR,GACN,OAAO,+DAAcA,MA/BzB,sBAiCE,SACEQ,EACAC,GAEA,OAAO,IAAIC,IACTF,EACAP,EACAQ,OAxCN,GAAqDE,KA6C/CV,EAAO,CACX,CACEW,OAAQ,CACN,CACEC,aAAc,UACdV,KAAM,aACNW,KAAM,WAER,CACED,aAAc,UACdV,KAAM,mBACNW,KAAM,YAGVC,gBAAi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","file":"static/js/main.14afbd0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"IconButton_button__38sbU\",\"buttonHover\":\"IconButton_buttonHover__1fn1s\",\"buttonDown\":\"IconButton_buttonDown__1U4T-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"LoadingIcon_svg__3Kkmg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Challenges_spinner__5R4ih\",\"spin-animation\":\"Challenges_spin-animation__1Wr7k\",\"vspinner\":\"Challenges_vspinner__1n-bc\",\"vspin-animation\":\"Challenges_vspin-animation__2Pba8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"address\":\"Address_address__16qzz\",\"invalid\":\"Address_invalid__171rV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cat\":\"Category_cat__2ALJo\",\"err\":\"Category_err__1S7hS\"};","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, BigNumberish } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaToken } from \"../LuminaToken\";\n\nexport class LuminaToken__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    name: string,\n    symbol: string,\n    initSupply: BigNumberish,\n    recordsAddr_: string,\n    overrides?: Overrides\n  ): Promise<LuminaToken> {\n    return super.deploy(\n      name,\n      symbol,\n      initSupply,\n      recordsAddr_,\n      overrides || {}\n    ) as Promise<LuminaToken>;\n  }\n  getDeployTransaction(\n    name: string,\n    symbol: string,\n    initSupply: BigNumberish,\n    recordsAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      name,\n      symbol,\n      initSupply,\n      recordsAddr_,\n      overrides || {}\n    );\n  }\n  attach(address: string): LuminaToken {\n    return super.attach(address) as LuminaToken;\n  }\n  connect(signer: Signer): LuminaToken__factory {\n    return super.connect(signer) as LuminaToken__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaToken {\n    return new Contract(address, _abi, signerOrProvider) as LuminaToken;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"initSupply\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recordsAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"recordsAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"registerBalance\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b50604051620010a3380380620010a3833981016040819052620000349162000344565b8351849084906200004d906003906020850190620001d1565b50805162000063906004906020840190620001d1565b505050600062000078620000e460201b60201c565b90508060ff166012146200008b57600080fd5b620000af336200009d83600a620004ee565b620000a9908662000506565b620000e9565b50600580546001600160a01b039092166001600160a01b03199283168117909155600680549092161790555062000580915050565b601290565b6001600160a01b038216620001445760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000158919062000528565b90915550506001600160a01b038216600090815260208190526040812080548392906200018790849062000528565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001df9062000543565b90600052602060002090601f0160209004810192826200020357600085556200024e565b82601f106200021e57805160ff19168380011785556200024e565b828001600101855582156200024e579182015b828111156200024e57825182559160200191906001019062000231565b506200025c92915062000260565b5090565b5b808211156200025c576000815560010162000261565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200029f57600080fd5b81516001600160401b0380821115620002bc57620002bc62000277565b604051601f8301601f19908116603f01168101908282118183101715620002e757620002e762000277565b816040528381526020925086838588010111156200030457600080fd5b600091505b8382101562000328578582018301518183018401529082019062000309565b838211156200033a5760008385830101525b9695505050505050565b600080600080608085870312156200035b57600080fd5b84516001600160401b03808211156200037357600080fd5b62000381888389016200028d565b955060208701519150808211156200039857600080fd5b50620003a7878288016200028d565b60408701516060880151919550935090506001600160a01b0381168114620003ce57600080fd5b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000430578160001904821115620004145762000414620003d9565b808516156200042257918102915b93841c9390800290620003f4565b509250929050565b6000826200044957506001620004e8565b816200045857506000620004e8565b81600181146200047157600281146200047c576200049c565b6001915050620004e8565b60ff841115620004905762000490620003d9565b50506001821b620004e8565b5060208310610133831016604e8410600b8410161715620004c1575081810a620004e8565b620004cd8383620003ef565b8060001904821115620004e457620004e4620003d9565b0290505b92915050565b6000620004ff60ff84168362000438565b9392505050565b6000816000190483118215151615620005235762000523620003d9565b500290565b600082198211156200053e576200053e620003d9565b500190565b600181811c908216806200055857607f821691505b602082108114156200057a57634e487b7160e01b600052602260045260246000fd5b50919050565b610b1380620005906000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d7146101b8578063a9059cbb146101cb578063c2cf1cdc146101de578063dd62ed3e146101e857600080fd5b8063395093511461017457806370a082311461018757806395d89b41146101b057600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd146101155780631e7bfd601461012757806323b872dd14610152578063313ce56714610165575b600080fd5b6100dc610221565b6040516100e9919061092e565b60405180910390f35b61010561010036600461099f565b6102b3565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b60055461013a906001600160a01b031681565b6040516001600160a01b0390911681526020016100e9565b6101056101603660046109c9565b6102c9565b604051601281526020016100e9565b61010561018236600461099f565b610378565b610119610195366004610a05565b6001600160a01b031660009081526020819052604090205490565b6100dc6103b4565b6101056101c636600461099f565b6103c3565b6101056101d936600461099f565b61045c565b6101e6610469565b005b6101196101f6366004610a27565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461023090610a5a565b80601f016020809104026020016040519081016040528092919081815260200182805461025c90610a5a565b80156102a95780601f1061027e576101008083540402835291602001916102a9565b820191906000526020600020905b81548152906001019060200180831161028c57829003601f168201915b5050505050905090565b60006102c03384846104fa565b50600192915050565b60006102d684848461061e565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103605760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61036d85338584036104fa565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102c09185906103af908690610a95565b6104fa565b60606004805461023090610a5a565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104455760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610357565b61045233858584036104fa565b5060019392505050565b60006102c033848461061e565b33600090815260208190526040812054600654604051631b15c59960e11b815233600482015260248101839052600160448201529192506001600160a01b03169063362b8b32906064016020604051808303816000875af11580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f69190610abb565b5050565b6001600160a01b03831661055c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610357565b6001600160a01b0382166105bd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610357565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b610629838383610760565b6006546001600160a01b031663552ba3338461065a816001600160a01b031660009081526020819052604090205490565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156106a057600080fd5b505af19250505080156106b1575060015b506006546001600160a01b031663362b8b32836106e3816001600160a01b031660009081526020819052604090205490565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152600060448201526064016020604051808303816000875af1925050508015610751575060408051601f3d908101601f1916820190925261074e91810190610abb565b60015b61075a57505050565b50505050565b6001600160a01b0383166107c45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610357565b6001600160a01b0382166108265760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610357565b6001600160a01b0383166000908152602081905260409020548181101561089e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610357565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108d5908490610a95565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161092191815260200190565b60405180910390a361075a565b600060208083528351808285015260005b8181101561095b5785810183015185820160400152820161093f565b8181111561096d576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461099a57600080fd5b919050565b600080604083850312156109b257600080fd5b6109bb83610983565b946020939093013593505050565b6000806000606084860312156109de57600080fd5b6109e784610983565b92506109f560208501610983565b9150604084013590509250925092565b600060208284031215610a1757600080fd5b610a2082610983565b9392505050565b60008060408385031215610a3a57600080fd5b610a4383610983565b9150610a5160208401610983565b90509250929050565b600181811c90821680610a6e57607f821691505b60208210811415610a8f57634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610ab657634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215610acd57600080fd5b81518015158114610a2057600080fdfea26469706673582212209c3f96b4504cef7d73ba137cba03e598e0c6c339c9805d18e5422456a47b06cc64736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaRecords } from \"../LuminaRecords\";\n\nexport class LuminaRecords__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<LuminaRecords> {\n    return super.deploy(overrides || {}) as Promise<LuminaRecords>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): LuminaRecords {\n    return super.attach(address) as LuminaRecords;\n  }\n  connect(signer: Signer): LuminaRecords__factory {\n    return super.connect(signer) as LuminaRecords__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaRecords {\n    return new Contract(address, _abi, signerOrProvider) as LuminaRecords;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"commisionPrc\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"Commision\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RegisteredBalance\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_DAY\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_DIFFICULTY_STEP\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_NULL\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DEMO\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"LUCKY_NUMBER\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_CNT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_DONOR_BLOCKS\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_REGISTERED_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINERS_CLAIM_MIN_RECIPIENT_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MIN_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARDS_CNT_LIMIT\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_INC\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_STANDARD\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_START\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_DECIMALS\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"rewardUnits\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"_addClaim\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"force\",\n        type: \"bool\",\n      },\n    ],\n    name: \"_registerBalance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"registered\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"_updateBalance\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"firstBlockNumber_\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"_updateFirstBlockNumber\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"adminAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"adminAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"attachAdmin\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"attachToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"trusteeAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"attachTrustee\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"findBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getBalances\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"balances\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint64[]\",\n        name: \"blockNumbers\",\n        type: \"uint64[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64[]\",\n        name: \"blockNumbers\",\n        type: \"uint64[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"getClaims\",\n    outputs: [\n      {\n        internalType: \"uint16[]\",\n        name: \"claimsCnt\",\n        type: \"uint16[]\",\n      },\n      {\n        internalType: \"bool[]\",\n        name: \"claimed\",\n        type: \"bool[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"getClaimsCnt\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n    ],\n    name: \"getCommision\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"commisionPrc\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasClaimed\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"rewardUnits\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint8\",\n        name: \"commisionPrc\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"setCommision\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"tokenAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"trusteeAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaAdmin } from \"../LuminaAdmin\";\n\nexport class LuminaAdmin__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(recordsAddr_: string, overrides?: Overrides): Promise<LuminaAdmin> {\n    return super.deploy(recordsAddr_, overrides || {}) as Promise<LuminaAdmin>;\n  }\n  getDeployTransaction(\n    recordsAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(recordsAddr_, overrides || {});\n  }\n  attach(address: string): LuminaAdmin {\n    return super.attach(address) as LuminaAdmin;\n  }\n  connect(signer: Signer): LuminaAdmin__factory {\n    return super.connect(signer) as LuminaAdmin__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaAdmin {\n    return new Contract(address, _abi, signerOrProvider) as LuminaAdmin;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recordsAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"challenge\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n    ],\n    name: \"AddChallenge\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_DAY\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_DIFFICULTY_STEP\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_NULL\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DEMO\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"LUCKY_NUMBER\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_CNT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_DONOR_BLOCKS\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_REGISTERED_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINERS_CLAIM_MIN_RECIPIENT_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MIN_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARDS_CNT_LIMIT\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_INC\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_STANDARD\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_START\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_DECIMALS\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n    ],\n    name: \"_cleanupChallenge\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint8\",\n        name: \"limit\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"addChallenges\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"trusteeAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"attachTrustee\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getChallengesAllowance\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"limit\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"readChallenges\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"totalCnt\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint8[]\",\n        name: \"indexes\",\n        type: \"uint8[]\",\n      },\n      {\n        internalType: \"uint64[]\",\n        name: \"blockNumbers\",\n        type: \"uint64[]\",\n      },\n      {\n        internalType: \"uint16[]\",\n        name: \"rewardUnits\",\n        type: \"uint16[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"challengeHashes\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint8[]\",\n        name: \"nexts\",\n        type: \"uint8[]\",\n      },\n      {\n        internalType: \"uint16[]\",\n        name: \"claimsCnt\",\n        type: \"uint16[]\",\n      },\n      {\n        internalType: \"bool[]\",\n        name: \"claimed\",\n        type: \"bool[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"recordsAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"retrieveChallenge\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"challengeHash\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"blockNumber\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint16\",\n            name: \"rewardUnits\",\n            type: \"uint16\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"index\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"valid\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"prev\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"next\",\n            type: \"uint8\",\n          },\n        ],\n        internalType: \"struct ChallengeRecords.Challenge\",\n        name: \"ch\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"generalDifficulty\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"trusteeAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaTrustee } from \"../LuminaTrustee\";\n\nexport class LuminaTrustee__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    tokenAddr_: string,\n    recordsAddr_: string,\n    adminAddr_: string,\n    overrides?: Overrides\n  ): Promise<LuminaTrustee> {\n    return super.deploy(\n      tokenAddr_,\n      recordsAddr_,\n      adminAddr_,\n      overrides || {}\n    ) as Promise<LuminaTrustee>;\n  }\n  getDeployTransaction(\n    tokenAddr_: string,\n    recordsAddr_: string,\n    adminAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      tokenAddr_,\n      recordsAddr_,\n      adminAddr_,\n      overrides || {}\n    );\n  }\n  attach(address: string): LuminaTrustee {\n    return super.attach(address) as LuminaTrustee;\n  }\n  connect(signer: Signer): LuminaTrustee__factory {\n    return super.connect(signer) as LuminaTrustee__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaTrustee {\n    return new Contract(address, _abi, signerOrProvider) as LuminaTrustee;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenAddr_\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recordsAddr_\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"adminAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"solution\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"commisionPrc\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"claimNo\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"Claim\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"marketingAddr\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"message\",\n        type: \"string\",\n      },\n    ],\n    name: \"MarketingCallFailed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_DAY\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_DIFFICULTY_STEP\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_NULL\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DEMO\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"LUCKY_NUMBER\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_CNT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_DONOR_BLOCKS\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_REGISTERED_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINERS_CLAIM_MIN_RECIPIENT_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MIN_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARDS_CNT_LIMIT\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_INC\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_STANDARD\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_START\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_DECIMALS\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"adminAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"solution\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"claimReward\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"rewardUnits\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"reason\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"claimsCnt\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getClaimedTokens\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getProgress\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"progress\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"progressMax\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"marketingAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"recordsAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"marketingAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"setMarketingAddr\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"tokenAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unpause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"solution\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"verifyClaim\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"rewardUnits\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"reason\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"rewardsCnt\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"claimsCnt\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"solution\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"verifySolution\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"solvedDifficulty\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b50604051620028e3380380620028e383398101604081905262000034916200025d565b6200003f33620000ca565b6000805460ff60a01b19169055620000566200011a565b600180546001600160a01b039485166001600160a01b03199182168117909255600280549486169482168517905560038054939095169281168317909455600580548516909117905560068054909316909117909155600780546001600160e01b03191690911790556000600855620002a7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146200017a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6200018f6200019160201b620016b71760201c565b565b620001a5600054600160a01b900460ff1690565b15620001e75760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640162000171565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258620002233390565b6040516001600160a01b03909116815260200160405180910390a1565b80516001600160a01b03811681146200025857600080fd5b919050565b6000806000606084860312156200027357600080fd5b6200027e8462000240565b92506200028e6020850162000240565b91506200029e6040850162000240565b90509250925092565b61262c80620002b76000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80638183059311610130578063b91268e8116100b8578063e81ec6121161007c578063e81ec61214610457578063ec2165d31461045f578063f2fde38b14610467578063f668bee51461047a578063f883fcaa146103ba57600080fd5b8063b91268e814610436578063b915dec21461043e578063c28bd11c146103ba578063c28cedf314610446578063c6088d971461044e57600080fd5b80639d941362116100ff5780639d941362146103b2578063a21577671461040b578063a5c9cd8214610413578063a7c1d5901461041b578063b313bd621461042e57600080fd5b806381830593146103c25780638456cb59146103d55780638da5cb5b146103dd578063939c4456146103ee57600080fd5b80633ff42b92116101be5780635fbe4d1d116101825780635fbe4d1d1461038e5780636bb987fe146103a1578063715018a6146103aa57806373d6aafa146103b25780637fb01232146103ba57600080fd5b80633ff42b9214610345578063479e92c814610358578063504b3662146103605780635b7f415c146103685780635c975abb1461037057600080fd5b80631e7bfd60116102055780631e7bfd60146102d257806330db4fa0146102fd5780633a3a7c531461031d5780633e6e387c146103335780633f4ba83a1461033b57600080fd5b806306e38632146102375780630bf43309146102575780630e7d8db9146102715780630ff8a7eb146102bf575b600080fd5b61023f600581565b60405161ffff90911681526020015b60405180910390f35b61025f60d081565b60405160ff909116815260200161024e565b61028461027f366004611ef3565b6104c0565b6040805163ffffffff909616865260ff90941660208601529115159284019290925261ffff918216606084015216608082015260a00161024e565b61023f6102cd366004611ef3565b6108f1565b6002546102e5906001600160a01b031681565b6040516001600160a01b03909116815260200161024e565b61030560c881565b6040516001600160401b03909116815260200161024e565b610325610adf565b60405190815260200161024e565b61023f600281565b610343610af9565b005b6004546102e5906001600160a01b031681565b61025f600a81565b61025f606481565b61025f601281565b600054600160a01b900460ff165b604051901515815260200161024e565b6001546102e5906001600160a01b031681565b61030561996881565b610343610b2d565b61023f600a81565b61025f600281565b6003546102e5906001600160a01b031681565b610343610b89565b6000546001600160a01b03166102e5565b6103f6610bbb565b6040805192835260208301919091520161024e565b61025f60ff81565b610325610c3e565b610343610429366004611f44565b610c4a565b610305600281565b610325610daf565b600854610325565b61037e600181565b61023f6103e881565b610325610dd1565b610305610de9565b610343610475366004611f44565b610df6565b61048d610488366004611ef3565b610e91565b6040805163ffffffff909516855260ff90931660208501529015159183019190915261ffff16606082015260800161024e565b60008060008060006104dc60005460ff600160a01b9091041690565b156105025760405162461bcd60e51b81526004016104f990611f61565b60405180910390fd5b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260075460405163f5d4d8a160e01b81526001600160401b038c1660048201526000916001600160a01b03169063f5d4d8a19060240161012060405180830381865afa15801561058e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b29190612030565b608083015191975091935090915061060c5760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206368616c6c656e6765207265636f7264000000000000000060448201526064016104f9565b600061061e8c8b848660000151611739565b9050600061062e8d8d8d8d6108f1565b905060009850600097508160ff168161ffff16106107e2576005546040516370a0823160e01b81526001600160a01b038d8116600483015260009216906370a0823190602401602060405180830381865afa158015610691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b591906120f4565b9050600660009054906101000a90046001600160a01b03166001600160a01b031663d7a8a2b78f8e6040518363ffffffff1660e01b81526004016107179291906001600160401b039290921682526001600160a01b0316602082015260400190565b602060405180830381865afa158015610734573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610758919061210d565b63ffffffff161561076c57600398506107dc565b8b6001600160a01b03168d6001600160a01b0316141580156107ae575061079560036012612149565b6107a090600a612250565b6107ab90600a61225f565b81105b156107bc57600598506107dc565b8b3b151580156107d257506107d08c611919565b155b156107dc57600698505b506107e7565b600297505b60ff88166108e25760006107fe856000015161198d565b9097509050600261ffff8816111561081557600296505b600660009054906101000a90046001600160a01b03166001600160a01b031663d045d5ae8f6040518263ffffffff1660e01b815260040161086591906001600160401b0391909116815260200190565b602060405180830381865afa158015610882573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a6919061227e565b95508661ffff168661ffff1610156108db57846040015161ffff168161ffff166108d09190612299565b9950600098506108e0565b600498505b505b50505050945094509450945094565b60008054600160a01b900460ff161561091c5760405162461bcd60e51b81526004016104f990611f61565b60075460405163f5d4d8a160e01b81526001600160401b0387166004820152600091829182916001600160a01b03169063f5d4d8a19060240161012060405180830381865afa158015610973573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109979190612030565b9250925092508060ff1660016109ae5760146109b1565b600a5b60ff16111580156109c6575060d060ff821611155b610a125760405162461bcd60e51b815260206004820152601a60248201527f446966666963756c7479206973206f7574206f662072616e676500000000000060448201526064016104f9565b811580610a2157506001821515145b610a2a57600080fd5b82516040805160208101889052908101919091526001600160a01b0380881660608301528816608082015260009060a00160405160208183030381529060405290508051608014610ab55760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420736f6c7574696f6e206461746160581b60448201526064016104f9565b80516020820120610ac581611a26565b610ad1906101006122c5565b9a9950505050505050505050565b610aeb60036012612149565b610af690600a612250565b81565b6000546001600160a01b03163314610b235760405162461bcd60e51b81526004016104f9906122e8565b610b2b611a99565b565b6000546001600160a01b03163314610b575760405162461bcd60e51b81526004016104f9906122e8565b600054600160a01b900460ff1615610b815760405162461bcd60e51b81526004016104f990611f61565b610b2b611b1d565b6000546001600160a01b03163314610bb35760405162461bcd60e51b81526004016104f9906122e8565b610b2b6116b7565b6008546005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b91906120f4565b600854610c38919061231d565b90509091565b610af66012600a612250565b6000546001600160a01b03163314610c745760405162461bcd60e51b81526004016104f9906122e8565b6001600160a01b0381161580610d0757506000546001600160a01b03166001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfc9190612335565b6001600160a01b0316145b610d8d5760405162461bcd60e51b815260206004820152604b60248201527f546865206d61726b6574696e6720636f6e74726163742061646472657373206d60448201527f75737420706f696e7420746f206120636f6e747261637420776974682074686560648201526a1039b0b6b29037bbb732b960a91b608482015260a4016104f9565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610dbb60036012612149565b610dc690600a612250565b610af690600a61225f565b610ddd6012600a612250565b610af6906103e861225f565b610af66199686007612352565b6000546001600160a01b03163314610e205760405162461bcd60e51b81526004016104f9906122e8565b6001600160a01b038116610e855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104f9565b610e8e81611b4d565b50565b600080600080610eab60005460ff600160a01b9091041690565b15610ec85760405162461bcd60e51b81526004016104f990611f61565b6000610ed6898989896104c0565b9398509196509450909250905060ff84166116ab5760008563ffffffff1611610f395760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c995dd85c9908185b5bdd5b9d605a1b60448201526064016104f9565b610f476107d06103e8611b9d565b8563ffffffff161115610f9c5760405162461bcd60e51b815260206004820152601e60248201527f496e76616c6964207265776172642c20616d6f756e7420746f6f20626967000060448201526064016104f9565b6000610fc8610fad60036012612149565b610fb890600a612250565b63ffffffff8089169190611b9d16565b600654604051635665687560e01b81526001600160a01b038b8116600483015292935060009290911690635665687590602401602060405180830381865afa158015611018573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103c9190612378565b9050886001600160a01b03168a6001600160a01b0316146111e9576000611071606461106b8560ff8616611b9d565b90611bb2565b9050600061107f8483611bbe565b60055460405163a9059cbb60e01b81526001600160a01b038e811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156110d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f89190612393565b5060055460405163a9059cbb60e01b81526001600160a01b038e81166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af115801561114c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111709190612393565b508b6001600160a01b03168b6001600160a01b03168e6001600160401b03167f302c08954cd01f3e9a025e113b28fe1600afb14599ebd20d4447981c78fa958e8d878b6040516111da9392919092835260ff91909116602083015261ffff16604082015260600190565b60405180910390a450506112c1565b60055460405163a9059cbb60e01b81526001600160a01b038b81166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af115801561123c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112609190612393565b50604080518981526000602082015261ffff86168183015290516001600160a01b038c811692908c16916001600160401b038f16917f302c08954cd01f3e9a025e113b28fe1600afb14599ebd20d4447981c78fa958e919081900360600190a45b6008546112ce9083611bca565b600855600261ffff85161061131e5760405162461bcd60e51b8152602060048201526016602482015275636c61696d20636f756e7420697320746f6f2062696760501b60448201526064016104f9565b8261ffff168461ffff161061136e5760405162461bcd60e51b8152602060048201526016602482015275636c61696d20636f756e7420697320746f6f2062696760501b60448201526064016104f9565b83611378816123ae565b60065460405163609eb1c360e01b81526001600160401b038f1660048201526001600160a01b038d8116602483015263ffffffff8c1660448301529297509116915063609eb1c390606401600060405180830381600087803b1580156113dd57600080fd5b505af11580156113f1573d6000803e3d6000fd5b505050508261ffff168461ffff16106114ab5760078054600160a01b90046001600160401b0316906014611424836123d0565b82546101009290920a6001600160401b0381810219909316918316021790915560075460405163f7f595fb60e01b8152918e16600483015287151560248301526001600160a01b0316915063f7f595fb90604401600060405180830381600087803b15801561149257600080fd5b505af11580156114a6573d6000803e3d6000fd5b505050505b6004546001600160a01b0316156116a857600480546040516301389dcb60e51b81526001600160401b038e16928101929092526001600160a01b038c811660248401528b8116604484015263ffffffff8a16606484015260ff8416608484015216908190632713b9609060a401600060405180830381600087803b15801561153257600080fd5b505af1925050508015611543575060015b6116a65761154f6123ed565b806308c379a014156116035750611564612409565b8061156f5750611605565b600980546001600160401b0316906000611588836123d0565b91906101000a8154816001600160401b0302191690836001600160401b03160217905550507fe4672f4d62a9c8ce07cefba7f97b1e461ca30161fc35c9095d5aab6c3b77e189600460009054906101000a90046001600160a01b03168e836040516115f593929190612492565b60405180910390a1506116a6565b505b600980546801000000000000000090046001600160401b031690600861162a836123d0565b82546101009290920a6001600160401b03818102199093169183160217909155600454604080516001600160a01b039092168252918f16602082015260609181018290526000918101919091527fe4672f4d62a9c8ce07cefba7f97b1e461ca30161fc35c9095d5aab6c3b77e189915060800160405180910390a15b505b50505b50945094509450949050565b600054600160a01b900460ff16156116e15760405162461bcd60e51b81526004016104f990611f61565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861171c3390565b6040516001600160a01b03909116815260200160405180910390a1565b600654604051630454186960e31b81526001600160a01b0385811660048301526001600160401b038716602483015260009283929116906322a0c34890604401602060405180830381865afa158015611796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ba91906120f4565b905060006117c9848784611bd6565b905060006117d683611ca3565b905060ff8616600a118015906117f0575060d060ff871611155b6118525760405162461bcd60e51b815260206004820152602d60248201527f766572696679436c61696d28293a2067656e6572616c446966666963756c747960448201526c206f7574206f662072616e676560981b60648201526084016104f9565b600061185e8284612507565b90508060ff168760ff16101561187557600061187f565b61187f8188612149565b9450600a60ff8616101561189257600a94505b60ff8516600a118015906118aa575060d060ff861611155b61190d5760405162461bcd60e51b815260206004820152602e60248201527f766572696679436c61696d28293a2061646a7573746564446966666963756c7460448201526d79206f7574206f662072616e676560901b60648201526084016104f9565b50505050949350505050565b600080829050806001600160a01b031663df71f9906040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611979575060408051601f3d908101601f1916820190925261197691810190612393565b60015b6119865750600092915050565b9392505050565b600080826202222260ec82901c14156119af57506101f4936107d09350915050565b61222260f082901c14156119cb575060c8936101f49350915050565b61022260f482901c14156119e55750606493849350915050565b602260fe82901c14156119ff575060329360149350915050565b600260fc82901c1415611a19575060149360059350915050565b50600a9360019350915050565b6000806101005b8061ffff168261ffff161015611a925760006001611a4b838561252c565b61ffff16901c905060006001611a62836002612552565b611a6c9190612562565b9050808611611a7d57819250611a8b565b611a8882600161252c565b93505b5050611a2d565b5092915050565b600054600160a01b900460ff16611ae95760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104f9565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa3361171c565b6000546001600160a01b03163314611b475760405162461bcd60e51b81526004016104f9906122e8565b610b2b60005b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611ba9828461225f565b90505b92915050565b6000611ba9828461258f565b6000611ba98284612562565b6000611ba9828461231d565b6000836001600160a01b03841680821883611bf082611e43565b905061ffff8116611c045750610100611c12565b80611c0e816125a3565b9150505b6000611c2a611c236012600a612250565b8890611bb2565b9050600060018210611c7e5760148361ffff1610611c4a5750601e611c96565b600a8361ffff1610611c7357611c61600a84612149565b611c6c906014612507565b9050611c96565b611c6c8360026125c1565b600a8361ffff161115611c935750600a611c96565b50815b9998505050505050505050565b600080611cbc611cb56012600a612250565b8490611bb2565b90506000611cf0611ccf60036012612149565b611cda90600a612250565b61106b611ce96012600a612250565b8790611ebd565b9050600060018310611da6576103e88310611d0d5750601e611e3b565b6101f48310611d1e5750601c611e3b565b60c88310611d2e5750601a611e3b565b60648310611d3e57506018611e3b565b60328310611d4e57506016611e3b565b60148310611d5e57506014611e3b565b600a8310611d6e57506012611e3b565b60058310611d7e57506010611e3b565b60038310611d8e5750600e611e3b565b60028310611d9e5750600c611e3b565b50600a611e3b565b6101f48210611db757506009611e3b565b60c88210611dc757506008611e3b565b60648210611dd757506007611e3b565b60328210611de757506006611e3b565b60148210611df757506005611e3b565b600a8210611e0757506004611e3b565b60058210611e1757506003611e3b565b60028210611e2757506002611e3b565b60018210611e3757506001611e3b565b5060005b949350505050565b600081611e5257506000919050565b60016101005b8061ffff168261ffff161015611a925760006001611e76838561252c565b61ffff16901c905060006001611e8d836002612552565b611e979190612562565b9050858116611eb257611eab82600161252c565b9350611eb6565b8192505b5050611e58565b6000611ba982846125e2565b6001600160401b0381168114610e8e57600080fd5b6001600160a01b0381168114610e8e57600080fd5b60008060008060808587031215611f0957600080fd5b8435611f1481611ec9565b93506020850135611f2481611ede565b92506040850135611f3481611ede565b9396929550929360600135925050565b600060208284031215611f5657600080fd5b813561198681611ede565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60e081018181106001600160401b0382111715611fb857634e487b7160e01b600052604160045260246000fd5b60405250565b601f8201601f191681016001600160401b0381118282101715611ff157634e487b7160e01b600052604160045260246000fd5b6040525050565b805161ffff8116811461200a57600080fd5b919050565b805160ff8116811461200a57600080fd5b8051801515811461200a57600080fd5b600080600083850361012081121561204757600080fd5b60e081121561205557600080fd5b5060405161206281611f8b565b84518152602085015161207481611ec9565b602082015261208560408601611ff8565b60408201526120966060860161200f565b60608201526120a760808601612020565b60808201526120b860a0860161200f565b60a08201526120c960c0860161200f565b60c082015292506120dc60e08501612020565b91506120eb610100850161200f565b90509250925092565b60006020828403121561210657600080fd5b5051919050565b60006020828403121561211f57600080fd5b815163ffffffff8116811461198657600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168082101561216357612163612133565b90039392505050565b600181815b808511156121a757816000190482111561218d5761218d612133565b8085161561219a57918102915b93841c9390800290612171565b509250929050565b6000826121be57506001611bac565b816121cb57506000611bac565b81600181146121e157600281146121eb57612207565b6001915050611bac565b60ff8411156121fc576121fc612133565b50506001821b611bac565b5060208310610133831016604e8410600b841016171561222a575081810a611bac565b612234838361216c565b806000190482111561224857612248612133565b029392505050565b6000611ba960ff8416836121af565b600081600019048311821515161561227957612279612133565b500290565b60006020828403121561229057600080fd5b611ba982611ff8565b600063ffffffff808316818516818304811182151516156122bc576122bc612133565b02949350505050565b600061ffff838116908316818110156122e0576122e0612133565b039392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561233057612330612133565b500190565b60006020828403121561234757600080fd5b815161198681611ede565b60006001600160401b03808316818516818304811182151516156122bc576122bc612133565b60006020828403121561238a57600080fd5b611ba98261200f565b6000602082840312156123a557600080fd5b611ba982612020565b600061ffff808316818114156123c6576123c6612133565b6001019392505050565b60006001600160401b03808316818114156123c6576123c6612133565b600060033d11156124065760046000803e5060005160e01c5b90565b600060443d10156124175790565b6040516003193d81016004833e81513d6001600160401b03816024840111818411171561244657505050505090565b828501915081518181111561245e5750505050505090565b843d87010160208285010111156124785750505050505090565b61248760208286010187611fbe565b509095945050505050565b60018060a01b0384168152600060206001600160401b0385168184015260606040840152835180606085015260005b818110156124dd578581018301518582016080015282016124c1565b818111156124ef576000608083870101525b50601f01601f19169290920160800195945050505050565b600060ff821660ff84168060ff0382111561252457612524612133565b019392505050565b600061ffff80831681851680830382111561254957612549612133565b01949350505050565b6000611ba961ffff8416836121af565b60008282101561257457612574612133565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261259e5761259e612579565b500490565b600061ffff8216806125b7576125b7612133565b6000190192915050565b600060ff821660ff84168160ff048111821515161561224857612248612133565b6000826125f1576125f1612579565b50069056fea2646970667358221220fa5afe0195ca1f3a32a2019fffcf00c2e32332ee3e7e38f83041e121b4555dc964736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { ProgressContractLocker } from \"../ProgressContractLocker\";\n\nexport class ProgressContractLocker__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    erc20Addr_: string,\n    progressingAddr_: string,\n    overrides?: Overrides\n  ): Promise<ProgressContractLocker> {\n    return super.deploy(\n      erc20Addr_,\n      progressingAddr_,\n      overrides || {}\n    ) as Promise<ProgressContractLocker>;\n  }\n  getDeployTransaction(\n    erc20Addr_: string,\n    progressingAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      erc20Addr_,\n      progressingAddr_,\n      overrides || {}\n    );\n  }\n  attach(address: string): ProgressContractLocker {\n    return super.attach(address) as ProgressContractLocker;\n  }\n  connect(signer: Signer): ProgressContractLocker__factory {\n    return super.connect(signer) as ProgressContractLocker__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ProgressContractLocker {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ProgressContractLocker;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"erc20Addr_\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"progressingAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"availableBalanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"deposit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"erc20Addr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"notAvailableBalanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"progressingAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalLockedBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdraw\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"withdrawAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"withdrawnBalanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b5060405162001e9338038062001e93833981016040819052620000349162000461565b620000d26040518060400160405280600781526020016602637b1b5b2b2160cd1b815250836001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000c19190810190620004af565b6200022e60201b62000c361760201c565b6200012f604051806040016040528060018152602001601360fa1b815250846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000097573d6000803e3d6000fd5b8383838381600390805190602001906200014b9291906200039e565b508051620001619060049060208401906200039e565b5050600580546001600160a01b038086166001600160a01b031992831617909255600680549285169290911682179055604080516349ce222b60e11b8152815192935063939c445692600480830193928290030181865afa158015620001cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f191906200058b565b5050600a80546001600160a01b039788166001600160a01b0319918216179091556009805496909716951694909417909455506200065292505050565b8051825160609184918491600091620002489190620005c6565b6001600160401b0381111562000262576200026262000499565b6040519080825280601f01601f1916602001820160405280156200028d576020820181803683370190505b509050806000805b85518110156200031157858181518110620002b457620002b4620005e1565b01602001516001600160f81b0319168383620002d081620005f7565b945081518110620002e557620002e5620005e1565b60200101906001600160f81b031916908160001a905350806200030881620005f7565b91505062000295565b5060005b84518110156200039157848181518110620003345762000334620005e1565b01602001516001600160f81b03191683836200035081620005f7565b945081518110620003655762000365620005e1565b60200101906001600160f81b031916908160001a905350806200038881620005f7565b91505062000315565b5090979650505050505050565b828054620003ac9062000615565b90600052602060002090601f016020900481019282620003d057600085556200041b565b82601f10620003eb57805160ff19168380011785556200041b565b828001600101855582156200041b579182015b828111156200041b578251825591602001919060010190620003fe565b50620004299291506200042d565b5090565b5b808211156200042957600081556001016200042e565b80516001600160a01b03811681146200045c57600080fd5b919050565b600080604083850312156200047557600080fd5b620004808362000444565b9150620004906020840162000444565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215620004c357600080fd5b82516001600160401b0380821115620004db57600080fd5b818501915085601f830112620004f057600080fd5b81518181111562000505576200050562000499565b604051601f8201601f19908116603f0116810190838211818310171562000530576200053062000499565b8160405282815288868487010111156200054957600080fd5b600093505b828410156200056d57848401860151818501870152928501926200054e565b828411156200057f5760008684830101525b98975050505050505050565b600080604083850312156200059f57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b60008219821115620005dc57620005dc620005b0565b500190565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200060e576200060e620005b0565b5060010190565b600181811c908216806200062a57607f821691505b602082108114156200064c57634e487b7160e01b600052602260045260246000fd5b50919050565b61183180620006626000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806362d8908f116100ad578063a457c2d711610071578063a457c2d714610289578063a9059cbb1461029c578063b6b55f25146102af578063c20704af146102c2578063dd62ed3e146102d557600080fd5b806362d8908f1461021457806370a082311461022757806378f77ebf14610250578063853828b61461027957806395d89b411461028157600080fd5b80632d98ac5e116100f45780632d98ac5e146101aa5780632e1a7d4d146101b2578063313ce567146101c7578063317e3ce0146101d6578063395093511461020157600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd1461018457806325d998bb14610197575b600080fd5b61013961030e565b604051610146919061144d565b60405180910390f35b61016261015d3660046114be565b6103a0565b6040519015158152602001610146565b6002545b604051908152602001610146565b6101626101923660046114e8565b6103b7565b6101766101a5366004611524565b610466565b6101766105bf565b6101c56101c036600461153f565b610630565b005b60405160128152602001610146565b600a546101e9906001600160a01b031681565b6040516001600160a01b039091168152602001610146565b61016261020f3660046114be565b6107a8565b610176610222366004611524565b6107e4565b610176610235366004611524565b6001600160a01b031660009081526020819052604090205490565b61017661025e366004611524565b6001600160a01b031660009081526008602052604090205490565b6101c561081c565b610139610927565b6101626102973660046114be565b610936565b6101626102aa3660046114be565b6109cf565b6101c56102bd36600461153f565b6109dc565b6009546101e9906001600160a01b031681565b6101766102e3366004611558565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461031d9061158b565b80601f01602080910402602001604051908101604052809291908181526020018280546103499061158b565b80156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b5050505050905090565b60006103ad338484610d89565b5060015b92915050565b60006103c4848484610eae565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561044e5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61045b8533858403610d89565b506001949350505050565b6001600160a01b0381166000908152602081905260408120548190600654604080516349ce222b60e11b8152815193945060009384936001600160a01b03169263939c445692600480820193918290030181865afa1580156104cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f091906115c6565b91509150816000141561050857506000949350505050565b8082106105185750909392505050565b6001600160a01b03851660009081526007602052604081205490506000610593836040518060400160405280602081526020017f50726f67726573734c6f636b65723a207a65726f2070726f67726573734d617881525061058c87610586878b610f8390919063ffffffff16565b90610f96565b9190610fa2565b9050818111156105b2576105a78183610fdc565b979650505050505050565b5060009695505050505050565b6005546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561060c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b191906115ea565b33600061063c82610466565b9050808311156106b45760405162461bcd60e51b815260206004820152603760248201527f50726f67726573734c6f636b65723a205769746864726177616c20657863656560448201527f64732074686520617661696c61626c6520616d6f756e740000000000000000006064820152608401610445565b6001600160a01b0382166000908152600760205260409020546106d78185610f83565b6001600160a01b0384166000908152600760209081526040808320939093556008905220546107068186610f83565b6001600160a01b0385166000908152600860205260409020556107298486610fe8565b60055460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af115801561077c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a09190611603565b505050505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103ad9185906107df90869061163b565b610d89565b6001600160a01b038116600090815260208190526040812054600061080884610466565b90506108148282610fdc565b949350505050565b33600061082882610466565b9050600061084b836001600160a01b031660009081526007602052604090205490565b90506108578183610f83565b6001600160a01b0384166000908152600760209081526040808320939093556008905220546108868184610f83565b6001600160a01b0385166000908152600860205260409020556108a98484610fe8565b60055460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529091169063a9059cbb906044016020604051808303816000875af11580156108fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109209190611603565b5050505050565b60606004805461031d9061158b565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156109b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610445565b6109c53385858403610d89565b5060019392505050565b60006103ad338484610eae565b6005546040516323b872dd60e01b81523360048201819052306024830181905260448301859052909290916001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5f9190611603565b50610a6a828461112e565b600654604080516349ce222b60e11b8152815160009384936001600160a01b039091169263939c445692600480830193928290030181865afa158015610ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad891906115c6565b600654604080516349ce222b60e11b815281519496509294506001600160a01b039091169263939c44569260048082019392918290030181865afa158015610b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4891906115c6565b9092509050811561092057808210610be05760405162461bcd60e51b815260206004820152604f60248201527f50726f67726573734c6f636b65723a2070726f6772657373206973203130302560448201527f2c20697420646f6573206e6f74206d616b6520616e792073656e736520746f2060648201526e6465706f73697420616e796d6f726560881b608482015260a401610445565b6000610bef868484601261120d565b6001600160a01b038616600090815260076020526040902054909150610c159082610f83565b6001600160a01b038616600090815260076020526040902055505050505050565b8051825160609184918491600091610c4e919061163b565b67ffffffffffffffff811115610c6657610c66611653565b6040519080825280601f01601f191660200182016040528015610c90576020820181803683370190505b509050806000805b8551811015610d0857858181518110610cb357610cb3611669565b01602001516001600160f81b0319168383610ccd8161167f565b945081518110610cdf57610cdf611669565b60200101906001600160f81b031916908160001a90535080610d008161167f565b915050610c98565b5060005b8451811015610d7c57848181518110610d2757610d27611669565b01602001516001600160f81b0319168383610d418161167f565b945081518110610d5357610d53611669565b60200101906001600160f81b031916908160001a90535080610d748161167f565b915050610d0c565b5090979650505050505050565b6001600160a01b038316610deb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610445565b6001600160a01b038216610e4c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610445565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316600090815260208190526040902054610ed2848484611273565b8115610f7d576001600160a01b03841660009081526007602052604081205490506000610f42836040518060400160405280601c81526020017f50726f67726573734c6f636b65723a207a65726f2062616c616e63650000000081525061058c8786610f9690919063ffffffff16565b9050610f4e8282610fdc565b6001600160a01b038088166000908152600760205260408082209390935590871681522054610c159082610f83565b50505050565b6000610f8f828461163b565b9392505050565b6000610f8f828461169a565b60008183610fc35760405162461bcd60e51b8152600401610445919061144d565b50828481610fd357610fd36116b9565b04949350505050565b6000610f8f82846116cf565b6001600160a01b0382166110485760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610445565b6001600160a01b038216600090815260208190526040902054818110156110bc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610445565b6001600160a01b03831660009081526020819052604081208383039055600280548492906110eb9084906116cf565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ea1565b6001600160a01b0382166111845760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610445565b8060026000828254611196919061163b565b90915550506001600160a01b038216600090815260208190526040812080548392906111c390849061163b565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000806112248461121e8888610f96565b90611441565b9050600061123384600a6117ca565b905060006112458661121e848a610f96565b905060006112538383610fdc565b905060006112658261121e8787610f96565b9a9950505050505050505050565b6001600160a01b0383166112d75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610445565b6001600160a01b0382166113395760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610445565b6001600160a01b038316600090815260208190526040902054818110156113b15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610445565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906113e890849061163b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161143491815260200190565b60405180910390a3610f7d565b6000610f8f82846117d9565b600060208083528351808285015260005b8181101561147a5785810183015185820160400152820161145e565b8181111561148c576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146114b957600080fd5b919050565b600080604083850312156114d157600080fd5b6114da836114a2565b946020939093013593505050565b6000806000606084860312156114fd57600080fd5b611506846114a2565b9250611514602085016114a2565b9150604084013590509250925092565b60006020828403121561153657600080fd5b610f8f826114a2565b60006020828403121561155157600080fd5b5035919050565b6000806040838503121561156b57600080fd5b611574836114a2565b9150611582602084016114a2565b90509250929050565b600181811c9082168061159f57607f821691505b602082108114156115c057634e487b7160e01b600052602260045260246000fd5b50919050565b600080604083850312156115d957600080fd5b505080516020909101519092909150565b6000602082840312156115fc57600080fd5b5051919050565b60006020828403121561161557600080fd5b81518015158114610f8f57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561164e5761164e611625565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561169357611693611625565b5060010190565b60008160001904831182151516156116b4576116b4611625565b500290565b634e487b7160e01b600052601260045260246000fd5b6000828210156116e1576116e1611625565b500390565b600181815b8085111561172157816000190482111561170757611707611625565b8085161561171457918102915b93841c93908002906116eb565b509250929050565b600082611738575060016103b1565b81611745575060006103b1565b816001811461175b576002811461176557611781565b60019150506103b1565b60ff84111561177657611776611625565b50506001821b6103b1565b5060208310610133831016604e8410600b84101617156117a4575081810a6103b1565b6117ae83836116e6565b80600019048211156117c2576117c2611625565b029392505050565b6000610f8f60ff841683611729565b6000826117f657634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220b73d4d7bf08bbb87de03a90044f68daf352fc2733aa3026cb0d16719a86d2d1b64736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaMarketing } from \"../LuminaMarketing\";\n\nexport class LuminaMarketing__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(tokenAddr_: string, overrides?: Overrides): Promise<LuminaMarketing> {\n    return super.deploy(\n      tokenAddr_,\n      overrides || {}\n    ) as Promise<LuminaMarketing>;\n  }\n  getDeployTransaction(\n    tokenAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(tokenAddr_, overrides || {});\n  }\n  attach(address: string): LuminaMarketing {\n    return super.attach(address) as LuminaMarketing;\n  }\n  connect(signer: Signer): LuminaMarketing__factory {\n    return super.connect(signer) as LuminaMarketing__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaMarketing {\n    return new Contract(address, _abi, signerOrProvider) as LuminaMarketing;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"message\",\n        type: \"string\",\n      },\n    ],\n    name: \"CampaignClaimFailed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"tokenAddr\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"message\",\n        type: \"string\",\n      },\n    ],\n    name: \"TokenCallFailed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_DAY\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_DIFFICULTY_STEP\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_NULL\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DEMO\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"LUCKY_NUMBER\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_CNT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_DONOR_BLOCKS\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_REGISTERED_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINERS_CLAIM_MIN_RECIPIENT_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MIN_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARDS_CNT_LIMIT\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_INC\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_STANDARD\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_START\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_DECIMALS\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"rewardUnits\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"commisionPrc\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"_claim\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenBudget\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"ethBudget\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"addBudget\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"addCampaign\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"trusteeAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"attachTrustee\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"getCampaign\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenBudget\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"ethBudget\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"campaignId\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"valid\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"active\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCampaigns\",\n    outputs: [\n      {\n        internalType: \"address[]\",\n        name: \"campaigns\",\n        type: \"address[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasReferral\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"isLuminaFund\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"referrer\",\n        type: \"address\",\n      },\n    ],\n    name: \"referral\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"removeBudget\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"removeCampaign\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"startCampaign\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"stopCampaign\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"tokenAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"trusteeAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unpause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b50604051620029d4380380620029d4833981016040819052620000349162000240565b6200003f3362000098565b6000805460ff60a01b19169055600180546001600160a01b0319163317905562000068620000e8565b600380546001600160a01b039092166001600160a01b031992831681179091556004805490921617905562000272565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b33620000f362000166565b6001600160a01b0316146200014f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b620001646200018260201b62001afe1760201c565b565b60006200017d6200023160201b62001ba31760201c565b905090565b62000196600054600160a01b900460ff1690565b15620001d85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640162000146565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258620002143390565b6040516001600160a01b03909116815260200160405180910390a1565b6000546001600160a01b031690565b6000602082840312156200025357600080fd5b81516001600160a01b03811681146200026b57600080fd5b9392505050565b61275280620002826000396000f3fe6080604052600436106102605760003560e01c8063777b0c2111610144578063b91268e8116100b6578063e3eddde21161007a578063e3eddde2146106c4578063e4663a5b146106e4578063e81ec61214610704578063ec2165d314610719578063f2fde38b1461072e578063f883fcaa1461058757600080fd5b8063b91268e814610670578063c28bd11c14610587578063c28cedf314610685578063c6088d971461069a578063df71f990146106b057600080fd5b80639d941362116101085780639d94136214610552578063a2157767146105ef578063a5c9cd8214610604578063a6b0363314610619578063ac9c4fd31461063b578063b313bd621461065b57600080fd5b8063777b0c21146105675780637fb012321461058757806382e51bd01461059c5780638456cb59146105bc5780638da5cb5b146105d157600080fd5b80633e6e387c116101dd5780635c975abb116101a15780635c975abb1461044e5780635fbe4d1d146104795780636bb987fe14610499578063715018a6146104af578063731301cf146104c457806373d6aafa1461055257600080fd5b80633e6e387c146103e55780633f4ba83a146103fa578063479e92c81461040f578063504b3662146104245780635b7f415c1461043957600080fd5b80631df55679116102245780631df5567914610334578063270d8e0e146103545780632713b9601461037457806330db4fa0146103945780633a3a7c53146103c257600080fd5b806306e386321461026c5780630bf433091461029957806314270b65146102c057806318f053da146102f25780631c505d1d1461031457600080fd5b3661026757005b600080fd5b34801561027857600080fd5b50610281600581565b60405161ffff90911681526020015b60405180910390f35b3480156102a557600080fd5b506102ae60d081565b60405160ff9091168152602001610290565b3480156102cc57600080fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610290565b3480156102fe57600080fd5b5061031261030d366004611f93565b61074e565b005b34801561032057600080fd5b5061031261032f366004611fb7565b6108fc565b34801561034057600080fd5b5061031261034f366004611f93565b610a72565b34801561036057600080fd5b5061031261036f366004611ff0565b610b9f565b34801561038057600080fd5b5061031261038f366004612025565b610df2565b3480156103a057600080fd5b506103a960c881565b60405167ffffffffffffffff9091168152602001610290565b3480156103ce57600080fd5b506103d7611118565b604051908152602001610290565b3480156103f157600080fd5b50610281600281565b34801561040657600080fd5b50610312611132565b34801561041b57600080fd5b506102ae600a81565b34801561043057600080fd5b506102ae606481565b34801561044557600080fd5b506102ae601281565b34801561045a57600080fd5b50600054600160a01b900460ff165b6040519015158152602001610290565b34801561048557600080fd5b506003546102da906001600160a01b031681565b3480156104a557600080fd5b506103a961996881565b3480156104bb57600080fd5b50610312611166565b3480156104d057600080fd5b506105206104df366004611f93565b6001600160a01b0316600090815260086020526040902080546001820154600290920154909260ff8083169261010081048216926201000090910490911690565b60408051958652602086019490945260ff9092169284019290925290151560608301521515608082015260a001610290565b34801561055e57600080fd5b50610281600a81565b34801561057357600080fd5b50610312610582366004611f93565b6111e5565b34801561059357600080fd5b506102ae600281565b3480156105a857600080fd5b506103126105b7366004611f93565b6112b8565b3480156105c857600080fd5b50610312611390565b3480156105dd57600080fd5b506000546001600160a01b03166102da565b3480156105fb57600080fd5b506102ae60ff81565b34801561061057600080fd5b506103d76113c2565b34801561062557600080fd5b5061062e6113ce565b60405161029091906120b2565b34801561064757600080fd5b50610312610656366004611f93565b611430565b34801561066757600080fd5b506103a9600281565b34801561067c57600080fd5b506103d76115fe565b34801561069157600080fd5b50610469600181565b3480156106a657600080fd5b506102816103e881565b3480156106bc57600080fd5b506001610469565b3480156106d057600080fd5b506104696106df366004611f93565b611620565b3480156106f057600080fd5b506103126106ff366004611f93565b6117e0565b34801561071057600080fd5b506103d7611a3e565b34801561072557600080fd5b506103a9611a56565b34801561073a57600080fd5b50610312610749366004611f93565b611a63565b6000546001600160a01b031633146107815760405162461bcd60e51b8152600401610778906120ff565b60405180910390fd5b6001600160a01b03811660009081526008602052604090206002810154610100900460ff166107c25760405162461bcd60e51b815260040161077890612134565b6002810154600780546001600160a01b0385169260ff169081106107e8576107e861216b565b6000918252602090912001546001600160a01b03161461081a5760405162461bcd60e51b815260040161077890612181565b805460055410156108685760405162461bcd60e51b8152602060048201526018602482015277496e636f6e73697374656e7420627564676574206461746160401b6044820152606401610778565b806001015460065410156108b95760405162461bcd60e51b8152602060048201526018602482015277496e636f6e73697374656e7420627564676574206461746160401b6044820152606401610778565b8054600580546000906108cd9084906121ce565b90915550506001810154600680546000906108e99084906121ce565b9091555050600080825560019091015550565b600054600160a01b900460ff1615610912575050565b6001600160a01b03821660009081526008602052604090206002810154610100900460ff166109535760405162461bcd60e51b815260040161077890612134565b6002810154600780546001600160a01b0386169260ff169081106109795761097961216b565b6000918252602090912001546001600160a01b0316146109ab5760405162461bcd60e51b815260040161077890612181565b600281015462010000900460ff1615610a6d57805460018201546040516348d497c760e01b81526001600160a01b03858116600483015233602483015260448201939093526064810191909152849160009182918291908516906348d497c7906084016000604051808303816000875af1158015610a2d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a5591908101906122bd565b925092509250610a688786858585611bb2565b505050505b505050565b6001546001600160a01b03163314610af25760405162461bcd60e51b815260206004820152603760248201527f4f6e6c79547275737465653a206f6e6c792063726561746f722063616e20617460448201527f746163682061207472757374656520636f6e74726163740000000000000000006064820152608401610778565b6002546001600160a01b031615610b715760405162461bcd60e51b815260206004820152603b60248201527f4f6e6c79547275737465653a20746865207472757374656520636f6e7472616360448201527f742068617320616c7265616479206265656e20617474616368656400000000006064820152608401610778565b600180546001600160a01b0319908116909155600280549091166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610bc95760405162461bcd60e51b8152600401610778906120ff565b6001600160a01b03831660009081526008602052604090206002810154610100900460ff16610c0a5760405162461bcd60e51b815260040161077890612134565b6002810154600780546001600160a01b0387169260ff16908110610c3057610c3061216b565b6000918252602090912001546001600160a01b031614610c625760405162461bcd60e51b815260040161077890612181565b82600554610c7091906123b1565b600480546040516370a0823160e01b815230928101929092526001600160a01b0316906370a0823190602401602060405180830381865afa158015610cb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdd91906123c9565b1015610d2b5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420746f6b656e2062616c616e63650000000000006044820152606401610778565b81600654610d3991906123b1565b471015610d885760405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e74206574682062616c616e636500000000000000006044820152606401610778565b8260056000828254610d9a91906123b1565b925050819055508160066000828254610db391906123b1565b9091555050805483908290600090610dcc9084906123b1565b9250508190555081816001016000828254610de791906123b1565b909155505050505050565b6002546001600160a01b03163314610e685760405162461bcd60e51b815260206004820152603360248201527f4f6e6c79547275737465653a206f6e6c7920747275737465652063616e20657860448201527232b1baba32903a3434b990333ab731ba34b7b760691b6064820152608401610778565b600054600160a01b900460ff1615610e7f57611111565b60005b60075463ffffffff8216101561110f57600060078263ffffffff1681548110610ead57610ead61216b565b60009182526020808320909101546001600160a01b03168083526008909152604090912060028101549192509060ff61010090910416610eff5760405162461bcd60e51b815260040161077890612134565b6002810154600780546001600160a01b0385169260ff16908110610f2557610f2561216b565b6000918252602090912001546001600160a01b031614610f575760405162461bcd60e51b815260040161077890612181565b600281015462010000900460ff16156110fa57805460018201546040516303c9f1e760e01b815267ffffffffffffffff8b1660048201526001600160a01b038a81166024830152898116604483015263ffffffff8916606483015260ff8816608483015260a482019390935260c481019190915283918216906303c9f1e79060e4016000604051808303816000875af192505050801561101957506040513d6000823e601f3d908101601f1916820160405261101691908101906122bd565b60015b6110e7576110256123e2565b806308c379a01415611086575061103a6123fe565b806110455750611088565b7f1c78fe569029f719914c6066018a968a8ca4d3810eed21ca6d09951cd0a9f590848b83604051611078939291906124d5565b60405180910390a1506110f8565b505b604080516001600160a01b038516815267ffffffffffffffff8b166020820152606081830181905260009082015290517f1c78fe569029f719914c6066018a968a8ca4d3810eed21ca6d09951cd0a9f5909181900360800190a16110f8565b6110f48686858585611bb2565b5050505b505b5050808061110790612512565b915050610e82565b505b5050505050565b61112460036012612536565b61112f90600a61263f565b81565b6000546001600160a01b0316331461115c5760405162461bcd60e51b8152600401610778906120ff565b611164611e7a565b565b6000546001600160a01b031633146111905760405162461bcd60e51b8152600401610778906120ff565b600054600160a01b900460ff16156111dd5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610778565b611164611efe565b6000546001600160a01b0316331461120f5760405162461bcd60e51b8152600401610778906120ff565b6001600160a01b03811660009081526008602052604090206002810154610100900460ff166112505760405162461bcd60e51b815260040161077890612134565b6002810154600780546001600160a01b0385169260ff169081106112765761127661216b565b6000918252602090912001546001600160a01b0316146112a85760405162461bcd60e51b815260040161077890612181565b600201805462ff00001916905550565b6000546001600160a01b031633146112e25760405162461bcd60e51b8152600401610778906120ff565b6001600160a01b03811660009081526008602052604090206002810154610100900460ff166113235760405162461bcd60e51b815260040161077890612134565b6002810154600780546001600160a01b0385169260ff169081106113495761134961216b565b6000918252602090912001546001600160a01b03161461137b5760405162461bcd60e51b815260040161077890612181565b600201805462ff000019166201000017905550565b6000546001600160a01b031633146113ba5760405162461bcd60e51b8152600401610778906120ff565b611164611afe565b61112f6012600a61263f565b6060600780548060200260200160405190810160405280929190818152602001828054801561142657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611408575b5050505050905090565b6000546001600160a01b0316331461145a5760405162461bcd60e51b8152600401610778906120ff565b6001600160a01b03811660009081526008602052604090206002810154610100900460ff16156114eb5760405162461bcd60e51b815260206004820152603660248201527f5468652063616d706169676e2077697468207468697320636f6e7472616374206044820152756164647265737320616c72656164792065786973747360501b6064820152608401610778565b6007546101001161153e5760405162461bcd60e51b815260206004820152601d60248201527f4e6f206d6f72652063616d706169676e732061726520616c6c6f7765640000006044820152606401610778565b60028101805461010061ff00198216811783556007805461ffff1990931660ff938416179091178355805460018101825560008290527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180546001600160a01b0319166001600160a01b038716908117909155925481549192169081106115c8576115c861216b565b6000918252602090912001546001600160a01b0316146115fa5760405162461bcd60e51b815260040161077890612181565b5050565b61160a60036012612536565b61161590600a61263f565b61112f90600a61264e565b60008054600160a01b900460ff161561167b5760405162461bcd60e51b815260206004820181905260248201527f546865206d61726b6574696e6720636f6e7472616374206973207061757365646044820152606401610778565b6001600160a01b03821660009081526008602052604090206002810154610100900460ff166116bc5760405162461bcd60e51b815260040161077890612134565b6002810154600780546001600160a01b0386169260ff169081106116e2576116e261216b565b6000918252602090912001546001600160a01b0316146117145760405162461bcd60e51b815260040161077890612181565b600281015462010000900460ff1661176e5760405162461bcd60e51b815260206004820152601a60248201527f5468652063616d706169676e206973206e6f74206163746976650000000000006044820152606401610778565b604051632b24a7d560e11b815233600482015283906001600160a01b038216906356494faa90602401602060405180830381865afa1580156117b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d8919061266d565b949350505050565b6000546001600160a01b0316331461180a5760405162461bcd60e51b8152600401610778906120ff565b6001600160a01b03811660009081526008602052604090206002810154610100900460ff1661184b5760405162461bcd60e51b815260040161077890612134565b6002810154600780546001600160a01b0385169260ff169081106118715761187161216b565b6000918252602090912001546001600160a01b0316146118a35760405162461bcd60e51b815260040161077890612181565b6118ac8261074e565b60078054600091906118c0906001906121ce565b815481106118d0576118d061216b565b60009182526020808320909101546001600160a01b0316808352600890915260409091206002015490915060ff610100909104166119505760405162461bcd60e51b815260206004820152601960248201527f496e636f73697374656e742063616d706169676e2064617461000000000000006044820152606401610778565b600280830180546001600160a01b0384166000908152600860205260409020909201805460ff191660ff93841617905554600780548493919290911690811061199b5761199b61216b565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060078054806119da576119da61268f565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556002938401805461ff00191690556001600160a01b0394909416815260089093525060408220828155600181019290925501805462ffffff19169055565b611a4a6012600a61263f565b61112f906103e861264e565b61112f61996860076126a5565b6000546001600160a01b03163314611a8d5760405162461bcd60e51b8152600401610778906120ff565b6001600160a01b038116611af25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610778565b611afb81611f2e565b50565b600054600160a01b900460ff1615611b4b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610778565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611b863390565b6040516001600160a01b03909116815260200160405180910390a1565b6000546001600160a01b031690565b60005b835181101561110f576000848281518110611bd257611bd261216b565b6020026020010151905060006001600160a01b0316816001600160a01b031614611e67578351821015611daf576000848381518110611c1357611c1361216b565b60200260200101519050600081118015611c2e575086548111155b15611dad576004805460405163a9059cbb60e01b81526001600160a01b03858116938201939093526024810184905291169063a9059cbb906044016020604051808303816000875af1925050508015611ca4575060408051601f3d908101601f19168201909252611ca19181019061266d565b60015b611d7957611cb06123e2565b806308c379a01415611d1d5750611cc56123fe565b80611cd05750611d1f565b6003546040517fa76d52006316997771fc50eef565e7d0432c0e464675710e478b3322568b510991611d0f918c916001600160a01b03169085906126d5565b60405180910390a150611dad565b505b600354604080516001600160a01b038b8116825290921660208301526060828201819052600090830152517fa76d52006316997771fc50eef565e7d0432c0e464675710e478b3322568b51099181900360800190a1611dad565b5080876000016000828254611d8e91906121ce565b925050819055508060056000828254611da791906121ce565b90915550505b505b8251821015611e67576000838381518110611dcc57611dcc61216b565b60200260200101519050600081118015611dea575080876001015410155b8015611df65750804710155b15611e65576040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015611e31573d6000803e3d6000fd5b5080876001016000828254611e4691906121ce565b925050819055508060066000828254611e5f91906121ce565b90915550505b505b5080611e7281612701565b915050611bb5565b600054600160a01b900460ff16611eca5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610778565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33611b86565b6000546001600160a01b03163314611f285760405162461bcd60e51b8152600401610778906120ff565b61116460005b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114611afb57600080fd5b600060208284031215611fa557600080fd5b8135611fb081611f7e565b9392505050565b60008060408385031215611fca57600080fd5b8235611fd581611f7e565b91506020830135611fe581611f7e565b809150509250929050565b60008060006060848603121561200557600080fd5b833561201081611f7e565b95602085013595506040909401359392505050565b600080600080600060a0868803121561203d57600080fd5b853567ffffffffffffffff8116811461205557600080fd5b9450602086013561206581611f7e565b9350604086013561207581611f7e565b9250606086013563ffffffff8116811461208e57600080fd5b9150608086013560ff811681146120a457600080fd5b809150509295509295909350565b6020808252825182820181905260009190848201906040850190845b818110156120f35783516001600160a01b0316835292840192918401916001016120ce565b50909695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601b908201527f5468652063616d706169676e20646f6573206e6f742065786973740000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252601a908201527f496e636f6e73697374656e742063616d706169676e206c697374000000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156121e0576121e06121b8565b500390565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715612221576122216121e5565b6040525050565b600067ffffffffffffffff821115612242576122426121e5565b5060051b60200190565b600082601f83011261225d57600080fd5b8151602061226a82612228565b60405161227782826121fb565b83815260059390931b850182019282810191508684111561229757600080fd5b8286015b848110156122b2578051835291830191830161229b565b509695505050505050565b6000806000606084860312156122d257600080fd5b835167ffffffffffffffff808211156122ea57600080fd5b818601915086601f8301126122fe57600080fd5b8151602061230b82612228565b60405161231882826121fb565b83815260059390931b850182019282810191508a84111561233857600080fd5b948201945b8386101561235f57855161235081611f7e565b8252948201949082019061233d565b9189015191975090935050508082111561237857600080fd5b6123848783880161224c565b9350604086015191508082111561239a57600080fd5b506123a78682870161224c565b9150509250925092565b600082198211156123c4576123c46121b8565b500190565b6000602082840312156123db57600080fd5b5051919050565b600060033d11156123fb5760046000803e5060005160e01c5b90565b600060443d101561240c5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561243c57505050505090565b82850191508151818111156124545750505050505090565b843d870101602082850101111561246e5750505050505090565b61247d602082860101876121fb565b509095945050505050565b6000815180845260005b818110156124ae57602081850181015186830182015201612492565b818111156124c0576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038416815267ffffffffffffffff8316602082015260606040820181905260009061250990830184612488565b95945050505050565b600063ffffffff8083168181141561252c5761252c6121b8565b6001019392505050565b600060ff821660ff841680821015612550576125506121b8565b90039392505050565b600181815b8085111561259457816000190482111561257a5761257a6121b8565b8085161561258757918102915b93841c939080029061255e565b509250929050565b6000826125ab57506001612639565b816125b857506000612639565b81600181146125ce57600281146125d8576125f4565b6001915050612639565b60ff8411156125e9576125e96121b8565b50506001821b612639565b5060208310610133831016604e8410600b8410161715612617575081810a612639565b6126218383612559565b8060001904821115612635576126356121b8565b0290505b92915050565b6000611fb060ff84168361259c565b6000816000190483118215151615612668576126686121b8565b500290565b60006020828403121561267f57600080fd5b81518015158114611fb057600080fd5b634e487b7160e01b600052603160045260246000fd5b600067ffffffffffffffff808316818516818304811182151516156126cc576126cc6121b8565b02949350505050565b6001600160a01b0384811682528316602082015260606040820181905260009061250990830184612488565b6000600019821415612715576127156121b8565b506001019056fea26469706673582212205c98edbb1a60c16513755918de06fa0f5d2cb4e276ac68ec3d1004a7758334ff64736f6c634300080b0033\";\n","// import React from 'react'\nimport { BigNumber } from \"@ethersproject/bignumber\"\n\nexport function formatBalance(balance: BigNumber, decimals: number) {\n    const b1 = balance.div(BigNumber.from(10).pow(decimals))\n    const b2 = balance.div(BigNumber.from(10).pow(decimals-3)).mod(1000)\n    const r = b1.toNumber().toLocaleString()+(b2.isZero() ? \"\" : \".\"+b2.toString().padStart(3, \"0\"))\n    return r\n}\n\nexport const ZERO = BigNumber.from(0)\nexport const ONE = BigNumber.from(1)\nexport const TWO = BigNumber.from(2)\nexport const TEN = BigNumber.from(10)\n\n// finds the highest significant bit of the argument\n// the result is encoded as if bits were numbered from 1\n// e.g. findHsb of 0 returns 0\n//      findHsb of 1 returns 1\n//      findHsb of 2 returns 2\n//      findHsb of 4 returns 3\n//      etc.\nexport function findHsb(n: BigNumber): number {\n    let from = 0;\n    let to = 256\n\n    while(from < to) {\n        const middle = (from + to) >> 1\n        const mask = ONE.shl(middle).sub(ONE)\n\n        if(n.lte(mask)) {\n            to = middle\n        } else {\n            from = middle+1\n        }\n    }\n\n    return from\n}\n\n// finds the lowest significant bit of the argument\n// the result is encoded as if bits were numbered from 1\n// e.g. findLsb of 0 returns 0\n//      findLsb of 1 returns 1\n//      findLsb of 2 returns 2\n//      findLsb of 4 returns 3\n//      etc.\nexport function findLsb(n: BigNumber): number {\n    if(n.isZero()) {\n        return 0\n    }\n    let from = 1\n    let to = 256\n\n    while(from < to) {\n        const middle = (from + to) >> 1\n        const mask = ONE.shl(middle).sub(ONE)\n\n        if(n.and(mask).isZero()) {\n            from = middle+1\n        } else {\n            to = middle\n        }\n    }\n\n    return from;\n}\n","//\n// Parameters\n//\n\nimport { TEN } from \"../utils/bigNumber\";\n\n// Types\nexport type Address = string\n\n// Provider polling interval provider.pollingInterval\nexport const POLLING_INTERVAL_MS = 10000\n// Start sleeping after 30 min\nexport const SLEEP_TIMEOUT_MS = 30*60000\n\n// The ZERO Address\nexport const ZERO_ADDRESS: Address = \"0x0000000000000000000000000000000000000000\"\n\n// Polygon chainId is the fallback default\nexport const DEFAULT_CHAIN_ID = 137\n\n// Token Symbol\nexport const TOKEN_SYMBOL = \"LUMI\"\n\n// Limiting number of challenges displayed in a table\nexport const CHALLENGES_LIMIT = 25;\n\n// The lucky number determines the premium challenges\nexport const LUCKY_NUMBER = 2;\n\nexport const CHALLENGE_NULL = 255;\nexport const MAX_CHALLENGE_CNT = 100;\nexport const MIN_CHALLENGE_DIFFICULTY = (demo: boolean) => demo ? 10 : 20;\nexport const MAX_CHALLENGE_DIFFICULTY = (demo: boolean) => demo ? 208 : 218;\nexport const CHALLENGE_DIFFICULTY_STEP = 2;\n\nexport const TOKEN_DECIMALS = 18;\n\nexport const REWARDS_CNT_LIMIT = (demo: boolean) => demo ? 2 : 500;\n\nexport const REWARD_UNIT = TEN.pow(TOKEN_DECIMALS-3) // 0.001 LUMI\n\nexport const BALANCE_RECORDS_CNT = 5\n","import React from 'react'\n\nimport { Contract, providers, Signer } from 'ethers'\nimport { Provider, JsonRpcProvider, WebSocketProvider, StaticJsonRpcProvider } from \"@ethersproject/providers\"\n\nimport LuminaTokenPolygonDeployment from \"../hardhat/deployments/polygon/LuminaToken.json\"\nimport LuminaTokenMumbaiDeployment from \"../hardhat/deployments/mumbai/LuminaToken.json\"\nimport LuminaTokenLocalhostDeployment from \"../hardhat/deployments/localhost/LuminaToken.json\"\nimport { LuminaToken } from \"../hardhat/typechain/LuminaToken\"\nimport { LuminaToken__factory } from \"../hardhat/typechain/factories/LuminaToken__factory\"\n\nimport LuminaRecordsPolygonDeployment from \"../hardhat/deployments/polygon/LuminaRecords.json\"\nimport LuminaRecordsMumbaiDeployment from \"../hardhat/deployments/mumbai/LuminaRecords.json\"\nimport LuminaRecordsLocalhostDeployment from \"../hardhat/deployments/localhost/LuminaRecords.json\"\nimport { LuminaRecords } from \"../hardhat/typechain/LuminaRecords\"\nimport { LuminaRecords__factory } from \"../hardhat/typechain/factories/LuminaRecords__factory\"\n\nimport LuminaAdminPolygonDeployment from \"../hardhat/deployments/polygon/LuminaAdmin.json\"\nimport LuminaAdminMumbaiDeployment from \"../hardhat/deployments/mumbai/LuminaAdmin.json\"\nimport LuminaAdminLocalhostDeployment from \"../hardhat/deployments/localhost/LuminaAdmin.json\"\nimport { LuminaAdmin } from \"../hardhat/typechain/LuminaAdmin\"\nimport { LuminaAdmin__factory } from \"../hardhat/typechain/factories/LuminaAdmin__factory\"\n\nimport LuminaTrusteePolygonDeployment from \"../hardhat/deployments/polygon/LuminaTrustee.json\"\nimport LuminaTrusteeMumbaiDeployment from \"../hardhat/deployments/mumbai/LuminaTrustee.json\"\nimport LuminaTrusteeLocalhostDeployment from \"../hardhat/deployments/localhost/LuminaTrustee.json\"\nimport { LuminaTrustee } from \"../hardhat/typechain/LuminaTrustee\"\nimport { LuminaTrustee__factory } from \"../hardhat/typechain/factories/LuminaTrustee__factory\"\n\nimport ProgressContractLockerPolygonDeployment from \"../hardhat/deployments/polygon/ProgressContractLocker.json\"\nimport ProgressContractLockerMumbaiDeployment from \"../hardhat/deployments/mumbai/ProgressContractLocker.json\"\nimport ProgressContractLockerLocalhostDeployment from \"../hardhat/deployments/localhost/ProgressContractLocker.json\"\nimport { ProgressContractLocker } from \"../hardhat/typechain/ProgressContractLocker\"\nimport { ProgressContractLocker__factory } from \"../hardhat/typechain/factories/ProgressContractLocker__factory\"\n\nimport LuminaMarketingPolygonDeployment from \"../hardhat/deployments/polygon/LuminaMarketing.json\"\nimport LuminaMarketingMumbaiDeployment from \"../hardhat/deployments/mumbai/LuminaMarketing.json\"\nimport LuminaMarketingLocalhostDeployment from \"../hardhat/deployments/localhost/LuminaMarketing.json\"\nimport { LuminaMarketing } from \"../hardhat/typechain/LuminaMarketing\"\nimport { LuminaMarketing__factory } from \"../hardhat/typechain/factories/LuminaMarketing__factory\"\n\nimport { DEFAULT_CHAIN_ID, POLLING_INTERVAL_MS } from '../components/Parameters'\n\nimport appConfig from \"./AppConfig.json\"\n\nexport type AppContextNetworkType = \"polygon\"|\"mumbai\"|\"localhost\"|\"unknown\"\nexport type AppContextContractType = \"token\"|\"records\"|\"admin\"|\"trustee\"|\"locker\"|\"marketing\"\n\nexport interface IAppContext {\n    referrer: string\n    contextNetwork: AppContextNetworkType\n    chainId: number\n\n    rpcProvider: JsonRpcProvider|WebSocketProvider\n    rpcToken: LuminaToken\n    rpcRecords: LuminaRecords\n    rpcAdmin: LuminaAdmin\n    rpcTrustee: LuminaTrustee\n    rpcLocker: ProgressContractLocker\n    rpcMarketing: LuminaMarketing\n\n    setContextNetwork(network: AppContextNetworkType): void\n    incContextUrlIndex(): void\n}\n\nexport const deployments = {\n    polygon: {\n        token: LuminaTokenPolygonDeployment.address,\n        records: LuminaRecordsPolygonDeployment.address,\n        admin: LuminaAdminPolygonDeployment.address,\n        trustee: LuminaTrusteePolygonDeployment.address,\n        locker: ProgressContractLockerPolygonDeployment.address,\n        marketing: LuminaMarketingPolygonDeployment.address,\n    },\n    mumbai: {\n        token: LuminaTokenMumbaiDeployment.address,\n        records: LuminaRecordsMumbaiDeployment.address,\n        admin: LuminaAdminMumbaiDeployment.address,\n        trustee: LuminaTrusteeMumbaiDeployment.address,\n        locker: ProgressContractLockerMumbaiDeployment.address,\n        marketing: LuminaMarketingMumbaiDeployment.address,\n    },\n    localhost: {\n        token: LuminaTokenLocalhostDeployment.address,\n        records: LuminaRecordsLocalhostDeployment.address,\n        admin: LuminaAdminLocalhostDeployment.address,\n        trustee: LuminaTrusteeLocalhostDeployment.address,\n        locker: ProgressContractLockerLocalhostDeployment.address,\n        marketing: LuminaMarketingLocalhostDeployment.address,\n    },\n    // Unknown will fallback to polygon\n    unknown: {\n        token: LuminaTokenPolygonDeployment.address,\n        records: LuminaRecordsPolygonDeployment.address,\n        admin: LuminaAdminPolygonDeployment.address,\n        trustee: LuminaTrusteePolygonDeployment.address,\n        locker: ProgressContractLockerPolygonDeployment.address,\n        marketing: LuminaMarketingPolygonDeployment.address,\n    },\n}\n\nexport const factories: {[key: string]: (address: string, signer: Signer|Provider) => Contract} = {\n   token: LuminaToken__factory.connect,\n   records: LuminaRecords__factory.connect,\n   admin: LuminaAdmin__factory.connect,\n   trustee: LuminaTrustee__factory.connect,\n   locker: ProgressContractLocker__factory.connect,\n   marketing: LuminaMarketing__factory.connect,\n}\n\nexport const getContractSigner = (network: AppContextNetworkType, contract: AppContextContractType, _signer: Signer): Contract => {\n    const contractAddress = deployments[network][contract]\n    const connect = factories[contract]\n    const instance = connect(contractAddress, _signer)\n    return instance\n}\n\nconst getContract = (network: AppContextNetworkType, contract: AppContextContractType, _provider: providers.Provider): Contract => {\n    const contractAddress = deployments[network][contract]\n    const connect = factories[contract]\n    const instance = connect(contractAddress, _provider)\n    return instance\n}\n\nexport const getAppContext = (contextNetwork: AppContextNetworkType, contextUrlIndex: number, setContextNetwork: (network: AppContextNetworkType) => void, incContextUrlIndex: () => void): IAppContext => {\n    const queryParams = new URLSearchParams(window.location.search)\n    const referrer = queryParams.get('ref') || \"\"\n\n    const config = appConfig[contextNetwork]\n    const { chainId, name, url } = config\n    const options = ({name, chainId: chainId || DEFAULT_CHAIN_ID})\n    let rpcProvider\n    if(Array.isArray(url)) {\n        if(url.length === 0) {\n            throw new Error(\"Empty url array in json config\")\n        }\n        const n = contextUrlIndex % url.length\n        const urln = url[n]\n        const ws = urln.startsWith(\"ws://\") || urln.startsWith(\"wss://\")\n        rpcProvider = ws ? new WebSocketProvider(urln, options) : new StaticJsonRpcProvider(urln, options)\n        if(!ws) {\n            rpcProvider.pollingInterval = POLLING_INTERVAL_MS\n        }\n    } else {\n        const ws = url.startsWith(\"ws://\") || url.startsWith(\"wss://\")\n        rpcProvider = ws ? new WebSocketProvider(url, options) : new StaticJsonRpcProvider(url, options)\n        if(!ws) {\n            rpcProvider.pollingInterval = POLLING_INTERVAL_MS\n        }\n    }\n    const rpcToken = getContract(contextNetwork, \"token\", rpcProvider) as LuminaToken\n    const rpcRecords = getContract(contextNetwork, \"records\", rpcProvider) as LuminaRecords\n    const rpcAdmin = getContract(contextNetwork, \"admin\", rpcProvider) as LuminaAdmin\n    const rpcTrustee = getContract(contextNetwork, \"trustee\", rpcProvider) as LuminaTrustee\n    const rpcLocker = getContract(contextNetwork, \"locker\", rpcProvider) as ProgressContractLocker\n    const rpcMarketing = getContract(contextNetwork, \"marketing\", rpcProvider) as LuminaMarketing\n\n    return {\n        referrer,\n        contextNetwork,\n        chainId,\n        rpcProvider,\n        rpcToken,\n        rpcRecords,\n        rpcAdmin,\n        rpcTrustee,\n        rpcLocker,\n        rpcMarketing,\n\n        setContextNetwork,\n        incContextUrlIndex,\n    }\n}\n\nexport const AppContext: React.Context<IAppContext> = React.createContext({} as IAppContext)\n","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { findLsb, ONE, TEN } from \"../utils/bigNumber\"\n\nexport function getRewardUnits(challengeHash: string): [number, number] {\n    let n: [number, number]\n    if(challengeHash.startsWith(\"0x22222\")) {\n        n = [500, 2000]\n    } else if(challengeHash.startsWith(\"0x2222\")) {\n        n = [200, 500]\n    } else if(challengeHash.startsWith(\"0x222\")) {\n        n = [100, 100]\n    } else if(challengeHash.startsWith(\"0x22\")) {\n        n = [50, 20]\n    } else if(challengeHash.startsWith(\"0x2\")) {\n        n = [20, 5]\n    } else {\n        n = [10, 1]\n    }\n    return n\n}\n\nexport function getWalletDifficultyDiscount(challengeHash: string, address: string, balance: BigNumber, decimals: number): number {\n    const h1 = BigNumber.from(challengeHash)\n    const h2 = BigNumber.from(address)\n    let o = h1.xor(h2)\n    let n = findLsb(o)\n    if(n === 0) {\n        n = 256\n    }\n    n--\n\n    const b1 = balance.div(TEN.pow(decimals))\n    if(b1.gte(ONE)) {\n        if(n >= 20) {\n            n = 30\n        } else if(n >= 10) {\n            n = 20 + (n - 10)\n        } else {\n            n = 2 * n\n        }\n    } else {\n        if(n > 10) {\n            n = 10\n        }\n    }\n\n    return n\n}\n\nexport function getBalanceDifficultyDiscount(balance: BigNumber, decimals: number): number {\n    const b1 = balance.div(TEN.pow(decimals))\n    const b2 = balance.mod(TEN.pow(decimals)).div(TEN.pow(decimals-3))\n    let discount\n    if(b1.gte(ONE)) {\n        if(b1.gte(BigNumber.from(1000))) {\n            discount = 2 * 10 + 10\n        } else if(b1.gte(BigNumber.from(500))) {\n            discount = 2 * 9 + 10\n        } else if(b1.gte(BigNumber.from(200))) {\n            discount = 2 * 8 + 10\n        } else if(b1.gte(BigNumber.from(100))) {\n            discount = 2 * 7 + 10\n        } else if(b1.gte(BigNumber.from(50))) {\n            discount = 2 * 6 + 10\n        } else if(b1.gte(BigNumber.from(20))) {\n            discount = 2 * 5 + 10\n        } else if(b1.gte(TEN)) {\n            discount = 2 * 4 + 10\n        } else if(b1.gte(BigNumber.from(5))) {\n            discount = 2 * 3 + 10\n        } else if(b1.gte(BigNumber.from(3))) {\n            discount = 2 * 2 + 10\n        } else if(b1.gte(BigNumber.from(2))) {\n            discount = 2 * 1 + 10\n        } else {\n            discount = 2 * 0 + 10\n        }\n    } else {\n        if(b2.gte(BigNumber.from(500))) {\n            discount = 9\n        } else if(b2.gte(BigNumber.from(200))) {\n            discount = 8\n        } else if(b2.gte(BigNumber.from(100))) {\n            discount = 7\n        } else if(b2.gte(BigNumber.from(50))) {\n            discount = 6\n        } else if(b2.gte(BigNumber.from(20))) {\n            discount = 5\n        } else if(b2.gte(TEN)) {\n            discount = 4\n        } else if(b2.gte(BigNumber.from(5))) {\n            discount = 3\n        } else if(b2.gte(BigNumber.from(2))) {\n            discount = 2\n        } else if(b2.gte(ONE)) {\n            discount = 1\n        } else {\n            discount = 0\n        }\n    }\n    return discount\n}\n\nexport function getDifficultyLabel(difficulty: number): string {\n    let s = \"\"\n\n    if(difficulty <= 20) {\n        s = \"too easy\"\n    } else if(difficulty <= 30) {\n        s = \"easy\"\n    } else if(difficulty <= 40) {\n        s = \"medium\"\n    } else if(difficulty <= 50) {\n        s = \"hard\"\n    } else if(difficulty <= 60) {\n        s = \"very hard\"\n    } else if(difficulty <= 70) {\n        s = \"extremely hard\"\n    } else if(difficulty <= 80) {\n        s = \"almost impossible\"\n    } else if(difficulty <= 90) {\n        s = \"impossible\"\n    } else {\n        s = \"a miracle\"\n    } \n\n    return s;\n}\n\nexport function getReasonLabel(reason: number) {\n    let s = \"\"\n\n    if(typeof(reason) === \"string\") {\n        return reason\n    }\n    switch(reason) {\n        case 0:\n            s = \"Request satisfies all criteria to claim the tokens (at this moment)\"\n            break\n        case 1:\n            s = \"blockNumber does not exist or has no live challenge assigned right now\"\n            break\n        case 2:\n            s = \"Invalid or weak solution\"\n            break\n        case 3:\n            s = \"This challenge has already been claimed by this address\"\n            break\n        case 4:\n            s = \"All available rewards have been claimed already\"\n            break\n        case 5:\n            s = \"Recipient's address is not eligible for rewards, external miners can only make claims on addresses with at least 0.001 LUMI\"\n            break\n        case 6:\n            s = \"recipient's address is not eligible for rewards, it is a contract that is not a Lumina Fund\"\n            break\n        case 100:\n            s = \"Invalid claim string\"\n            break\n        case 101:\n            s = \"The contract is paused\"\n            break\n        default:\n            s = \"Unknown Reason #\" + reason\n            break\n    }\n\n    return s\n}\n","import React, { useState } from 'react'\n\nimport css from \"./IconButton.module.css\"\n\nexport interface IconButtonProps {\n    url?: string\n    cn?: string\n    children: JSX.Element\n}\n\nconst IconButton: React.FC<IconButtonProps> = ({url, children, cn}) => {\n    const [hover, setHover] = useState(false);\n    const [down, setDown] = useState(false);\n    const { button, buttonHover, buttonDown } = css\n    const className = down ? buttonDown : hover ? buttonHover : (cn || button)\n\n    return <span\n        onPointerOver={()=> setHover(true)}\n        onPointerOut={() => setHover(false)}\n        onPointerDown={()=> setDown(true)}\n        onPointerUp={() => setDown(false)}\n    >\n        {url ? <a title={url} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <button className={className}>{children}</button>\n        </a> : <button className={className}>{children}</button>}\n    </span>\n}\n\nexport default IconButton\n","\nconst hexRegex = /0x[a-fA-F0-9]+/\n\nexport function verifyHex(hex: string) {\n    return hexRegex.test(hex)\n}\n\nexport function verifyHex256(hex: string) {\n    return hex.length === 66 && hexRegex.test(hex)\n}\n\nexport function verifyAddress(address: string) {\n    return address.length === 42 && verifyHex(address)\n}\n","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport IconButton from \"../components/IconButton\"\n\nimport { verifyAddress } from \"../utils/hex\"\n\nimport css from \"./ConnectedAddress.module.css\"\n\nexport interface AddressProps {\n    children: string\n    chainId: number\n    logo: string\n    logoName: string\n    changeFn: () => void\n    disconnectFn: () => void\n}\n\nconst ConnectedAddress: React.FC<AddressProps> = ({children: address, chainId, logo, logoName, changeFn, disconnectFn}) => {\n    const url = chainId === 80001 ? \"http://mumbai.polygonscan.com/address\" : \"http://polygonscan.com/address\"\n\n    if(!address) {\n        return null\n    }\n\n    address = address.trim()\n    if(!address) {\n        return null\n    }\n\n    const valid = verifyAddress(address)\n    const shortAddress = address.substring(0, 8)+\"-\"+address.substring(address.length-8)\n    return <span className={css.connect+(!valid?\" \"+css.invalid:\"\")}>\n        {logo && <><img style={{position: \"relative\", top: \"2px\"}} title={logoName} width=\"16px\" src={logo} alt={logoName}/>&nbsp;</>}\n        <button className={css.address} onClick={changeFn}>\n            <code>{shortAddress}</code>\n        </button>\n        <IconButton cn={css.button}>\n            <FontAwesomeIcon title=\"Disconnect\" icon=\"lock\" onClick={disconnectFn}/>\n        </IconButton>\n        {address && <CopyToClipboard text={address}>\n            <span title={\"Copy: \"+address}>\n                <IconButton cn={css.button}>\n                    <FontAwesomeIcon icon={[\"far\", \"copy\"]}/>\n                </IconButton>\n            </span>\n        </CopyToClipboard>}\n        <IconButton url={url+\"/\"+address} cn={css.button}>\n            <FontAwesomeIcon title={url+\"/\"+address} icon=\"external-link-alt\"/>\n        </IconButton>\n    </span>\n}\n\nexport default ConnectedAddress\n","/* https://htmlcolorcodescom/color-chart/material-design-color-chart/   \n    \nRed #FFCDD2\nPink    #F8BBD0\nPurple  #E1BEE7\nDeep Purple #D1C4E9\nIndigo  #C5CAE9\nBlue    #BBDEFB\nLight Blue  #B3E5FC\nCyan    #B2EBF2\nTeal    #B2DFDB\nGreen   #C8E6C9\nLight Green #DCEDC8\nLime    #F0F4C3\nYellow  #FFF9C4\nAmber   #FFECB3\nOrange  #FFE0B2\nDeep Orange #FFCCBC\nBrown   #D7CCC8\nGrey    #F5F5F5\nBlue Grey   #CFD8DC */\n\nexport default {\nwhite: {\n    backgroundColor: \"white\",\n},\n\nred: {\n    backgroundColor: \"#FFCDD2\",\n},\n\npink: {\n    backgroundColor: \"#F8BBD0\",\n},\n\npurple: {\n    backgroundColor: \"#E1BEE7\",\n},\n\ndeepPurple: {\n    backgroundColor: \"#D1C4E9\",\n},\n\nindigo: {\n    backgroundColor: \"#C5CAE9\",\n},\n\nblue: {\n    backgroundColor: \"#BBDEFB\",\n},\n\nlightBlue: {\n    backgroundColor: \"#B3E5FC\",\n},\n\nblack: {\n    backgroundColor: \"#000000\",\n    color: \"white\",\n},\n\ncyan: {\n    backgroundColor: \"#B2EBF2\",\n},\n\nteal: {\n    backgroundColor: \"#B2DFDB\",\n},\n\ngreen: {\n    backgroundColor: \"#C8E6C9\",\n},\n\nlightGreen: {\n    backgroundColor: \"#DCEDC8\",\n},\n\nyellow: {\n    backgroundColor: \"#FFF9C4\",\n},\n\namber: {\n    backgroundColor: \"#FFECB3\",\n},\n\norange: {\n    backgroundColor: \"#FFE0B2\",\n},\n\nbrown: {\n    backgroundColor: \"#D7CCC8\",\n},\n\ndarkGrey: {\n    backgroundColor: \"#D8D8D8\",\n},\n\ngrey: {\n    backgroundColor: \"#E8E8E8\",\n},\n\nlightgrey: {\n    backgroundColor: \"#F5F5F5\",\n},\n\nblueGrey: {\n    backgroundColor: \"#CFD8DC\",\n},\n}\n","import React from 'react'\n\nimport Colors from \"../utils/colors\"\n\nexport interface ErrProps {\n    err: string\n}\n\nconst Err: React.FC<ErrProps> = ({err}) => {\n    if(!err) {\n        return null\n    }\n    return <h2 style={Colors.red}>{err.toString().split(\"\\n\").map((line:string, key: number)=><div key={key}>{line}</div>)}</h2>\n}\n\nexport default Err\n","import React, { useContext } from 'react'\n\nimport { AppContext } from '../app/AppContext'\n\nimport appConfig from \"../app/AppConfig.json\"\n\nexport default () => {\n    const appContext = useContext(AppContext)\n    const { contextNetwork } = appContext\n\n    const config = appConfig[contextNetwork]\n\n    return contextNetwork !== \"polygon\" && contextNetwork !== \"unknown\" ? \n        <h2 style={{color: \"red\"}}><span style={{fontWeight: \"bold\"}}>Network:</span> {config.display} ({config.chainId})</h2>\n    : null\n}\n","\nconst blackList: {[key: string]: boolean} = {\n    \"header not found\": true,\n    \"Internal error\": true,\n    \"Internal JSON-RPC error.\": true,\n    \"project ID request rate exceeded\": true,\n}\n\nexport const getErrMsg = (ex: any): string => {\n    let msg = ex.data && ex.data.message ? ex.data.message : ex.message ? ex.message : ex.toString()\n    if(msg.startsWith(\"Error: \")) {\n        msg = msg.substring(7)\n    }\n    if(ex.data && ex.data.see) {\n        msg += \"\\nSee: \"+ex.data.see\n    }\n    const err0 = \"VM Exception while processing transaction: revert \"\n    if(msg && msg.startsWith(err0)) {\n        msg = msg.substring(err0.length)\n    }\n    if(blackList[msg]) {\n        msg = \"\"\n    }\n    return msg\n}\n","import React, {useContext, useEffect, useState} from 'react'\nimport { ExternalProvider, Web3Provider } from \"@ethersproject/providers\"\nimport web3modal from \"web3modal\"\nimport WalletConnectProvider from \"@walletconnect/web3-provider\"\n\nimport Authereum from \"authereum\"\nimport Fortmatic from \"fortmatic\"\nimport Portis from \"@portis/web3\"\nimport WalletLink from \"walletlink\"\n\nimport { AppContext } from \"./AppContext\"\nimport { AppContextNetworkType } from \"./AppContext\"\nimport ConnectedAddress from './ConnectedAddress'\n\nimport { ZERO_ADDRESS } from \"../components/Parameters\"\nimport Err from '../components/Err'\nimport Network from '../components/Network'\nimport { getErrMsg } from '../utils/error'\n\nimport appConfig from \"./AppConfig.json\"\nimport css from \"./ConnectedAddress.module.css\"\n\nconst appConfigChainMap: {[key: string]: AppContextNetworkType} = {}\nObject.keys(appConfig).forEach((network: string) => {\n  const config = appConfig[network as AppContextNetworkType]\n  appConfigChainMap[config.chainId.toString()] = network as AppContextNetworkType\n})\n\nexport interface Web3ModalProps {\n  setProvider: (provider: Web3Provider|null) => void\n  setAddress: (address: string) => void\n}\n\ntype ConnectionType = { web3Modal: web3modal|null, connected: boolean, connection: ExternalProvider|null, provider: Web3Provider|null, chainId: number, address: string, cancel: (()=>void)|null, err: string }\nconst initConnection: ConnectionType = { web3Modal: null, connected: false, connection: null, provider: null, chainId: 0, address: ZERO_ADDRESS, cancel: null, err: \"\" }\n\nconst Web3Modal: React.FC<Web3ModalProps> = ({setProvider, setAddress}) => {\n  const [refreshCnt, setRefreshCnt] = useState(0)\n  const [conn, setConn] = useState(initConnection)\n\n  const appContext = useContext(AppContext)\n  const { contextNetwork, chainId: contextChainId, setContextNetwork } = appContext\n\n  const config = appConfig[contextNetwork]\n\n  const close = () => {\n    // console.log(\"Closing...\", conn)\n  }\n\n  const disconnect = async (conn: ConnectionType, close: boolean) => {\n    if(conn.connected) {\n      const { web3Modal, connection, cancel } = conn\n      if(cancel) {\n        cancel()\n      }\n      if(close && connection && (connection as any).close) {\n        await (connection as any).close()\n      }\n      if(web3Modal) {\n        web3Modal.clearCachedProvider()\n      }\n      setProvider(null)\n      setConn(initConnection)\n      if(!close) {\n        setRefreshCnt(refreshCnt+1)\n      }\n    }\n  }\n\n  useEffect(() => {\n    const chainChanged = (chainId: number) => {\n      const network = appConfigChainMap[chainId.toString()]\n      if(!network) {\n        const err = \"Network Not Supported (ChainId: \"+chainId+\")\\nPlease Connect to Polygon Network\"\n        setProvider(null)\n        setContextNetwork(\"unknown\")\n        setConn((conn: ConnectionType) => {\n          return { ...conn, err }\n        })\n      } else if(contextChainId !== chainId) {\n        setProvider(null)\n        setContextNetwork(network)\n        setConn((conn: ConnectionType) => {\n          return { ...conn, err: \"\" }\n        })\n      }\n    }\n  \n    const subscribeProvider = (provider: any) => {\n      if (!provider.on) {\n        return null\n      }\n  \n      const _disconnect = () => close()\n      const _accountsChanged = async (accounts: Array<string>) => {\n        if(accounts.length > 0) {\n          setAddress(accounts[0])\n          setConn((conn: ConnectionType) => {\n            return { ...conn, address: accounts[0] }\n          })\n        }\n      }\n      const _chainChanged = async (chainIdLike: number|string) => {\n        const chainId = typeof(chainIdLike) === \"number\" ? chainIdLike : parseInt(chainIdLike, chainIdLike.startsWith(\"0x\")?16:10)\n        chainChanged(chainId)\n      }\n  \n      provider.on(\"disconnect\", _disconnect)\n      provider.on(\"accountsChanged\", _accountsChanged)\n      provider.on(\"chainChanged\", _chainChanged)\n  \n      if(provider.removeListener) {\n        return () => {\n          provider.removeListener(\"disconnect\", _disconnect)\n          provider.removeListener(\"accountsChanged\", _accountsChanged)\n          provider.removeListener(\"chainChanged\", _chainChanged)\n        }\n      }\n  \n      return () => {}\n    }\n  \n    async function connect() {\n      const providerOptions = {\n        walletconnect: {\n          package: WalletConnectProvider, // required\n          options: {\n            infuraId: \"INFURA_ID\" // required\n          }\n        },\n        portis: {\n          package: Portis,\n          options: {\n            id: \"PORTIS_ID\" // required\n          }\n        },\n        fortmatic: {\n          package: Fortmatic,\n          options: {\n            key: \"FORTMATIC_KEY\", // required,\n            network: { // if we don't pass it, it will default to localhost:8454\n              rpcUrl: config.url,\n              chainId: config.chainId\n            }\n          }\n        },\n        authereum: {\n          package: Authereum\n        },\n        'custom-coinbase': {\n          display: {\n            logo: 'images/coinbase_wallet_appicon.svg', \n            name: 'CoinbaseWallet',\n            description: 'Scan with WalletLink to connect',\n          },\n          options: {\n            appName: 'LuminaCash', // Your app name\n            networkUrl: config.url,\n            chainId: config.chainId,\n          },\n          package: WalletLink,\n          connector: async (_: any, options: any) => {\n            const { appName, networkUrl, chainId } = options\n            const walletLink = new WalletLink({\n              appName\n            })\n            const provider = walletLink.makeWeb3Provider(networkUrl, chainId)\n            await provider.enable()\n            return provider\n          },\n        },\n      }\n  \n      try {\n        let web3Modal: web3modal\n        let connection: ExternalProvider\n        try {\n            web3Modal = new web3modal({\n            cacheProvider: true, // optional\n            disableInjectedProvider: false,\n            providerOptions // required\n          })\n  \n          connection = await web3Modal.connect()\n        } catch(ex) {\n            if(ex === \"Modal closed by user\") {\n              throw ex\n            }\n            web3Modal = new web3modal({\n            cacheProvider: false, // optional\n            disableInjectedProvider: true,\n            providerOptions // required\n          })\n          web3Modal.clearCachedProvider()\n  \n          connection = await web3Modal.connect()\n        }\n        const provider = new Web3Provider(connection)\n        const accounts = await provider.listAccounts()\n        const address = accounts[0]\n        const chainId = (await provider.getNetwork()).chainId\n  \n        setConn((conn: ConnectionType) => {\n          if(conn.cancel) {\n            conn.cancel()\n          }\n          const cancel = subscribeProvider(connection)\n          return {\n            web3Modal,\n            connected: true,\n            connection,\n            provider,\n            chainId,\n            address,\n            cancel,\n            err: \"\",\n          }\n        })\n\n        setAddress(address)\n        if(chainId === config.chainId) {\n          setProvider(provider)\n        } else {\n          chainChanged(chainId)\n        }\n\n      } catch(ex) {\n        const msg = getErrMsg(ex)\n        if(msg !== \"Modal closed by user\") {\n          console.log(\"Web3Modal Error:\", msg)\n          setConn((conn: ConnectionType) => {\n            return { ...conn, err: msg }\n          })\n        }\n      }\n    }\n    \n    const refresh = async () => {\n      if (refreshCnt > 0 || localStorage.getItem(\"WEB3_CONNECT_CACHED_PROVIDER\") !== null) {\n        connect()\n      }\n    }\n    refresh()\n  }, [refreshCnt, config, contextChainId, setContextNetwork, setProvider, setAddress])\n\n  const { web3Modal, connection, connected, chainId, address, err} = conn\n  let userOptions = null\n  let logo = \"\"\n  let logoName = \"\"\n  if(web3Modal && connection) {\n    const a = (web3Modal as any).userOptions.filter((o: any) => (connection as any)[\"is\"+o.name])\n    if(a.length > 0) {\n      userOptions = a[0]\n      logo = userOptions.logo\n      logoName = userOptions.name\n    }\n  }\n  return <div>\n    <Err err={err}/>\n    <span title={connected ? \"The address of your wallet\" : \"Connect to your wallet\"}>\n      {connected ? \n      <ConnectedAddress chainId={chainId} logoName={logoName} logo={logo} changeFn={() => disconnect(conn, false)} disconnectFn={() => disconnect(conn, true)}>{address}</ConnectedAddress> : \n      <button className={css.connect} onClick={() => setRefreshCnt(refreshCnt+1)}>Connect Wallet</button>}\n    </span>\n    <Network/>\n    </div>\n}\n\nexport default Web3Modal\n","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { keccak256 } from \"@ethersproject/solidity\"\nimport { random } from \"sjcl\"\n\n\nexport default function solve(\n    blockNumber: BigNumber,\n    challengeHash: string,\n    address: string,\n    solvedDifficulty: number,\n    status: (trials:number, timeMs: number, solution?: BigNumber, solvedDifficulty?: number)=>void,\n) {\n    const one = BigNumber.from(1)\n\n    // Generate some good random number here\n    if(!random.isReady()) {\n        throw new Error(\"RNG is not ready\")\n    }\n    const rnd = random.randomWords(8)\n    let rnds = \"0x\"\n    for(let i = 0; i < 8; i++) {\n        const r = rnd[i] >>> 0\n        rnds += r.toString(16)\n    }\n    let nonce = BigNumber.from(rnds)\n    let difficultyN = solvedDifficulty + 1\n    // The solution must be <= target to pass\n    let targetN = one.shl(256-difficultyN).sub(one)\n\n    let stop = false\n    let cnt = 0\n    let timeMs = 0;\n\n    function batch() {\n        if(stop) {\n            return\n        }\n        const startTimeMs = Date.now()\n        for(let i = 0; i < 1000; i++) {\n            cnt++\n            const digest = keccak256([ \"uint256\", \"uint256\", \"uint256\", \"uint256\" ], [ nonce, BigNumber.from(challengeHash), BigNumber.from(address), BigNumber.from(address) ])\n            const digestNum = BigNumber.from(digest)\n            if(digestNum.lte(targetN)) {\n                solvedDifficulty = difficultyN\n                while(digestNum.lte(targetN)) {\n                    solvedDifficulty = difficultyN\n                    difficultyN++;\n                    targetN = one.shl(256-difficultyN).sub(one)\n                }\n                status(cnt, timeMs, nonce, solvedDifficulty)\n                if(stop) {\n                    // Found the required solution!\n                    return\n                }\n            }\n            nonce = nonce.add(one)\n            if((cnt % 1000) === 0) {\n                status(cnt, timeMs)\n            }\n        }\n        if(!stop) {\n            setTimeout(batch, 0)\n        }\n        const endTimeMs = Date.now()\n        timeMs += endTimeMs - startTimeMs\n    }\n\n    if(!stop) {\n        setTimeout(batch, 0)\n    }\n\n    return () => stop = true\n}\n","import React from 'react'\n\nimport css from './Category.module.css'\n\nconst Cat2Color = (cat: string) => {\n  let color\n  switch(cat) {\n    case \"too easy\":\n        color = \"white\" // white\n        break\n    case \"easy\":\n      color = \"#ffff9c\" // yellow\n      break\n    case \"medium\":\n      color = \"#ffcf9c\" // orange\n      break\n    case \"hard\":\n      color = \"pink\" // \"#ff1010\"\n      break\n      case \"very hard\":\n        color = \"#ff9c9c\" // red\n        break\n      case \"extremely hard\":\n        color = \"#E1BEE7\" // purple\n        break\n    default:\n      color = \"#D1C4E9\" // deep purple\n      break\n  }\n  return color\n}\n\nconst Category = (props: any) => {\n  const { style, cat } = props\n  const color = Cat2Color(cat)\n\n  return <span title={cat} style={{...style, backgroundColor: color}} className={css.cat}>\n    &nbsp;\n    {props.children}\n    &nbsp;\n  </span>\n}\n\nexport default Category\n","import React, { useState, useEffect } from 'react'\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport solve from \"./Solve\"\nimport { ZERO } from \"../utils/bigNumber\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nimport { getRewardUnits, getWalletDifficultyDiscount, getBalanceDifficultyDiscount, getDifficultyLabel } from \"./Rules\"\nimport { MIN_CHALLENGE_DIFFICULTY, MAX_CHALLENGE_DIFFICULTY, CHALLENGE_DIFFICULTY_STEP, TOKEN_DECIMALS, REWARDS_CNT_LIMIT } from \"./Parameters\"\n\nimport Category from \"./Category\"\n\nimport css from \"./Challenges.module.css\"\n\nexport type RegisteredBalancesType = {balances: BigNumber[], blockNumbers: BigNumber[]}\nexport type ChallengesType = {totalCnt: number, indexes: number[], blockNumbers: BigNumber[], rewardUnits: number[], challengeHashes: string[], nexts: number[], claimsCnt: number[], claimed: boolean[]}\nexport type ChallengesMapType = {\n    blockNumberHex: string,\n    challengeHash: string,\n    generalDifficulty: number,\n    addressDiscount: number,\n    balance: BigNumber,\n    balanceDiscount: number,\n    adjustedDifficulty: number,\n    claimsCnt: number,\n    claimed: boolean,\n}\nexport type RunStatusType = {\n    group: string;\n    blockNumberHex: string;\n    challengeHash: string;\n    trials: number,\n    targetDifficulty: number,\n    solutionTrials: number,\n    solution?: BigNumber,\n    solvedDifficulty: number,\n    claiming: boolean,\n    claimed: boolean,\n    solved: boolean,\n    timeMs: number,\n    stopFn?: () => void,\n}\nexport type VerifyClaimType = { rewardUnits: number, reason: number, premium: boolean, rewardsCnt: number }\n\nexport interface ChallengesProps {\n    challenges: ChallengesType;\n    group: string;\n    address: string;\n    registeredBalances: RegisteredBalancesType;\n    demo: boolean;\n    mobile: boolean;\n    verifyClaim: (blockNumber: BigNumber, miner: string, recipient: string, solution: BigNumber) => Promise<VerifyClaimType>,\n    claimReward: (blockNumber: BigNumber, miner: string, recipient: string, solution: BigNumber) => Promise<boolean>,\n}\n\nfunction stopAll(runStatus: {[key: string]: RunStatusType}) {\n    runStatus && Object.keys(runStatus).forEach(bnStr => {\n        const rs = runStatus[bnStr]\n\n        if(rs.stopFn !== undefined) {\n            rs.stopFn()\n            rs.stopFn = undefined\n        }\n    })\n}\n\nexport const challengesRunStatus: {[address: string]: {[key: string]: RunStatusType}} = {}\nexport const Challenges: React.FC<ChallengesProps> = ({challenges, group, address, registeredBalances, demo, mobile, claimReward}) => {\n    let runStatus = challengesRunStatus[address]\n    if(!runStatus) {\n        runStatus = {}\n        challengesRunStatus[address] = runStatus\n    }\n    const challengesMap = toChallengesMap(challenges, registeredBalances)\n\n    const [runStatusSnap, setRunStatusSnap] = useState({...runStatus})\n    const [currentAddress, setCurrentAddress] = useState(\"\")\n    const initChallenges: ChallengesType = {totalCnt: 0, indexes: [], blockNumbers: [], rewardUnits: [], challengeHashes: [], nexts: [], claimsCnt: [], claimed: []}\n    const [currentChallenges, setCurrentChallenges] = useState(initChallenges)\n\n    const refresh = () => {\n\n        const _refresh = async () => {\n            if(currentAddress !== address) {\n                stopAll(challengesRunStatus[currentAddress])\n\n                setCurrentAddress(address)\n                const nrn: {[key: string]: RunStatusType} = {}\n                Object.keys(runStatus).forEach(bnStr => {\n                    const rs = runStatus[bnStr]\n                    const nrs = {...rs}\n                    nrn[bnStr] = nrs                            \n                })\n                setRunStatusSnap(nrn)\n            } else if(currentChallenges !== challenges) {\n                // Reconcile challenges\n                // First, stop and remove the run status for challenges that have been removed\n                // Second, update difficulty in the run status\n                Object.keys(runStatus).forEach(bnStr =>{\n                    const rs = runStatus[bnStr]\n                    if(rs.group === group) {\n                        const cmt = challengesMap[bnStr]\n                        if(cmt) {\n                            if(rs.targetDifficulty !== cmt.adjustedDifficulty) {\n                                // Update the difficulty\n                                rs.targetDifficulty = cmt.adjustedDifficulty\n                                if(rs.solvedDifficulty >= rs.targetDifficulty) {\n                                    // Got it!\n                                    rs.solved = true\n                                    if(rs.stopFn) {\n                                        rs.stopFn()\n                                        rs.stopFn = undefined\n                                    }\n                                }\n                            }\n                        } else {\n                            // Stop the job\n                            if(rs.stopFn) {\n                                rs.stopFn()\n                                rs.stopFn = undefined\n                            }\n                            delete runStatus[bnStr]\n                        }\n                    }\n                })\n\n                setCurrentChallenges(challenges)\n                const nrn: {[key: string]: RunStatusType} = {}\n                Object.keys(runStatus).forEach(bnStr => {\n                    const rs = runStatus[bnStr]\n                    const nrs = {...rs}\n                    nrn[bnStr] = nrs                            \n                })\n                setRunStatusSnap(nrn)\n            }\n        }\n\n        _refresh()\n    }\n\n    useEffect(refresh)\n\n    function findBalance(registeredBalances: RegisteredBalancesType, blockNumber: BigNumber) {\n        const cnt = registeredBalances.blockNumbers.length\n        for(let i = 0; i < cnt; i++) {\n            const bn = registeredBalances.blockNumbers[i]\n            const bal = registeredBalances.balances[i]\n            if(blockNumber.gte(bn)) {\n                return bal\n            }\n        }\n        return ZERO\n    }\n\n    function toChallengesMap(challenges: ChallengesType, registeredBalances: RegisteredBalancesType) {\n\n        const challengesMap: {[bnStr: string]: ChallengesMapType} = {}\n        challenges.blockNumbers.forEach((bn, i) =>{\n            const bnStr = bn.toHexString()\n            const challengeHash = challenges.challengeHashes[i]\n            if(challengesMap[bnStr]) {\n                throw new Error(\"Duplicate block number in challenges: \"+bnStr)\n            }\n\n            const balance = findBalance(registeredBalances, bn)\n            const generalDifficulty = MAX_CHALLENGE_DIFFICULTY(demo) - CHALLENGE_DIFFICULTY_STEP * (challenges.totalCnt - i - 1)\n            const addressDiscount = getWalletDifficultyDiscount(challengeHash, address, balance, TOKEN_DECIMALS)\n            const balanceDiscount = getBalanceDifficultyDiscount(balance, TOKEN_DECIMALS)\n            let adjustedDifficulty = generalDifficulty - addressDiscount - balanceDiscount\n            if(adjustedDifficulty < MIN_CHALLENGE_DIFFICULTY(demo)) {\n                adjustedDifficulty = MIN_CHALLENGE_DIFFICULTY(demo)\n            }\n\n            const claimsCnt = challenges.claimsCnt[i]\n            const claimed = challenges.claimed[i]\n            const ch = {\n                blockNumberHex: bnStr,\n                challengeHash,\n                generalDifficulty,\n                addressDiscount,\n                balance,\n                balanceDiscount,\n                adjustedDifficulty,\n                claimsCnt,\n                claimed,\n            }\n            challengesMap[bnStr] = ch\n        })\n    \n        return challengesMap\n    }\n    \n    const handleStartMining = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, blockNumber: BigNumber, challengeHash: string, address: string, difficulty: number) => {\n        e.preventDefault()\n\n        const bnStr = blockNumber.toHexString()\n        let rs = runStatus[bnStr]\n\n        if(!rs) {\n            rs = {\n                group,\n                blockNumberHex: bnStr,\n                challengeHash,\n                trials: 0,\n                targetDifficulty: difficulty,\n                solutionTrials: 0,\n                solvedDifficulty: 0,\n                claiming: false,\n                claimed: false,\n                solved: false,\n                timeMs: 0,\n                stopFn: undefined,\n            }\n            runStatus[bnStr] = rs\n        }\n\n        if(rs.stopFn) {\n            throw new Error(\"The solver is already running on block \"+bnStr)\n        }\n\n        const trials0 = rs.trials\n        const timeMs0 = rs.timeMs\n        const status = (trials: number, timeMs: number, solution?: BigNumber, solvedDifficulty?: number) => {\n            const rs = runStatus[bnStr]\n            rs.trials = trials0 + trials\n            rs.timeMs = timeMs0 + timeMs\n\n            if(solution) {\n                if(solvedDifficulty !== undefined && solvedDifficulty > rs.solvedDifficulty) {\n                    rs.solutionTrials = rs.trials\n                    rs.solution = solution\n                    rs.solvedDifficulty = solvedDifficulty\n                    if(rs.solvedDifficulty >= rs.targetDifficulty) {\n                        // Got it!\n                        rs.solved = true\n                        if(rs.stopFn) {\n                            rs.stopFn()\n                            rs.stopFn = undefined\n                        }\n                    }\n                }\n            }\n\n            const nrn = {...runStatus}\n            const nrs = {...rs}\n            nrn[bnStr] = nrs\n            setRunStatusSnap(nrn)\n        }\n\n        rs.stopFn = solve(blockNumber, challengeHash, address, rs.solvedDifficulty, status)\n\n        const nrn = {...runStatus}\n        nrn[bnStr] = {...rs}\n        setRunStatusSnap(nrn)\n    }\n\n    const handleStopMining = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, blockNumber: BigNumber) => {\n        e.preventDefault()\n\n        const bnStr = blockNumber.toHexString()\n        const rs = runStatus[bnStr]\n        if(!rs) {\n            throw new Error(\"The solver does not exist \"+bnStr)\n        }\n        if(rs.stopFn) {\n            rs.stopFn()\n            rs.stopFn = undefined\n        }\n\n        const nrn = {...runStatus}\n        const nrs = {...rs}\n        nrn[bnStr] = nrs\n        setRunStatusSnap(nrn)\n    }\n    \n    const handleClaimReward = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, blockNumber: BigNumber) => {\n        e.preventDefault()\n\n        const bnStr = blockNumber.toHexString()\n        const rs = runStatus[bnStr]\n        if(!rs) {\n            throw new Error(\"The solver does not exist \"+bnStr)\n        }\n\n        if(rs.solution) {\n            rs.claiming = true\n            const nrn = {...runStatus}\n            const nrs = {...rs}\n            nrn[bnStr] = nrs\n            setRunStatusSnap(nrn)    \n            const success = await claimReward(blockNumber, address, address, rs.solution)\n            rs.claiming = false\n            if(success) {\n                rs.claimed = true\n            }\n        }\n        const nrn = {...runStatus}\n        const nrs = {...rs}\n        nrn[bnStr] = nrs\n        setRunStatusSnap(nrn)    \n    }\n    \n    return <table>\n        <thead>\n            <tr>\n                <th>\n                    N\n                </th>\n                <th>\n                    Block\n                </th>\n                <th>\n                    LUMI\n                </th>\n                <th>\n                    Claims\n                </th>\n                <th style={{textAlign: \"left\"}}>\n                    YOUR<br/>Difficulty\n                </th>\n                <th>\n                    Mining<br/>Progress\n                </th>\n                <th>\n                    Mining<br/>Time\n                </th>\n                <th>\n                    Mine\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            {challenges.blockNumbers.map((bn, i) => {\n                const challengeHash = challenges.challengeHashes[i]\n\n                const bnStr = bn.toHexString()\n                const cmt = challengesMap[bnStr]\n                const { adjustedDifficulty, claimsCnt, claimed } = cmt\n\n                const rs = runStatusSnap[bnStr]\n                let [ rewardsCnt, rewardUnits ] = getRewardUnits(challengeHash)\n                const rewardUnit = challenges.rewardUnits[i]\n                const rewardsCntLimit = REWARDS_CNT_LIMIT(demo)\n                if(rewardsCnt > rewardsCntLimit) {\n                    rewardsCnt = rewardsCntLimit\n                }\n\n                const progressTitle = (rs || \"\") && (rs.solved ? \"\"+adjustedDifficulty+\" / \"+adjustedDifficulty : rs.stopFn || rs.trials > 0 ? \"\"+rs.solvedDifficulty+\" / \"+adjustedDifficulty : \"\") \n                const progress = (rs || \"\") && (rs.solved ? adjustedDifficulty.toString() : rs.stopFn || rs.trials > 0 ? rs.solvedDifficulty.toString() : \"\")\n\n                const startable = !(claimed || (rs && (rs.solved || rs.stopFn)))\n                const stopable = rs && rs.stopFn\n                const claimable = !claimed && rs && !rs.claimed && rs.solvedDifficulty >= adjustedDifficulty\n\n                const startFn = (e:any) => handleStartMining(e, bn, challengeHash, address, adjustedDifficulty)\n                const stopFn = (e: any) => handleStopMining(e, bn)\n                const claimFn = (e: any) => handleClaimReward(e, bn)\n\n                const title = startable ? \"Start Mining\" : stopable ? \"Stop Mining\" : claimable ? ((rs && rs.claiming) ? \"Claiming your reward ...\" : \"Claim your reward\") : claimed ? \"Claim confirmed\" : \"Claim submitted\"\n                const disabled = !startable && !stopable && !claimable\n                const onClick: any = startable ? startFn : stopable ? stopFn : claimable ? claimFn : null\n                const icon = startable ? \"play\" : stopable ? \"sync-alt\" : claimable ? ((rs && rs.claiming) ? \"sync-alt\" : \"trophy\") : \"check\"\n                const style = startable ? {} : stopable ? {color: \"red\"} : claimable ? ((rs && rs.claiming) ? {color: \"green\"} : {color: \"green\"}) : claimed ? {color: \"green\", fontWeight: \"bold\"} :  {color: \"green\"}\n                return <tr key={i}>\n                    <td>{i+1}</td>\n                    <th>{bn.toString()}</th>\n                    <td>{rewardUnits*rewardUnit/1000}</td>\n                    <td>{claimsCnt}/{rewardsCnt}</td>\n                    <td style={{textAlign: \"left\"}}><Category cat={getDifficultyLabel(adjustedDifficulty)}>{adjustedDifficulty}{mobile ? \"\" : \" - \"+getDifficultyLabel(adjustedDifficulty)}</Category></td>\n                    <td>{progress === \"\" ? \"\" : <span title={progressTitle}><ProgressBar width=\"60px\" height=\"18px\" labelSize=\"10px\" labelColor=\"black\" bgColor=\"#BBDEFB\" labelAlignment=\"center\" animateOnRender={false} transitionTimingFunction=\"linear\" transitionDuration=\"200ms\" completed={progress} maxCompleted={adjustedDifficulty} /></span>}</td>\n                    <td>{rs && (rs.timeMs > 0 ? \"\"+Math.floor(rs.timeMs / 1000).toLocaleString()+\"s\" : \"\")}</td>\n                    <td>\n                        <button title={title} style={style} disabled={disabled} onClick={onClick}><FontAwesomeIcon className={icon===\"trophy\" ? css.vspinner : icon === \"sync-alt\" ? css.spinner : \"\"} icon={icon}/></button>\n                    </td>\n                </tr>\n            })}\n        </tbody>\n    </table>\n}\n","import React from 'react'\n\nimport css from \"./LoadingIcon.module.css\"\n\nconst color = \"#3CCCFC\"\n\nexport const icon1 = <span className={css.svg}>\n    <svg version=\"1.1\" id=\"L4\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n    viewBox=\"0 0 100 100\" enableBackground=\"new 0 0 0 0\" xmlSpace=\"preserve\">\n        <circle fill={color} stroke=\"none\" cx=\"6\" cy=\"50\" r=\"6\">\n            <animate\n            attributeName=\"opacity\"\n            dur=\"1s\"\n            values=\"0;1;0\"\n            repeatCount=\"indefinite\"\n            begin=\"0.1\"/>    \n        </circle>\n        <circle fill={color} stroke=\"none\" cx=\"26\" cy=\"50\" r=\"6\">\n            <animate\n            attributeName=\"opacity\"\n            dur=\"1s\"\n            values=\"0;1;0\"\n            repeatCount=\"indefinite\" \n            begin=\"0.2\"/>       \n        </circle>\n        <circle fill={color} stroke=\"none\" cx=\"46\" cy=\"50\" r=\"6\">\n            <animate\n            attributeName=\"opacity\"\n            dur=\"1s\"\n            values=\"0;1;0\"\n            repeatCount=\"indefinite\" \n            begin=\"0.3\"/>     \n        </circle>\n    </svg>\n</span>\n\nexport const icon2 = <span className={css.svg}>\n    <svg version=\"1.1\" id=\"L2\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n    viewBox=\"0 0 100 100\" enableBackground=\"new 0 0 100 100\" xmlSpace=\"preserve\">\n        <circle fill=\"none\" stroke={color} strokeWidth=\"4\" strokeMiterlimit=\"10\" cx=\"50\" cy=\"50\" r=\"48\"/>\n        <line fill=\"none\" strokeLinecap=\"round\" stroke={color} strokeWidth=\"4\" strokeMiterlimit=\"10\" x1=\"50\" y1=\"50\" x2=\"85\" y2=\"50.5\">\n        <animateTransform \n            attributeName=\"transform\" \n            dur=\"2s\"\n            type=\"rotate\"\n            from=\"0 50 50\"\n            to=\"360 50 50\"\n            repeatCount=\"indefinite\" />\n        </line>\n        <line fill=\"none\" strokeLinecap=\"round\" stroke={color} strokeWidth=\"4\" strokeMiterlimit=\"10\" x1=\"50\" y1=\"50\" x2=\"49.5\" y2=\"74\">\n        <animateTransform \n            attributeName=\"transform\" \n            dur=\"15s\"\n            type=\"rotate\"\n            from=\"0 50 50\"\n            to=\"360 50 50\"\n            repeatCount=\"indefinite\" />\n        </line>\n    </svg>\n</span>\n\nexport const icon3 = <span className={css.svg}>\n    <svg version=\"1.1\" id=\"L3\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n        viewBox=\"0 0 100 100\" enableBackground=\"new 0 0 0 0\" xmlSpace=\"preserve\">\n        <circle fill=\"none\" stroke={color} strokeWidth=\"4\" cx=\"50\" cy=\"50\" r=\"44\" opacity=\"0.5\"/>\n        <circle fill={color} stroke=\"#e74c3c\" strokeWidth=\"3\" cx=\"8\" cy=\"54\" r=\"6\" >\n        <animateTransform\n            attributeName=\"transform\"\n            dur=\"2s\"\n            type=\"rotate\"\n            from=\"0 50 48\"\n            to=\"360 50 52\"\n            repeatCount=\"indefinite\" />\n        </circle>\n    </svg>\n</span>\n\nexport default () => icon2\n","import React from 'react'\n\nimport Countdown from 'react-countdown'\n\nimport Colors from \"../utils/colors\"\n\nconst launchDate = new Date(Date.UTC(2022, 1, 22, 18, 22, 22))\nconst launchDateStr = launchDate.toString()\nconst sep = launchDateStr.indexOf(\":22 \")\nconst launchDateStr1 = launchDateStr.substring(0, sep+3)\nconst launchDateStr2 = launchDateStr.substring(sep+4)\n\n\ntype CountdownRendererProps = { days: number, hours: number, minutes: number, seconds: number, completed: number }\nconst countdownRenderer: any = ({ days, hours, minutes, seconds, completed }: CountdownRendererProps) => {\n    if (completed) {\n      // Render a completed state\n      return <span>NOW!</span>;\n    } else {\n      // Render a countdown\n      return <span>{days}d {hours.toString().padStart(2, \"0\")}:{minutes.toString().padStart(2, \"0\")}:{seconds.toString().padStart(2, \"0\")}</span>;\n    }\n}\n\nexport interface LaunchProps {\n}\n\nconst Launch: React.FC<LaunchProps> = () => {\n    const beforeLaunch = new Date().getTime() < launchDate.getTime()\n    return beforeLaunch ? <div style={{...Colors.red, margin: \"3px\"}}>\n        <br/>\n        <h2>LUMINA MINING LAUNCH</h2>\n        <h1><Countdown date={launchDate} renderer={countdownRenderer}/></h1>\n        <h2>GST: 22/02/2022 22:22:22\n        <br/><br/>\n        LOCAL: {launchDateStr1}\n        <br/>\n        {launchDateStr2}\n        <br/>\n        <br/></h2>\n    </div> : null\n}\n\nexport default Launch\n","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport IconButton from \"./IconButton\"\n\nimport { verifyAddress } from \"../utils/hex\"\n\nimport css from \"./Address.module.css\"\n\nexport interface AddressProps {\n    children: string;\n    chainId: number;\n}\n\nconst Address: React.FC<AddressProps> = ({children: address, chainId}) => {\n    const url = chainId === 80001 ? \"http://mumbai.polygonscan.com/address\" : \"http://polygonscan.com/address\"\n\n    if(!address) {\n        return null\n    }\n\n    address = address.trim()\n    if(!address) {\n        return null\n    }\n\n    const valid = verifyAddress(address)\n    const shortAddress = address.substring(0, 8)+\"-\"+address.substring(address.length-8)\n    return <span>\n        <span className={css.address+(!valid?\" \"+css.invalid:\"\")}><code>{shortAddress}</code></span>\n        &nbsp;\n        {!valid ? <FontAwesomeIcon style={{color: \"red\"}} title={\"Invalid Address: \"+address} icon=\"exclamation-triangle\"/>\n        : <>\n            <FontAwesomeIcon icon=\"info\"/>\n            &nbsp;\n            {address && <CopyToClipboard text={address}>\n                <span title={\"Copy: \"+address}>\n                    <IconButton>\n                        <FontAwesomeIcon icon={[\"far\", \"copy\"]}/>\n                    </IconButton>\n                </span>\n            </CopyToClipboard>}\n            <IconButton url={url+\"/\"+address}>\n                <FontAwesomeIcon title={url+\"/\"+address} icon=\"external-link-alt\"/>\n            </IconButton>\n        </>}\n    </span>\n}\n\nexport default Address\n","import React, { Component } from 'react'\n\nimport Select from 'react-select'\n\nconst commisionOptions = [\n  { value: 0, label: \"0%\"},\n  { value: 10, label: \"10%\"},\n  { value: 20, label: \"20%\"},\n  { value: 30, label: \"30%\"},\n  { value: 40, label: \"40%\"},\n  { value: 50, label: \"50%\"},\n  { value: 60, label: \"60%\"},\n  { value: 70, label: \"70%\"},\n  { value: 80, label: \"80%\"},\n  { value: 90, label: \"90%\"},\n]\n\nconst commisionOptionsMap = {}\n\ncommisionOptions.forEach(o => commisionOptionsMap[o.value.toString()] = o)\n\nconst customStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    background: '#fff',\n    borderColor: '#9e9e9e',\n    minHeight: '20px',\n    height: '20px',\n    boxShadow: state.isFocused ? null : null,\n  }),\n\n  valueContainer: (provided, state) => ({\n    ...provided,\n    height: '20px',\n    padding: '0 6px'\n  }),\n\n  input: (provided, state) => ({\n    ...provided,\n    margin: '0px',\n  }),\n\n  indicatorSeparator: state => ({\n    display: 'none',\n  }),\n\n  indicatorsContainer: (provided, state) => ({\n    ...provided,\n    height: '20px',\n  }),\n}\n\nexport default class CommisionSetting extends Component {\n\n  handleChange = selectedOption => {\n    this.props.setCommision(selectedOption.value)\n  }\n\n  render() {\n    const { commision } = this.props\n    const selectedOption = commisionOptionsMap[commision.toString()] || null\n\n    return <Select\n      styles={customStyles}\n      placeholder={\"\"+commision+\"%\"}\n      width={25}\n      value={selectedOption}\n      onChange={this.handleChange}\n      options={commisionOptions}\n    />\n  }\n}\n","import React, { useContext } from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { BigNumber } from 'ethers'\n\nimport { AppContext } from '../app/AppContext'\nimport { AppProps } from '../app/AppContainer'\n\nimport { TOKEN_SYMBOL as symbol, TOKEN_DECIMALS as tokenDecimals } from \"../components/Parameters\"\nimport Address from '../components/Address'\nimport IconButton from '../components/IconButton'\nimport CommisionSetting from '../components/CommisionSetting'\n\nimport { formatBalance, ZERO } from '../utils/bigNumber'\n\nconst YourWallet: React.FC<AppProps> = (props) => {\n    const appContext = useContext(AppContext)\n    const { chainId, rpcToken } = appContext\n\n    const { address, registeredBalances, provider, contracts, balances, commision, paused, runTx, setCommision } = props\n\n    const { balance, balanceMatic, lockedBalance, lockedAvailableBalance } = balances\n\n    const faucetUrl = chainId === 31337 ? \"https://matic.supply/\" : chainId === 80001 ? \"https://faucet.polygon.technology/\": \"https://matic.supply/\"\n    const tradeUrl = \"https://quickswap.exchange/#/swap?outputCurrency=\"+rpcToken.address\n\n    const handleLockBalance = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        if(!contracts) {\n            return\n        }\n        const { token, locker } = contracts\n        const lockerAddress: any = locker && locker.address\n        await runTx(token, t => t.approve(lockerAddress, balance))\n        await runTx(locker, l => l.deposit(balance))\n    }\n\n    const handleWithdrawBalance = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        if(!contracts) {\n            return\n        }\n        const { locker } = contracts\n        await runTx(locker, l => l.withdraw(lockedAvailableBalance))\n    }\n\n    const handleRegisterBalance = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        if(!contracts) {\n            return\n        }\n        const { token } = contracts\n        await runTx(token, t => t.registerBalance())\n    }\n\n    async function handleSetCommision(commision: number) {\n        if(!contracts) {\n            return\n        }\n        const { records } = contracts\n        setCommision(commision)\n        const success = await runTx(records, t => t.setCommision(commision))\n        if(success) {\n            setCommision(commision)\n        } else {\n            window.alert(\"Could not change commision\")\n        }\n    }\n\n    return <div>\n        <h2>YOUR Wallet</h2>\n        <p title=\"The adddress of your wallet, currently connected to Metamask\">\n            {address ? <span style={{fontWeight: \"bold\"}}>\n                Wallet:\n                &nbsp;\n                <Address chainId={chainId}>{address}</Address>\n            </span> : null}\n        </p>\n        {provider ? <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <tbody>\n            <tr>\n                <th style={{textAlign: \"right\"}}>LUMI:</th>\n                <td style={{textAlign: \"left\", fontWeight: \"bold\"}}>\n                    {formatBalance(balance, tokenDecimals)} {symbol}\n                    &nbsp;{<IconButton url={tradeUrl}><FontAwesomeIcon icon=\"shopping-cart\"/></IconButton>}\n                </td>\n                <td>\n                    {balance.gte(BigNumber.from(10).pow(tokenDecimals+5)) ? <button onClick={(e) => handleLockBalance(e)}>Lock Balance</button> : null}\n                    &nbsp;{balance.gt(ZERO)?<button title=\"Register Balance\" disabled={paused} onClick={(e) => handleRegisterBalance(e)}><FontAwesomeIcon icon=\"share-square\"/></button>:null}\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>MATIC:</th>\n                <td style={{textAlign: \"left\"}}>\n                    {formatBalance(balanceMatic, tokenDecimals)}\n                    &nbsp;MATIC\n                    {balanceMatic.eq(0) ? <span title={\"You need MATIC to claim LUMI rewards...\\nClick the link icon to open MATIC faucet at \"+faucetUrl}>\n                        &nbsp;\n                        <FontAwesomeIcon color=\"red\" icon=\"exclamation-triangle\"/>\n                        <IconButton url={faucetUrl}><FontAwesomeIcon  color=\"red\" icon=\"external-link-alt\"/></IconButton>\n                    </span> : null}\n                </td>\n                <td>\n                </td>\n            </tr>\n            {registeredBalances.blockNumbers.length > 0 ? <tr>\n                <th style={{textAlign: \"right\"}}>Registered:</th>\n                <td style={{textAlign: \"left\"}}>{formatBalance(registeredBalances.balances[0], tokenDecimals)} {symbol}</td>\n                <td/>\n            </tr> : null}\n            {lockedBalance.gt(0) ? <tr>\n                <th style={{textAlign: \"right\"}}>Locked:</th>\n                <td style={{textAlign: \"left\"}}>{formatBalance(lockedBalance, tokenDecimals)} {symbol}</td>\n            </tr> : null}\n            {lockedAvailableBalance.gt(0) ? <tr>\n                <th style={{textAlign: \"right\"}}>Withdrawable:</th>\n                <td style={{textAlign: \"left\"}}>\n                    {formatBalance(lockedAvailableBalance, tokenDecimals)} {symbol}\n                    &nbsp;<button disabled={paused} onClick={(e) => handleWithdrawBalance(e)}>Withdraw</button>\n                </td>\n            </tr> : null}\n            {address ? <tr title={\"Portion of reward you are willing to share with any miner,\\nwho would claim mine a reward for the benefit of your wallet.\\n\\nAllowed values: 0% or within range [10%-90%].\\n\\nThe default value is 22% but you can change it at any time.\"}>\n                <th style={{textAlign: \"right\"}}>Commision:</th>\n                <td style={{textAlign: \"left\"}}><CommisionSetting commision={commision} setCommision={handleSetCommision}/></td>\n                <td style={{textAlign: \"left\"}}><FontAwesomeIcon icon=\"info\"/></td>\n            </tr> : null}\n            </tbody>\n        </table> : null}\n    </div>\n}\n\nexport default YourWallet\n","import React, { useContext } from 'react'\n\nimport { AppContext } from '../app/AppContext'\nimport { AppProps } from '../app/AppContainer'\n\nimport { TOKEN_SYMBOL as symbol, TOKEN_DECIMALS as tokenDecimals } from \"../components/Parameters\"\nimport Address from '../components/Address'\n\nimport { formatBalance } from '../utils/bigNumber'\n\nconst Coins: React.FC<AppProps> = (props) => {\n    const appContext = useContext(AppContext)\n    const { chainId, rpcToken } = appContext\n\n    const { address, balances } = props\n\n    const { totalSupply, claimedTokens, availableTokens, totalLockedBalance } = balances\n\n    return <div>\n        <h2>LUMINA Coins</h2>\n        <p title=\"The address of the Lumina ERC20 coin contract\">\n            <span style={{fontWeight: \"bold\"}}>Contract:</span>\n            &nbsp;\n            <Address chainId={chainId}>{rpcToken.address}</Address>\n        </p>\n        {!address ? null : <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <tbody>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Total Supply:</th>\n                <td style={{textAlign: \"right\"}}>\n                    {formatBalance(totalSupply, tokenDecimals)} {symbol}\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Locked:</th>\n                <td style={{textAlign: \"right\"}}>\n                    {formatBalance(totalLockedBalance, tokenDecimals)} {symbol}\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Mined:</th>\n                <td style={{textAlign: \"right\"}}>\n                    {formatBalance(claimedTokens, tokenDecimals)} {symbol}\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Available:</th>\n                <td style={{textAlign: \"right\"}}>\n                    {formatBalance(availableTokens, tokenDecimals)} {symbol}\n                </td>\n            </tr>\n            </tbody>\n        </table>}\n    </div>\n}\n\nexport default Coins\n","import React from 'react'\n\nimport Category from '../components/Category'\nimport { getDifficultyLabel } from \"../components/Rules\"\n\nconst second = 1\nconst minute = 60\nconst hour = 60 * minute\nconst day = 24 * hour\nconst week = 7 * day\nconst year = 365.25 * day\nconst century = 100 * year - day\nconst millenium = 10 * century\nconst millionYears = 1000*millenium\nconst billionYears = 1000*millionYears\nconst trillionYears = 1000*billionYears\nconst quadYears = 1000*trillionYears\n\nconst difficulties = Array.from(Array(11).keys()).map(n => n*10+20)\n\nconst timeLabels1 = [ \"quad years\", \"trillion years\", \"billion years\", \"million years\", \"millenium\", \"century\", \"year\", \"week\", \"day\", \"hour\", \"minute\", \"second\" ]\nconst timeLabels = [ \"quad years\", \"trillion years\", \"billion years\", \"million years\", \"millenia\", \"centuries\", \"years\", \"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\" ]\nconst timeSpans0: any = { quadYears, trillionYears, billionYears, millionYears, millenium, century, year, week, day, hour, minute, second }\nconst timeSpans = Object.keys(timeSpans0).map((ts, i) => ({time: timeSpans0[ts], label: timeLabels[i], label1: timeLabels1[i]}))\n\nconst getTime = (t: number) => {\n  \n    const fts = timeSpans.filter(ts => t >= ts.time)\n\n    let s = \"0 seconds\"\n\n    if(fts.length > 0) {\n        const ts = fts[0]\n        const n = Math.floor(t / ts.time * 10) / 10\n        if(n > 1.0) {\n            s = n.toString() + \" \" + ts.label\n        } else {\n            s = \"1 \" + ts.label\n        }\n    }\n\n    return s\n}\n\nconst Difficulties = (props: any) => {\n    return <div>\n        <h2>Difficulties</h2>\n        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <thead>\n                <tr>\n                    <th title=\"Difficulty Level\" style={{textAlign: \"left\"}}>Level</th>\n                    <th title=\"Average mining time at hash rate 1GH/s\">Avg Mining Time</th>\n                </tr>\n            </thead>\n            <tbody>\n                {difficulties\n                .map((d, i) => {\n                    const label = getDifficultyLabel(d)\n                    return <tr key={i}>\n                        <td style={{textAlign: \"left\"}}>{<Category cat={label}>{d} - {label}</Category>}</td>\n                        <td style={{textAlign: \"right\"}}>{getTime(Math.floor(Math.pow(2, d)/Math.pow(10, 9)))}</td>\n                    </tr>\n                })}\n            </tbody>\n        </table>\n    </div>\n}\n\nexport default Difficulties\n","import React from 'react'\n\nimport { BigNumber } from 'ethers'\n\nimport { AppProps } from '../app/AppContainer'\n\nimport { TOKEN_SYMBOL as symbol, TOKEN_DECIMALS as tokenDecimals } from \"../components/Parameters\"\n\nimport { formatBalance } from '../utils/bigNumber'\n\nconst RegisteredBalances: React.FC<AppProps> = (props) => {\n    const { registeredBalances, balances } = props\n\n    const { balance } = balances\n\n    return <div>\n        {registeredBalances.blockNumbers.length > 0 ? <>\n            <h2>Registered Balances</h2>\n            <p/>\n            <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n                <thead>\n                    <tr>\n                        <th style={{textAlign: \"right\"}}>Balance</th>\n                        <th>Since Block</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {registeredBalances.balances\n                    .slice(0, registeredBalances.blockNumbers.length)\n                    .map((balance, i) => {\n                        const blockNumber = registeredBalances.blockNumbers[i]\n                        return <tr key={i}>\n                            <td>{formatBalance(balance, tokenDecimals)} {symbol}</td>\n                            <td>{blockNumber.toString()}</td>\n                        </tr>\n                    })}\n                </tbody>\n            </table>\n            </> : balance.gte(BigNumber.from(10).pow(tokenDecimals-3)) \n            ? <p>Please register your current balance to be eligible for additional benefits</p>\n        : null}\n    </div>\n}\n\nexport default RegisteredBalances\n","import React, { useContext } from 'react'\n\nimport { AppContext } from '../app/AppContext'\nimport { AppProps } from '../app/AppContainer'\n\nimport Address from '../components/Address'\nimport Network from '../components/Network'\n\nconst Contracts: React.FC<AppProps> = (props) => {\n    const appContext = useContext(AppContext)\n    const { chainId, rpcToken, rpcRecords, rpcTrustee, rpcAdmin, rpcMarketing, rpcLocker } = appContext\n\n    return <div>\n        <h2>Contracts</h2>\n        <Network/>\n        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <tbody>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Token:</th>\n                <td style={{textAlign: \"left\"}}>\n                <Address chainId={chainId}>{rpcToken.address}</Address>\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Records:</th>\n                <td style={{textAlign: \"left\"}}>\n                <Address chainId={chainId}>{rpcRecords.address}</Address>\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Trustee:</th>\n                <td style={{textAlign: \"left\"}}>\n                <Address chainId={chainId}>{rpcTrustee.address}</Address>\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Admin:</th>\n                <td style={{textAlign: \"left\"}}>\n                <Address chainId={chainId}>{rpcAdmin.address}</Address>\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Marketing:</th>\n                <td style={{textAlign: \"left\"}}>\n                <Address chainId={chainId}>{rpcMarketing.address}</Address>\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Locker:</th>\n                <td style={{textAlign: \"left\"}}>\n                <Address chainId={chainId}>{rpcLocker.address}</Address>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n}\n\nexport default Contracts\n","import React from 'react'\n\nimport { AppProps } from '../app/AppContainer'\n\nconst Management: React.FC<AppProps> = (props) => {\n\n    const { address, contracts, ownerAddress, paused, runTx } = props\n\n    const handlePause = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        if(!contracts) {\n            return\n        }\n        runTx(contracts.trustee, t => t.pause())\n    }\n\n    const handleUnpause = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        if(!contracts) {\n            return\n        }\n       runTx(contracts.trustee, t => t.unpause())\n    }\n\n    return <div>\n        {ownerAddress === address ? <>\n            <h2>Management</h2>\n            <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n                <thead>\n                <tr>\n                    <th>Paused: {paused ? \"YES\" : \"NO\"}</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td>\n                        <button disabled={paused} onClick={(e) => handlePause(e)}>Pause</button>\n                        <button disabled={!paused} onClick={(e) => handleUnpause(e)}>Unpause</button>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        </> : null }\n    </div>\n}\n\nexport default Management\n","import React, { useContext, useState, useEffect } from 'react'\n\nimport { AppProps } from '../app/AppContainer'\nimport { AppContext } from \"../app/AppContext\"\nimport Address from '../components/Address'\n\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport { TOKEN_DECIMALS as tokenDecimals } from \"../components/Parameters\"\nimport { formatBalance } from '../utils/bigNumber'\n\nexport type CampaignType = {\n    tokenBudget: BigNumber,\n    ethBudget: BigNumber,\n    campaignId: number,\n    valid: boolean,\n    active: boolean,\n}\n\nconst Marketing: React.FC<AppProps> = (props) => {\n    const [marketingCampaignAddrs, setMarketingCampaignAddrs] = useState<Array<string>>([])\n    const [marketingCampaigns, setMarketingCampaigns] = useState<{[key: string]: CampaignType}>({})\n\n    const appContext = useContext(AppContext)\n    const { chainId, rpcMarketing } = appContext\n\n    const { address, contracts, ownerAddress, marketingPaused, runTx } = props\n\n    const handlePause = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        if(!contracts) {\n            return\n        }\n        runTx(contracts.marketing, t => t.pause())\n    }\n\n    const handleUnpause = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        if(!contracts) {\n            return\n        }\n       runTx(contracts.marketing, t => t.unpause())\n    }\n\n    const refresh = () => {\n\n        const _refresh = async () => {\n            if(ownerAddress !== address) {\n                return\n            }\n            const addrs = await rpcMarketing.getCampaigns()\n            setMarketingCampaignAddrs(addrs)\n            const cgns: {[key: string]: CampaignType} = {}\n            addrs.forEach(async addr => {\n                const cgn: CampaignType = await rpcMarketing.getCampaign(addr)\n                cgns[addr] = cgn\n            })\n            setMarketingCampaigns(cgns)\n        }\n\n        _refresh()\n    }\n\n    useEffect(refresh, [ownerAddress, address, rpcMarketing])\n\n    return <div>\n        {ownerAddress === address ? <>\n            <h2>Marketing</h2>\n            <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n                <thead>\n                <tr>\n                    <th>Paused: {marketingPaused ? \"YES\" : \"NO\"}</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td>\n                        <button disabled={marketingPaused} onClick={(e) => handlePause(e)}>Pause</button>\n                        <button disabled={!marketingPaused} onClick={(e) => handleUnpause(e)}>Unpause</button>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n            <h2>Campaigns</h2>\n            <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n                <thead>\n                <tr>\n                    <th>Campaign Addr</th>\n                    <th>ID</th>\n                    <th>Budget (LUMI)</th>\n                    <th>Active</th>\n                </tr>\n                </thead>\n                <tbody>\n                {marketingCampaignAddrs.map((addr, i) => {\n                    const cgn = marketingCampaigns[addr]\n                    if(cgn && !cgn.valid) {\n                        return null\n                    }\n                    return <tr key={i}>\n                        <td>\n                            <Address chainId={chainId}>{addr}</Address>\n                        </td>\n                        <td>{cgn && cgn.campaignId}</td>\n                        <td>{cgn && formatBalance(cgn.tokenBudget, tokenDecimals)}</td>\n                        <td>{cgn && cgn.active ? \"Yes\" : \"No\"}</td>\n                    </tr>\n                })}\n                </tbody>\n            </table>\n         </> : null }\n    </div>\n}\n\nexport default Marketing\n","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { Challenges } from \"../components/Challenges\"\nimport LoadingIcon from '../components/LoadingIcon'\n\nimport { AppProps } from '../app/AppContainer'\n\nimport Launch from \"./Launch\"\nimport YourWallet from './YourWallet'\nimport Coins from './Coins'\nimport Difficulties from \"./Difficulties\"\nimport RegisteredBalances from './RegisteredBalances'\nimport Contracts from './Contracts'\nimport Management from './Management'\nimport Marketing from './Marketing'\nimport colors from '../utils/colors'\n\nconst SmallLogo: React.FC<{loading: boolean, sleeping: boolean, refresh: ()=>void}> = ({loading, sleeping, refresh}) => (sleeping\n    ? <button style={colors.red} onClick={refresh}>Click to Refresh...</button>\n    : loading\n    ? <LoadingIcon/>\n    : <img width={24} alt=\"\" src=\"logo256.png\"/>)\n\nconst Demo: React.FC<{demo: boolean}> = ({demo}) => demo ? <h2 style={{color: \"red\"}}>DEMO MODE</h2> : null\n\nconst TokenPage: React.FC<AppProps> = (props: AppProps) => {\n\n    const { basicChallenges, premiumChallenges, address, registeredBalances, demo, mobile, sleeping, contracts, loading, ownerAddress, paused, challengesAllowance, runTx, verifyClaim, claimReward, refresh } = props\n\n    const handleAddChallenges = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        if(!contracts) {\n            return\n        }\n        await runTx(contracts.admin, t => t.addChallenges(challengesAllowance))\n    }\n\n    return <div>\n        <Launch/>\n        <p/>\n        <SmallLogo loading={loading} sleeping={sleeping} refresh={refresh}/>\n        <Demo demo={demo}/>\n        <h2>Regular Challenges ({basicChallenges.blockNumbers.length})\n            {!paused && challengesAllowance > 0 && contracts \n            ? <>\n                &nbsp;\n                <button title=\"Add More Challenges\" disabled={paused || challengesAllowance <= 0} onClick={(e) => handleAddChallenges(e)}>\n                <FontAwesomeIcon icon=\"plus\"/>{challengesAllowance}</button>\n            </> : null}\n        </h2>\n        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <tbody>\n            <tr>\n                <td>\n                    <Challenges\n                        challenges={basicChallenges}\n                        group=\"basic\"\n                        address={address}\n                        registeredBalances={registeredBalances}\n                        demo={demo}\n                        mobile={mobile}\n                        verifyClaim={verifyClaim}\n                        claimReward={claimReward}\n                    />\n                </td>\n            </tr>\n            </tbody>\n        </table>\n        <p/>\n        <SmallLogo loading={loading} sleeping={sleeping} refresh={refresh}/>\n        <Demo demo={demo}/>\n        <h2>Premium Challenges ({premiumChallenges.blockNumbers.length})\n            {!paused && challengesAllowance > 0 && contracts \n            ? <>\n                &nbsp;\n                <button title=\"Add More Challenges\" disabled={paused || challengesAllowance <= 0} onClick={(e) => handleAddChallenges(e)}>\n                <FontAwesomeIcon icon=\"plus\"/>{challengesAllowance}</button>\n            </> : null}\n        </h2>\n        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <tbody>\n            <tr>\n                <td>\n                    <Challenges\n                        challenges={premiumChallenges}\n                        group=\"premium\"\n                        address={address}\n                        registeredBalances={registeredBalances}\n                        demo={demo}\n                        mobile={mobile}\n                        verifyClaim={verifyClaim}\n                        claimReward={claimReward}\n                    />\n                </td>\n            </tr>\n            </tbody>\n        </table>\n        <p/>\n        <SmallLogo loading={loading} sleeping={sleeping} refresh={refresh}/>\n        <Difficulties/>\n        <p/>\n        <SmallLogo loading={loading} sleeping={sleeping} refresh={refresh}/>\n        <YourWallet {...props}/>\n        <p/>\n        <SmallLogo loading={loading} sleeping={sleeping} refresh={refresh}/>\n        <Coins {...props}/>\n        {registeredBalances.blockNumbers.length > 0 ? <>\n            <p/>\n            <SmallLogo loading={loading} sleeping={sleeping} refresh={refresh}/>\n        </> : null}\n        <RegisteredBalances {...props}/>\n        <p/>\n        <SmallLogo loading={loading} sleeping={sleeping} refresh={refresh}/>\n        <Contracts {...props}/>\n        {ownerAddress === address ? <>\n            <p/>\n            <SmallLogo loading={loading} sleeping={sleeping} refresh={refresh}/>\n        </> : null}\n        <Management {...props}/>\n        {ownerAddress === address ? <>\n            <p/>\n            <SmallLogo loading={loading} sleeping={sleeping} refresh={refresh}/>\n        </> : null}\n        <Marketing {...props}/>\n        <p/>\n        <SmallLogo loading={loading} sleeping={sleeping} refresh={refresh}/>\n        <p/>\n   </div>\n}\n\nexport default TokenPage\n","import React, { useContext } from 'react'\n\nimport { AppContext } from \"../app/AppContext\"\n\nimport Colors from \"../utils/colors\"\n\nexport default () => {\n    const appContext = useContext(AppContext)\n    const { referrer } = appContext\n\n    if(!referrer) {\n        return null\n    }\n\n    const address = referrer\n    const shortAddress = address.substring(0, 8)+\"-\"+address.substring(address.length-8)\n\n    return <div style={{...Colors.green, margin: \"3px\"}}>\n        <div>&nbsp;</div>\n        <h2>You have been referred by {shortAddress}.</h2>\n        <h2>If you accept this referral, you will receive</h2>\n        <h2>extra 0.1 LUMI with your first token mined.</h2>\n        <h1><button style={{fontSize: \"16px\", fontWeight: \"bold\"}}>Accept Referral</button></h1>\n        <div>&nbsp;</div>\n    </div>\n}\n","import React from 'react'\n\nimport { AppProps } from \"./AppContainer\"\nimport Web3Modal from \"./Web3Modal\"\n\nimport TokenPage from \"../token/TokenPage\"\nimport Referral from \"../components/Referral\"\nimport Err from '../components/Err'\n\nconst BigLogo = () => <img style={{ \"margin\": \"5px\" }} width={360} alt=\"\" src=\"lumina-logo.png\"/>\n\nconst AppPage: React.FC<AppProps> = (props: AppProps) => {\n    const { err, setProvider, setAddress } = props\n\n    return <div>\n        <BigLogo/>\n        <Err err={err}/>\n        <Web3Modal setProvider={setProvider} setAddress={setAddress}/>\n        <p/>\n        <Referral/>\n        <TokenPage {...props}/>\n    </div>\n}\n\nexport default AppPage\n","import React, { useContext, useEffect, useState } from 'react'\n\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport { Web3Provider } from \"@ethersproject/providers\"\n\nimport { Address, BALANCE_RECORDS_CNT, CHALLENGES_LIMIT, POLLING_INTERVAL_MS, REWARDS_CNT_LIMIT, REWARD_UNIT, SLEEP_TIMEOUT_MS, ZERO_ADDRESS } from \"../components/Parameters\"\nimport { getReasonLabel, getRewardUnits } from '../components/Rules'\nimport { ChallengesType, RegisteredBalancesType, VerifyClaimType } from \"../components/Challenges\"\n\nimport { AppContext, getContractSigner } from \"./AppContext\"\nimport AppPage from \"./AppPage\"\n\nimport { LuminaRecords } from '../hardhat/typechain/LuminaRecords'\nimport { LuminaToken } from '../hardhat/typechain/LuminaToken'\nimport { LuminaAdmin } from '../hardhat/typechain/LuminaAdmin'\nimport { LuminaTrustee } from '../hardhat/typechain/LuminaTrustee'\nimport { ProgressContractLocker } from '../hardhat/typechain/ProgressContractLocker'\nimport { LuminaMarketing } from '../hardhat/typechain/LuminaMarketing'\nimport { Contract, ContractTransaction, Signer } from 'ethers'\n\nimport { ZERO } from \"../utils/bigNumber\"\nimport { getErrMsg } from '../utils/error'\n\nexport type ThemeType = \"light\"|\"dark\"\n\nexport type ContractsType = {provider: Web3Provider, signer: Signer, token: LuminaToken, records: LuminaRecords, admin: LuminaAdmin, trustee: LuminaTrustee, locker: ProgressContractLocker, marketing: LuminaMarketing}|null\nexport type BalancesType = {\n    balance: BigNumber,\n    balanceMatic: BigNumber,\n    totalSupply: BigNumber,\n    claimedTokens: BigNumber,\n    availableTokens: BigNumber,\n    lockedBalance: BigNumber,\n    lockedAvailableBalance: BigNumber,\n    totalLockedBalance: BigNumber,\n}\nexport type AppDataType = {\n    challengesAllowance: number\n    basicChallenges: ChallengesType\n    premiumChallenges: ChallengesType\n    registeredBalances: RegisteredBalancesType\n    balances: BalancesType\n    commision: number\n}\n\nexport interface AppProps {\n    theme: ThemeType\n    demo: boolean\n    mobile: boolean\n    sleeping: boolean\n    provider: Web3Provider|null\n    signer: Signer|null\n    address: Address\n    ownerAddress: string\n    paused: boolean\n    marketingPaused: boolean\n    contracts: ContractsType\n\n    challengesAllowance: number\n    basicChallenges: ChallengesType\n    premiumChallenges: ChallengesType\n    registeredBalances: RegisteredBalancesType\n    balances: BalancesType\n    commision: number\n\n    err: string\n    loading: boolean\n\n    runTx: <T extends Contract> (\n        contract: T,\n        txf: (t: T) => Promise<ContractTransaction>,\n        f?: (t: T) => void\n    ) => Promise<boolean>\n    setErr: (err: string) => void\n    setProvider: (provider: Web3Provider|null) => void\n    setAddress: (address: Address) => void\n    setCommision: (commision: number) => void\n    verifyClaim: (blockNumber: BigNumber, miner: string, recipient: string, solution: BigNumber) => Promise<VerifyClaimType>\n    claimReward: (blockNumber: BigNumber, miner: string, recipient: string, solution: BigNumber) => Promise<boolean>\n    refresh: () => void\n}\n\ninterface AppContainerProps {\n}\n\nconst AppContainer: React.FC<AppContainerProps> = () => {\n    const initChallenges: ChallengesType = {totalCnt: 0, indexes: [], blockNumbers: [], rewardUnits: [], challengeHashes: [], nexts: [], claimsCnt: [], claimed: []}\n    const initRegisteredBalances: RegisteredBalancesType = {balances: [], blockNumbers: []}\n    const initBalances: BalancesType = { balance: ZERO, balanceMatic: ZERO, totalSupply: ZERO, claimedTokens: ZERO, availableTokens: ZERO, lockedBalance: ZERO, lockedAvailableBalance: ZERO, totalLockedBalance: ZERO }\n    const initAppData: AppDataType = {\n        challengesAllowance: 0,\n        basicChallenges: initChallenges,\n        premiumChallenges: initChallenges,\n        registeredBalances: initRegisteredBalances,\n        balances: initBalances,\n        commision: 0,\n    }\n\n    const [refreshCnt, setRefreshCnt] = useState(0)\n    const [txCnt, setTxCnt] = useState(0)\n\n    const [theme] = useState<ThemeType>(\"dark\")\n    const [demo, setDemo] = useState(false)\n    const [mobile] = useState(true)\n    const [sleeping, setSleeping] = useState(false)\n    const [provider, setProvider] = useState<Web3Provider|null>(null)\n    const [signer, setSigner] = useState<Signer|null>(null)\n    const [contracts, setContracts] = useState<ContractsType>(null)\n    const [address, setAddress] = useState<Address>(ZERO_ADDRESS)\n\n    const [appData, setAppData] = useState<AppDataType>(initAppData)\n\n    const [err, setErr] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [ownerAddress, setOwnerAddress] = useState(\"\")\n    const [paused, setPaused] = useState(false)\n    const [marketingPaused, setMarketingPaused] = useState(false)\n\n    const appContext = useContext(AppContext)\n    const { contextNetwork, rpcToken, rpcRecords, rpcAdmin, rpcTrustee, rpcLocker, rpcMarketing, incContextUrlIndex } = appContext\n\n    useEffect(() => {\n        if(address !== ZERO_ADDRESS && provider === null) {\n            return\n        }\n        const remove = (a: Array<any>, n: number) => {\n            if(a.length <= n) {\n                return a\n            }\n\n            const na: Array<any> = []\n            a.forEach((e, i) => n !== i && na.push(e))\n            return na\n        }\n        \n        const claimsListener = (blockNumber: BigNumber, recipient: string, miner:string, solution: BigNumber, commisionPrc: number, claimNo: number) => {\n            // console.log(\"Claim\", {blockNumber, recipient, miner, solution, commisionPrc, claimNo})\n            const updateChallenges = (ch: ChallengesType) => {\n                const len = ch.blockNumbers.length\n                for(let i = 0; i < len; i++) {\n                    if(blockNumber.eq(ch.blockNumbers[i])) {\n                        const { 0:claimsCnt } = getRewardUnits(ch.challengeHashes[i])\n                        const rewardsCntLimit = REWARDS_CNT_LIMIT(demo)\n                        let rewardsCnt = claimsCnt\n                        if(rewardsCnt > rewardsCntLimit) {\n                            rewardsCnt = rewardsCntLimit\n                        }\n                        if(claimNo + 1 === rewardsCnt) {\n                            const nch = { \n                                totalCnt: ch.totalCnt-1,\n                                indexes: remove(ch.indexes, i),\n                                blockNumbers: remove(ch.blockNumbers, i),\n                                rewardUnits: remove(ch.rewardUnits, i),\n                                challengeHashes: remove(ch.challengeHashes, i),\n                                nexts: remove(ch.nexts, i),\n                                claimsCnt: remove(ch.claimsCnt, i),\n                                claimed: remove(ch.claimed, i),\n                            }\n\n                            return nch\n                        } else if(claimNo + 1 > ch.claimsCnt[i]) {\n                            const nch = { ...ch, claimsCnt: [...ch.claimsCnt]}\n                            nch.claimsCnt[i] = claimNo + 1\n                            if(recipient === address) {\n                                nch.claimed = [...ch.claimed]\n                                nch.claimed[i] = true\n                            }\n                            return nch\n                        }\n                    }\n                }\n                return ch\n            }\n            const updateBalances = (ch: ChallengesType, balances: BalancesType) => {\n                const i = ch.blockNumbers.findIndex(bn => blockNumber.eq(bn))\n                if(i < 0) {\n                    return balances\n                }\n                const { 1: rewardUnits } = getRewardUnits(ch.challengeHashes[i])\n                const reward = REWARD_UNIT.mul(rewardUnits).mul(ch.rewardUnits[i])\n                if(reward) {\n                    if(!balances || !reward) {\n                        return balances\n                    }\n                    return {...balances, claimedTokens: balances.claimedTokens.add(reward), availableTokens: balances.availableTokens.sub(reward)}\n                }\n                return balances\n            }\n\n            setAppData(data => ({ \n                ...data, \n                balances: updateBalances(data.premiumChallenges, updateBalances(data.basicChallenges, data.balances)),\n                basicChallenges: updateChallenges(data.basicChallenges),\n                premiumChallenges: updateChallenges(data.premiumChallenges),\n            }))\n        }\n\n        // event Commision(address indexed wallet, uint8 commisionPrc);\n        const commisionListener = (wallet: Address, commisionPrc: number) => {\n            // console.log(\"Commision\", {wallet, commisionPrc})\n            setCommision(commisionPrc)\n        }\n\n        // event RegisteredBalance(address indexed wallet, uint64 blockNumber, uint256 balance);\n        const registeredBalanceListener = (address: Address, blockNumber: BigNumber, balance: BigNumber) => {\n            // console.log(\"RegisteredBalance\", {address, blockNumber, balance})\n            setAppData(data => {\n                const { balances, blockNumbers } = data.registeredBalances\n                const newBalances = [balance].concat(balances.slice(0, BALANCE_RECORDS_CNT - 1))\n                const newBlockNumbers = [blockNumber].concat(blockNumbers.slice(0, BALANCE_RECORDS_CNT - 1))\n                const registeredBalances: RegisteredBalancesType = { balances: newBalances, blockNumbers: newBlockNumbers }\n                return { \n                    ...data, \n                    registeredBalances,\n                }\n            })\n            \n        }\n\n        // event AddChallenge(uint64 indexed blockNumber, uint256 challenge, bool premium);\n        const addChallengeListener = async (blockNumber: BigNumber, challenge: BigNumber, premium: boolean) => {\n            // console.log(\"AddChallenge\", {blockNumber, challenge, premium})\n            // const updateChallenges = (ch: ChallengesType) => {\n            //     if(ch.blockNumbers.some(bn => bn === blockNumber)) {\n            //         return ch\n            //     }\n            //     const nch: ChallengesType = { \n            //         totalCnt: ch.totalCnt+1,\n            //         indexes: [...ch.indexes, 0],\n            //         blockNumbers: [...ch.blockNumbers, blockNumber],\n            //         rewardUnits: [...ch.rewardUnits, 1000],\n            //         challengeHashes: [...ch.challengeHashes, challenge.toHexString()],\n            //         nexts: [...ch.nexts, 0],\n            //         claimsCnt: [...ch.claimsCnt, 0],\n            //         claimed: [...ch.claimed, false],\n            //     }\n            //     return nch\n            // }\n            if(premium) {\n                const premiumChallenges = await readChallenges(contracts, true)\n                setAppData(data => ({ ...data, premiumChallenges }))\n            } else {\n                const basicChallenges = await readChallenges(contracts, false)\n                setAppData(data => ({ ...data, basicChallenges }))\n            }\n        }\n\n        // event Transfer(address indexed from, address indexed to, uint256 value);\n        const transferListener = (from: Address, to: Address, value: BigNumber) => {\n            // console.log(\"transfer from:\", from, \"to:\", to, value.toString())\n            setAppData(data => ({ \n                ...data, \n                balances: { ...data.balances, balance: to === address ? data.balances.balance.add(value) : data.balances.balance.sub(value) },\n            }))\n        }\n\n        const readChallenges = async (contracts: ContractsType, premium: boolean) => {\n            const basicCha = contracts ? await contracts.admin.readChallenges(premium, CHALLENGES_LIMIT) : await rpcAdmin.readChallenges(premium, CHALLENGES_LIMIT)\n            const {totalCnt, indexes, blockNumbers, rewardUnits, challengeHashes, nexts, claimsCnt, claimed} = basicCha\n            const ch: string[] = challengeHashes.map(n => n.toHexString())\n            return {totalCnt, indexes, blockNumbers, rewardUnits, challengeHashes: ch, nexts, claimsCnt, claimed}\n        }\n    \n        const refresh = async () => {\n            // console.log(\"RefreshCnt:\", refreshCnt)\n            setErr(\"\")\n            setLoading(true)\n            try {\n                if(provider && !(signer && contracts && contracts.provider === provider && contracts.signer === signer)) {\n                    const signer = provider.getSigner()\n                    const token     = getContractSigner(contextNetwork, \"token\", signer) as LuminaToken\n                    const records   = getContractSigner(contextNetwork, \"records\", signer) as LuminaRecords\n                    const admin     = getContractSigner(contextNetwork, \"admin\", signer) as LuminaAdmin\n                    const trustee   = getContractSigner(contextNetwork, \"trustee\", signer) as LuminaTrustee\n                    const locker    = getContractSigner(contextNetwork, \"locker\", signer) as ProgressContractLocker\n                    const marketing = getContractSigner(contextNetwork, \"marketing\", signer) as LuminaMarketing\n                    const ctrs = { provider, signer, token, records, admin, trustee, locker, marketing }\n                    setSigner(signer)\n                    setContracts(ctrs)\n                    return\n                }\n                const [\n                    premiumChallenges,\n                    basicChallenges,\n                    demo,\n                    ownerAddress,\n                    paused,\n                    marketingPaused,\n                    challengesAllowance,\n                    totalSupply,\n                    totalLockedBalance,\n                    claimedTokens,\n                ] = await Promise.all([\n                    readChallenges(contracts, true),\n                    readChallenges(contracts, false),\n                    rpcTrustee.DEMO(),\n                    rpcTrustee.owner(),\n                    rpcTrustee.paused(),\n                    rpcMarketing.paused(),\n                    rpcAdmin.getChallengesAllowance(),\n                    rpcToken.totalSupply(),\n                    rpcLocker.totalLockedBalance(),\n                    rpcTrustee.getClaimedTokens(),\n                ])\n\n                const initRegisteredBalances: RegisteredBalancesType = {balances: [], blockNumbers: []}\n\n                // Balances\n                const [\n                    balance,\n                    balanceMatic,\n                    lockedBalance,\n                    lockedAvailableBalance,\n                    availableTokens,\n                    commision,\n                    registeredBalances,\n                ] = provider && contracts ? await Promise.all([\n                    rpcToken.balanceOf(address),\n                    provider.getBalance(address),\n                    rpcLocker.balanceOf(address),\n                    rpcLocker.availableBalanceOf(address),\n                    rpcToken.balanceOf(rpcTrustee.address),\n                    rpcRecords.getCommision(address),\n                    contracts.records.getBalances(),\n                ]) : [\n                    ZERO,\n                    ZERO,\n                    ZERO,\n                    ZERO,\n                    ZERO,\n                    0,\n                    initRegisteredBalances,\n                ]\n\n                const balances = { balance, balanceMatic, totalSupply, claimedTokens, availableTokens, lockedBalance, lockedAvailableBalance, totalLockedBalance }\n\n                setDemo(demo)\n                setOwnerAddress(ownerAddress)\n                setPaused(paused)\n                setMarketingPaused(marketingPaused)\n\n                const data = {\n                    challengesAllowance,\n                    basicChallenges,\n                    premiumChallenges,\n                    registeredBalances,\n                    balances,\n                    commision,\n                }\n                setAppData(data)\n            } catch(ex) {\n                console.log(ex)\n                incContextUrlIndex()\n                // setErr(getErrMsg(ex))\n            } finally {\n                setLoading(false)\n            }\n        }\n\n        refresh()\n\n        let prevBalance = ZERO\n        const timerStartMs = new Date().getTime()\n        let subscribed = false\n        let subscribeCancel = () => {}\n        const timerListener = async () => {\n            if(!provider) {\n                return\n            }\n            try {\n                setErr(\"\")\n                const timeMs = new Date().getTime()\n                if((timeMs - timerStartMs) >= SLEEP_TIMEOUT_MS) {\n                    subscribeCancel()\n                    setSleeping(true)\n                    return\n                }\n                const balance = await provider.getBalance(address)\n                if (!prevBalance.eq(balance)) { \n                    setAppData(data => ({...data, balances: {...data.balances, balanceMatic: balance}}))\n                }\n                prevBalance = balance\n\n            } catch(ex) {\n                console.log(ex)\n                incContextUrlIndex()\n                // setErr(getErrMsg(ex))\n            }\n        }\n\n        const subscribe = () => {\n            // console.log(\"Subscribing...\")\n            const timerId = setInterval(timerListener, POLLING_INTERVAL_MS)\n            rpcTrustee.on(\"Claim\", claimsListener)\n            rpcAdmin.on(\"AddChallenge\", addChallengeListener)\n            const transferFilter1 = rpcToken.filters.Transfer(address, null, null)\n            rpcToken.on(transferFilter1, transferListener)\n            const transferFilter2 = rpcToken.filters.Transfer(null, address, null)\n            rpcToken.on(transferFilter2, transferListener)\n            const commisionFilter = rpcRecords.filters.Commision(address, null)\n            rpcRecords.on(commisionFilter, commisionListener)\n            const registeredBalanceFilter = rpcRecords.filters.RegisteredBalance(address, null, null)\n            rpcRecords.on(registeredBalanceFilter, registeredBalanceListener)\n            subscribed = true\n        \n            return () => {\n                // console.log(\"Cancelling...\")\n                if(!subscribed) {\n                    return\n                }\n                clearTimeout(timerId)\n                rpcTrustee.off(\"Claim\", claimsListener)\n                rpcAdmin.off(\"AddChallenge\", addChallengeListener)\n                rpcToken.off(transferFilter1, transferListener)\n                rpcToken.off(transferFilter2, transferListener)\n                rpcRecords.off(commisionFilter, commisionListener)\n                rpcRecords.off(registeredBalanceFilter, registeredBalanceListener)\n                subscribed = false\n            }\n        }\n\n        subscribeCancel = subscribe()\n        return subscribeCancel\n    }, [refreshCnt, contextNetwork, provider, signer, contracts, rpcToken, rpcRecords, rpcAdmin, rpcTrustee, rpcLocker, rpcMarketing, address, demo, incContextUrlIndex])\n\n    async function runTx<T extends Contract> (\n        contract: T,\n        txf: (t: T) => Promise<ContractTransaction>,\n        f?: (t: T) => void\n    ) {\n        setErr(\"\")\n        try {\n            const t = contract\n            if (!t) {\n                throw Error(\"Contract instance not ready\")\n            }\n            const tx = await txf(t)\n            const cr = await tx.wait()\n            if(cr.confirmations <= 0) {\n                throw new Error(\"No confirmations in contract receipt\")\n            }\n            if(f) {\n                f(t)\n            }\n            setTxCnt(txCnt + 1)\n        } catch(ex) {\n            const msg = getErrMsg(ex)\n            window.alert(msg)\n            return false\n        }\n        return true\n    }\n\n    const verifyClaim = async (blockNumber: BigNumber, miner: string, recipient: string, solution: BigNumber) => {\n        if(paused) {\n            return { rewardUnits: 0, reason: 101, premium: false, rewardsCnt: 0 }\n        }\n        try {\n            const { rewardUnits, reason, premium, rewardsCnt } = await rpcTrustee.verifyClaim(blockNumber, miner, recipient, solution)\n\n            return { rewardUnits, reason, premium, rewardsCnt }\n        } catch(ex) {\n            return { rewardUnits: 0, reason: 100, premium: false, rewardsCnt: 0 }\n        }\n    }\n\n    const claimAlert = (blockNumber: BigNumber, reason: number, rewardUnits: number) => {\n        if(reason === 0) {\n        } else {\n            window.alert(\"Claim on block #\"+blockNumber.toString()+\"\\nStatus: FAILED\\nReason: \" + getReasonLabel(reason))\n        }\n    }\n\n    const claimReward = async (blockNumber: BigNumber, miner: string, recipient: string, solution: BigNumber) => {\n        if(!contracts) {\n            window.alert(\"Please connect to your wallet to claim your reward\")\n            return false\n        }\n        const { rewardUnits, reason } = await verifyClaim(blockNumber, miner, recipient, solution)\n\n        if(reason === 0) {\n            await runTx(contracts.trustee, t => t.claimReward(blockNumber, miner, recipient, solution))\n            return true\n        }\n        claimAlert(blockNumber, reason, rewardUnits)\n        return false\n    }\n\n    const setCommision = (commision: number) => setAppData(data => ({...data, commision}))\n\n    const refresh = () => {\n        setSleeping(false)\n        setRefreshCnt(refreshCnt => refreshCnt + 1)\n    }\n\n    const {\n        challengesAllowance,\n        basicChallenges,\n        premiumChallenges,\n        registeredBalances,\n        balances,\n        commision\n    } = appData\n\n    const props: AppProps = {\n        theme,\n        demo,\n        mobile,\n        sleeping,\n        contracts,\n        provider,\n        signer,\n        address,\n\n        challengesAllowance,\n        basicChallenges,\n        premiumChallenges,\n        registeredBalances,\n        balances,\n        commision,\n\n        err,\n        loading,\n        ownerAddress,\n        paused,\n        marketingPaused,\n\n        runTx,\n        setErr,\n        setProvider,\n        setAddress,\n        setCommision,\n        verifyClaim,\n        claimReward,\n        refresh,\n    }\n\n    return <AppPage {...props}/>\n}\n\nexport default AppContainer\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faWifi } from '@fortawesome/free-solid-svg-icons'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons'\nimport { faHeartbeat } from '@fortawesome/free-solid-svg-icons'\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport { faTerminal } from '@fortawesome/free-solid-svg-icons'\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons'\nimport { faTachometerAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faInfo } from '@fortawesome/free-solid-svg-icons'\nimport { faMicrochip } from '@fortawesome/free-solid-svg-icons'\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faMinus } from '@fortawesome/free-solid-svg-icons'\nimport { faHandPaper } from '@fortawesome/free-solid-svg-icons'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { faBackspace } from '@fortawesome/free-solid-svg-icons'\nimport { faCalculator } from '@fortawesome/free-solid-svg-icons'\nimport { faPercent } from '@fortawesome/free-solid-svg-icons'\nimport { faSmile } from '@fortawesome/free-solid-svg-icons'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport { faUserMinus } from '@fortawesome/free-solid-svg-icons'\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faRandom } from '@fortawesome/free-solid-svg-icons'\nimport { faDiceD20 } from '@fortawesome/free-solid-svg-icons'\n\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faToggleOn } from '@fortawesome/free-solid-svg-icons'\nimport { faToggleOff } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { faSearchMinus } from '@fortawesome/free-solid-svg-icons'\nimport { faSearchPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faArrowsAltH } from '@fortawesome/free-solid-svg-icons'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\nimport { faPause } from '@fortawesome/free-solid-svg-icons'\nimport { faStop } from '@fortawesome/free-solid-svg-icons'\nimport { faShareSquare } from '@fortawesome/free-solid-svg-icons'\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons'\nimport { faRunning } from '@fortawesome/free-solid-svg-icons'\nimport { faTh } from '@fortawesome/free-solid-svg-icons'\nimport { faGripVertical } from '@fortawesome/free-solid-svg-icons'\nimport { faGripHorizontal } from '@fortawesome/free-solid-svg-icons'\nimport { faBug } from '@fortawesome/free-solid-svg-icons'\nimport { faHistory } from '@fortawesome/free-solid-svg-icons'\nimport { faCodeBranch } from '@fortawesome/free-solid-svg-icons'\nimport { faGenderless } from '@fortawesome/free-solid-svg-icons'\nimport { faTable } from '@fortawesome/free-solid-svg-icons'\nimport { faListUl } from '@fortawesome/free-solid-svg-icons'\nimport { faBookMedical } from '@fortawesome/free-solid-svg-icons'\nimport { faPalette } from '@fortawesome/free-solid-svg-icons'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\nimport { faGolfBall } from '@fortawesome/free-solid-svg-icons'\nimport { faBowlingBall } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashRestore } from '@fortawesome/free-solid-svg-icons'\nimport { faCoins } from '@fortawesome/free-solid-svg-icons'\nimport { faCopy } from '@fortawesome/free-regular-svg-icons'\nimport { faLock } from '@fortawesome/free-solid-svg-icons'\nimport { faRecycle } from '@fortawesome/free-solid-svg-icons'\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faHourglass } from '@fortawesome/free-regular-svg-icons'\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faWifi)\nlibrary.add(faHeart)\nlibrary.add(farHeart)\nlibrary.add(faHeartbeat)\nlibrary.add(faExclamationTriangle)\nlibrary.add(faThumbsUp)\nlibrary.add(faHome)\nlibrary.add(faTerminal)\nlibrary.add(faChartLine)\nlibrary.add(faTachometerAlt)\nlibrary.add(faInfo)\nlibrary.add(faMicrochip)\nlibrary.add(faTrophy)\nlibrary.add(faPlus)\nlibrary.add(faMinus)\nlibrary.add(faHandPaper)\nlibrary.add(faCheck)\nlibrary.add(faBackspace)\nlibrary.add(faCalculator)\nlibrary.add(faPercent)\nlibrary.add(faSmile)\nlibrary.add(faUser)\nlibrary.add(faUserMinus)\nlibrary.add(faUserPlus)\nlibrary.add(faRandom)\nlibrary.add(faDiceD20)\n\nlibrary.add(faSyncAlt)\nlibrary.add(faToggleOn)\nlibrary.add(faToggleOff)\nlibrary.add(faTrashAlt)\nlibrary.add(faFilter)\nlibrary.add(faSearch)\nlibrary.add(faSearchMinus)\nlibrary.add(faSearchPlus)\nlibrary.add(faArrowsAltH)\nlibrary.add(faPlay)\nlibrary.add(faPause)\nlibrary.add(faStop)\nlibrary.add(faShareSquare)\nlibrary.add(faEllipsisH)\nlibrary.add(faRunning)\nlibrary.add(faTh)\nlibrary.add(faGripVertical)\nlibrary.add(faGripHorizontal)\nlibrary.add(faBug)\nlibrary.add(faHistory)\nlibrary.add(faCodeBranch)\nlibrary.add(faGenderless)\nlibrary.add(faTable)\nlibrary.add(faListUl)\nlibrary.add(faBookMedical)\nlibrary.add(faPalette)\nlibrary.add(faCog)\nlibrary.add(faGolfBall)\nlibrary.add(faBowlingBall)\nlibrary.add(faTrashRestore)\nlibrary.add(faCoins)\nlibrary.add(faCopy)\nlibrary.add(faLock)\nlibrary.add(faRecycle)\nlibrary.add(faExternalLinkAlt)\nlibrary.add(faHourglass)\nlibrary.add(faShoppingCart)\n","import React, {useState} from 'react'\n\nimport { AppContext, AppContextNetworkType, getAppContext } from \"./app/AppContext\"\nimport AppContainer from './app/AppContainer'\n\nimport './components/Icons'\n\nimport './App.css'\n\nfunction App() {\n  const [contextNetwork, setContextNetwork] = useState<AppContextNetworkType>(\"polygon\")\n  const [contextUrlIndex, setContextUrlIndex] = useState<number>(0)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <AppContext.Provider value={getAppContext(contextNetwork, contextUrlIndex, (contextNetwork: AppContextNetworkType) => setContextNetwork(contextNetwork), () => setContextUrlIndex(contextUrlIndex+1))}>\n          <AppContainer/>\n        </AppContext.Provider>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// import { Provider as AlertProvider } from 'react-alert'\n// const AlertTemplate: any = require('react-alert-template-basic')\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <AlertProvider template={AlertTemplate}> */}\n      <App />\n    {/* </AlertProvider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"connect\":\"ConnectedAddress_connect__2EEUV\",\"address\":\"ConnectedAddress_address__3JFGQ\",\"button\":\"ConnectedAddress_button__3ReGc\",\"invalid\":\"ConnectedAddress_invalid__ytcGc\"};"],"sourceRoot":""}