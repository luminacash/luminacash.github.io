{"version":3,"sources":["components/Address.module.css","components/Metamask.module.css","components/Category.module.css","hardhat/typechain/factories/LuminaAdmin__factory.ts","hardhat/typechain/factories/LuminaCampaignLaunch__factory.ts","hardhat/typechain/factories/LuminaMarketing__factory.ts","hardhat/typechain/factories/LuminaRecords__factory.ts","hardhat/typechain/factories/LuminaTrustee__factory.ts","hardhat/typechain/factories/LuminaToken__factory.ts","hardhat/typechain/factories/ProgressContractLocker__factory.ts","hardhat/typechain/factories/TokenFaucet__factory.ts","hardhat/typechain/factories/UtilsTest__factory.ts","hardhat/typechain/factories/ERC20__factory.ts","hardhat/SymfoniContext.tsx","components/MetamaskConnectButton.tsx","components/Parameters.ts","utils/bigNumber.tsx","components/Rules.ts","components/IconButton.tsx","utils/hex.tsx","components/Address.tsx","components/CommisionSetting.js","components/Category.tsx","components/Difficulties.tsx","components/Solve.tsx","components/Challenges.tsx","utils/colors.tsx","components/LuminaToken.tsx","components/LuminaConnect.tsx","components/Icons.js","App.tsx","serviceWorker.ts","index.tsx","components/IconButton.module.css"],"names":["module","exports","LuminaAdmin__factory","signer","_abi","_bytecode","recordsAddr_","overrides","address","signerOrProvider","Contract","ContractFactory","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","components","LuminaCampaignLaunch__factory","marketingAddr_","LuminaMarketing__factory","tokenAddr_","LuminaRecords__factory","LuminaTrustee__factory","adminAddr_","LuminaToken__factory","symbol","initSupply","ProgressContractLocker__factory","erc20Addr_","progressingAddr_","TokenFaucet__factory","UtilsTest__factory","ERC20__factory","name_","symbol_","emptyContract","instance","undefined","factory","ProviderContext","React","createContext","CurrentAddressContext","SignerContext","defaultSymfoniContext","currentHardhatProvider","init","Error","loading","messages","providers","SymfoniContext","LuminaAdminContext","LuminaCampaignLaunchContext","LuminaMarketingContext","LuminaRecordsContext","LuminaTrusteeContext","LuminaTokenContext","ProgressContractLockerContext","TokenFaucetContext","UtilsTestContext","ERC20Context","Symfoni","showLoading","autoInit","props","useState","initializeCounter","setInitializeCounter","setCurrentHardhatProvider","setLoading","setMessages","setSigner","provider","setProvider","currentAddress","setCurrentAddress","fallbackProvider","providerPriority","setProviderPriority","LuminaAdmin","setLuminaAdmin","LuminaCampaignLaunch","setLuminaCampaignLaunch","LuminaMarketing","setLuminaMarketing","LuminaRecords","setLuminaRecords","LuminaTrustee","setLuminaTrustee","LuminaToken","setLuminaToken","ProgressContractLocker","setProgressContractLocker","TokenFaucet","setTokenFaucet","UtilsTest","setUtilsTest","ERC20","setERC20","useEffect","length","console","debug","pop","getProvider","a","hardhatProviderName","_providerPriority","localStorage","getItem","sort","b","reduce","maybeProvider","providerIdentification","foundProvider","Promise","resolve","toLowerCase","getWeb3ModalProvider","web3provider","ethers","Web3Provider","JsonRpcProvider","url","getSigner","_provider","Wallet","fromMnemonic","connect","providerOptions","web3Modal","Web3Modal","cacheProvider","subscribed","finish","text","old","finishWithContracts","getLuminaAdmin","_signer","getLuminaCampaignLaunch","getLuminaMarketing","getLuminaRecords","getLuminaTrustee","getLuminaToken","getProgressContractLocker","getTokenFaucet","getUtilsTest","getERC20","providerObject","getAddress","doAsync","contractAddress","LuminaAdminDeployment","receipt","LuminaCampaignLaunchDeployment","LuminaMarketingDeployment","LuminaRecordsDeployment","LuminaTrusteeDeployment","LuminaTokenDeployment","ProgressContractLockerDeployment","TokenFaucetDeployment","constants","AddressZero","Provider","value","handleInitProvider","loadingComponent","map","msg","i","key","children","isMetamaskConnected","window","ethereum","isConnected","_state","accounts","handleConnect","e","preventDefault","request","method","MetamaskConnectButton","className","css","title","onClick","icon","MIN_CHALLENGE_DIFFICULTY","demo","REWARDS_CNT_LIMIT","formatBalance","balance","decimals","b1","div","BigNumber","from","pow","b2","mod","toNumber","toLocaleString","isZero","toString","padStart","ZERO","ONE","TEN","getRewardUnits","challengeHash","startsWith","getWalletDifficultyDiscount","h1","h2","n","to","middle","mask","shl","sub","and","findLsb","xor","gte","getDifficultyLabel","difficulty","getReasonLabel","reason","s","IconButton","hover","setHover","down","setDown","button","buttonHover","buttonDown","onPointerOver","onPointerOut","onPointerDown","onPointerUp","href","target","rel","hexRegex","verifyAddress","hex","test","Address","chainId","trim","valid","shortAddress","substring","invalid","style","color","commisionOptions","label","commisionOptionsMap","forEach","o","customStyles","control","provided","state","background","borderColor","minHeight","height","boxShadow","isFocused","valueContainer","padding","input","margin","indicatorSeparator","display","indicatorsContainer","CommisionSetting","handleChange","selectedOption","setCommision","commision","this","styles","placeholder","width","onChange","options","Component","Category","cat","Cat2Color","backgroundColor","difficulties","Array","keys","timeLabels1","timeLabels","timeSpans0","quadYears","trillionYears","billionYears","millionYears","millenium","century","year","week","day","hour","minute","second","timeSpans","Object","ts","time","label1","Difficulties","marginLeft","marginRight","textAlign","d","t","fts","filter","Math","floor","getTime","solve","blockNumber","solvedDifficulty","status","one","random","isReady","rnd","randomWords","rnds","nonce","difficultyN","targetN","stop","cnt","timeMs","setTimeout","batch","startTimeMs","Date","now","digest","keccak256","digestNum","lte","add","endTimeMs","stopAll","runStatus","bnStr","rs","stopFn","challengesRunStatus","Challenges","challenges","group","registeredBalances","mobile","claimReward","verifyClaim","challengesMap","blockNumbers","bn","toHexString","challengeHashes","bal","balances","findBalance","generalDifficulty","MAX_CHALLENGE_DIFFICULTY","totalCnt","addressDiscount","balanceDiscount","getBalanceDifficultyDiscount","adjustedDifficulty","ch","blockNumberHex","claimsCnt","claimed","toChallengesMap","runStatusSnap","setRunStatusSnap","indexes","rewardUnits","nexts","currentChallenges","setCurrentChallenges","mounted","nrn","nrs","cmt","targetDifficulty","solved","_refresh","handleStartMining","trials","solutionTrials","trials0","timeMs0","solution","handleStopMining","handleClaimReward","rewardsCnt","rewardUnit","progressTitle","progress","startable","stopable","claimable","disabled","labelSize","labelColor","bgColor","labelAlignment","animateOnRender","transitionTimingFunction","transitionDuration","completed","hash","substr","statusTitle","statusIcon","statusColor","gominer","white","red","pink","purple","deepPurple","indigo","blue","lightBlue","black","cyan","teal","green","lightGreen","yellow","amber","orange","brown","darkGrey","grey","lightgrey","blueGrey","err","setErr","setBlockNumber","setAddress","totalSupply","setTotalSupply","setBalance","ownerAddress","setOwnerAddress","paused","setPaused","challengesAllowance","setChallengesAllowance","useEffectCnt","setUseEffectCnt","txCnt","setTxCnt","setRegisteredBalances","initChallenges","basicChallenges","setBasicChallenges","premiumChallenges","setPremiumChallenges","totalLockedSupply","setTotalLockedBalance","lockedBalance","setLockedBalance","lockedAvailableBalance","setLockedAvailableBalance","claimedTokens","setClaimedTokens","availableTokens","setAvailableTokens","network","setNetwork","timerCnt","setTimerCnt","setDemo","balanceMatic","setBalanceMatic","token","useContext","TokenContext","records","RecordsContext","trustee","TrusteeContext","admin","AdminContext","marketing","MarketingContext","locker","LockerContext","eerr","getNetwork","detectNetwork","runTx","contract","txf","f","tx","wait","confirmations","ex","data","message","err0","alert","handlePause","pause","handleUnpause","unpause","readBasicChallenges","readChallenges","basicCha","readPremiumChallenges","premiumCha","readAllChallenges","handleAddChallenges","addChallenges","handleLockBalance","lockerAddress","approve","l","deposit","handleWithdrawBalance","withdraw","handleRegisterBalance","registerBalance","miner","recipient","premium","claimAlert","owner","_network","_paused","_ownerAddress","getBalances","_registeredBalances","_totalSupply","getChallengesAllowance","_challengesAllowance","_address","getCommision","_commision","balanceOf","_balance","getBalance","_balanceMatic","getBlockNumber","_blockNumber","getClaimedTokens","_claimedTokens","_availableTokens","DEMO","_demo","eq","_lockedBalance","availableBalanceOf","_lockedAvailableBalance","totalLockedBalance","_totalLockedSupply","tm","clearTimeout","SmallLogo","alt","src","networkName","toUpperCase","faucetUrl","tradeUrl","Colors","fontWeight","tokenDecimals","gt","slice","BigLogo","LuminaConnect","installed","isMetaMask","library","faWifi","faHeart","farHeart","faHeartbeat","faExclamationTriangle","faThumbsUp","faHome","faTerminal","faChartLine","faTachometerAlt","faInfo","faMicrochip","faTrophy","faPlus","faMinus","faHandPaper","faCheck","faBackspace","faCalculator","faPercent","faSmile","faUser","faUserMinus","faUserPlus","faRandom","faDiceD20","faSyncAlt","faToggleOn","faToggleOff","faTrashAlt","faFilter","faSearch","faSearchMinus","faSearchPlus","faArrowsAltH","faPlay","faPause","faStop","faShareSquare","faEllipsisH","faRunning","faTh","faGripVertical","faGripHorizontal","faBug","faHistory","faCodeBranch","faGenderless","faTable","faListUl","faBookMedical","faPalette","faCog","faGolfBall","faBowlingBall","faTrashRestore","faCoins","faCopy","faRecycle","faExternalLinkAlt","faHourglass","faShoppingCart","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f4c11162.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"address\":\"Address_address__16qzz\",\"invalid\":\"Address_invalid__171rV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"connect\":\"Metamask_connect__3oNO-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cat\":\"Category_cat__2ALJo\",\"err\":\"Category_err__1S7hS\"};","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaAdmin } from \"../LuminaAdmin\";\n\nexport class LuminaAdmin__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(recordsAddr_: string, overrides?: Overrides): Promise<LuminaAdmin> {\n    return super.deploy(recordsAddr_, overrides || {}) as Promise<LuminaAdmin>;\n  }\n  getDeployTransaction(\n    recordsAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(recordsAddr_, overrides || {});\n  }\n  attach(address: string): LuminaAdmin {\n    return super.attach(address) as LuminaAdmin;\n  }\n  connect(signer: Signer): LuminaAdmin__factory {\n    return super.connect(signer) as LuminaAdmin__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaAdmin {\n    return new Contract(address, _abi, signerOrProvider) as LuminaAdmin;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recordsAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"challenge\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n    ],\n    name: \"AddChallenge\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_DAY\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_DIFFICULTY_STEP\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_NULL\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DEMO\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"LUCKY_NUMBER\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_CNT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_DONOR_BLOCKS\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_REGISTERED_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINERS_CLAIM_MAX_RECIPIENT_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINERS_CLAIM_MIN_RECIPIENT_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MIN_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARDS_CNT_LIMIT\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_INC\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_STANDARD\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_START\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_DECIMALS\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n    ],\n    name: \"_cleanupChallenge\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint8\",\n        name: \"limit\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"addChallenges\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"trusteeAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"attachTrustee\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getChallengesAllowance\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"limit\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"readChallenges\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"totalCnt\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint8[]\",\n        name: \"indexes\",\n        type: \"uint8[]\",\n      },\n      {\n        internalType: \"uint64[]\",\n        name: \"blockNumbers\",\n        type: \"uint64[]\",\n      },\n      {\n        internalType: \"uint16[]\",\n        name: \"rewardUnits\",\n        type: \"uint16[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"challengeHashes\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint8[]\",\n        name: \"nexts\",\n        type: \"uint8[]\",\n      },\n      {\n        internalType: \"uint16[]\",\n        name: \"claimsCnt\",\n        type: \"uint16[]\",\n      },\n      {\n        internalType: \"bool[]\",\n        name: \"claimed\",\n        type: \"bool[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"recordsAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"retrieveChallenge\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"challengeHash\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"blockNumber\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint16\",\n            name: \"rewardUnits\",\n            type: \"uint16\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"index\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"valid\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"prev\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"next\",\n            type: \"uint8\",\n          },\n        ],\n        internalType: \"struct ChallengeRecords.Challenge\",\n        name: \"ch\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"generalDifficulty\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"trusteeAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b5060405162002c0a38038062002c0a833981016040819052620000349162000275565b600080546001600160a01b031990811633179091556002805482166001600160a01b0384169081179091556003805490921617905562000075600462000175565b6200008160cd62000175565b61019680546001600160801b0319169055620000a0600260c8620002bd565b6001600160401b0316436001600160401b031611620000c1576000620000db565b620000cf600260c8620002bd565b620000db9043620002ef565b61019680546001600160801b0381166001600160c01b036001600160401b03948516600160801b90810291821692909217600160801b600160c01b03199093161704909216600160c01b02919091179055506101978054780a0000000000000000000000000000000200000000000000006001600160d01b031990911617905561019880546001600160401b03191660051790556200037b565b60005b606460ff821610156200025e5760008260ff8316606481106200019f576200019f6200031a565b6000600291909102919091019081556001808201805461ffff60581b1960ff87166a010000000000000000000002166001600160681b0319909116176cff000000000000000000000000179055909150606490620001ff90849062000330565b60ff1610620002105760ff6200021d565b6200021d82600162000330565b6001909101805460ff929092166d01000000000000000000000000000260ff60681b1990921691909117905580620002558162000358565b91505062000178565b5060c801805463ffffffff191663ffff0000179055565b6000602082840312156200028857600080fd5b81516001600160a01b0381168114620002a057600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b0382811684821681151582840482111615620002e657620002e6620002a7565b02949350505050565b60006001600160401b0383811690831681811015620003125762000312620002a7565b039392505050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff84168060ff03821115620003505762000350620002a7565b019392505050565b600060ff821660ff811415620003725762000372620002a7565b60010192915050565b61287f806200038b6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80636bb987fe1161010f578063c28bd11c116100a2578063ec2165d311610071578063ec2165d31461036b578063f5d4d8a114610373578063f7f595fb14610395578063f883fcaa1461032257600080fd5b8063c28bd11c14610322578063c28cedf314610342578063c6088d971461035a578063e81ec6121461036357600080fd5b8063a2157767116100de578063a21577671461032a578063a5c9cd8214610332578063b313bd621461033a578063b91268e8146102c257600080fd5b80636bb987fe1461031157806373d6aafa1461031a5780637fb01232146103225780639d9413621461031a57600080fd5b806330db4fa011610187578063479e92c811610156578063479e92c8146102d2578063504b3662146102da57806357dce6ff146102e25780635b7f415c1461030957600080fd5b806330db4fa01461028f578063345af977146102af5780633a3a7c53146102c25780633e6e387c146102ca57600080fd5b8063132e12c4116101c3578063132e12c41461023a57806314270b65146102425780631df55679146102675780631e7bfd601461027c57600080fd5b806306e38632146101ea5780630bf433091461020a5780630d423bd414610224575b600080fd5b6101f2600581565b60405161ffff90911681526020015b60405180910390f35b61021260d081565b60405160ff9091168152602001610201565b61022c6103a8565b604051908152602001610201565b6102126103cf565b6001546001600160a01b03165b6040516001600160a01b039091168152602001610201565b61027a610275366004611ffe565b6105c6565b005b60025461024f906001600160a01b031681565b61029760c881565b6040516001600160401b039091168152602001610201565b6102126102bd36600461203d565b6106f3565b61022c610d31565b6101f2600281565b610212600a81565b610212606481565b6102f56102f0366004612070565b610d48565b604051610201989796959493929190612182565b610212601281565b61029761996881565b6101f2600a81565b610212600281565b61021260ff81565b61022c610e0b565b610297600281565b61034a600181565b6040519015158152602001610201565b6101f26103e881565b61022c610e17565b610297610e2f565b610386610381366004612261565b610e3c565b6040516102019392919061227c565b61027a6103a33660046122fc565b611019565b6103b460036012612349565b6103bf90600a612448565b6103cc9062989680612457565b81565b60cc54600090606460ff9091161015806103f2575061019554606460ff90911610155b156103fd5750600090565b6101965443906001600160401b03600160c01b90910481169082161161042557600091505090565b61019754610196546000916001600160401b03600160401b909104811691600160c01b90041660016104578386612476565b61046191906124a1565b61046b91906124a1565b61047591906124c9565b9050600060c86001600160401b0384161161049157600061049c565b61049c60c8846124a1565b610197549091506001600160401b039081169082168110156104bb5750805b836001600160401b0316816001600160401b031611156105365760405162461bcd60e51b815260206004820152602b60248201527f4661696c65643a206e657874446f6e6f72426c6f636b4e756d626572203c3d2060448201526a313637b1b5a73ab6b132b960a91b60648201526084015b60405180910390fd5b600061054282866124a1565b9050836001600160401b0316816001600160401b03161015610562578093505b60c86001600160401b03851611156105bc5760405162461bcd60e51b815260206004820152601f60248201527f4661696c65643a20636e74203c3d204d41585f444f4e4f525f424c4f434b5300604482015260640161052d565b5091949350505050565b6000546001600160a01b031633146106465760405162461bcd60e51b815260206004820152603760248201527f4f6e6c79547275737465653a206f6e6c792063726561746f722063616e20617460448201527f746163682061207472757374656520636f6e7472616374000000000000000000606482015260840161052d565b6001546001600160a01b0316156106c55760405162461bcd60e51b815260206004820152603b60248201527f4f6e6c79547275737465653a20746865207472757374656520636f6e7472616360448201527f742068617320616c7265616479206265656e2061747461636865640000000000606482015260840161052d565b600080546001600160a01b0319908116909155600180549091166001600160a01b0392909216919091179055565b6000438160c86001600160401b0383161161070f57600061071a565b61071a60c8836124a1565b610197549091506001600160401b038083169116101561075257610197805467ffffffffffffffff19166001600160401b0383161790555b610197546001600160401b03808416911611156107c65760405162461bcd60e51b815260206004820152602c60248201527f4661696c65643a205f6e657874446f6e6f72426c6f636b4e756d626572203c3d60448201526b10313637b1b5a73ab6b132b960a11b606482015260840161052d565b60005b8460ff168160ff161080156107ec5750610197546001600160401b038085169116105b801561080d5750610196546001600160401b03808516600160c01b90920416105b8015610820575060cc54606460ff909116105b8015610834575061019554606460ff909116105b15610d2957610197546001600160401b03168040806108955760405162461bcd60e51b815260206004820152601860248201527f4d697373696e6720626c6f636b68617368206e756d6265720000000000000000604482015260640161052d565b60408051602081018390523391810191909152306060820152466001600160401b03871618608082015260009060a001604051602081830303815290604052905080516080146109205760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206368616c6c656e6765206461746160501b604482015260640161052d565b8051602082012060fc81901c600214156109e15760408051828152600160208201526001600160401b038916917f0201a994d37c39c51a0f109a274f5d1867257813e46eddac7acbea5ea28341f5910160405180910390a261099660cd858361019760189054906101000a900461ffff1661122b565b6101968054600160401b90046001600160401b03169060086109b7836124fd565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050610a83565b60408051828152600060208201526001600160401b038916917f0201a994d37c39c51a0f109a274f5d1867257813e46eddac7acbea5ea28341f5910160405180910390a2610a436004858361019760189054906101000a900461ffff1661122b565b61019680546001600160401b0316906000610a5d836124fd565b91906101000a8154816001600160401b0302191690836001600160401b03160217905550505b61019780546001600160401b0316906000610a9d836124fd565b91906101000a8154816001600160401b0302191690836001600160401b031602179055505061019760089054906101000a90046001600160401b031661019660188282829054906101000a90046001600160401b0316610afd9190612476565b82546001600160401b039182166101009390930a928302919092021990911617905550610197546103e8600160c01b90910461ffff161015610c545761019854610196546001600160401b03918216911610610c4f57600a61019760188282829054906101000a900461ffff16610b749190612524565b92506101000a81548161ffff021916908361ffff1602179055506001610b9c57610a8c610b9f565b60055b610198805461ffff9290921691600090610bc39084906001600160401b0316612476565b82546001600160401b039182166101009390930a928302919092021990911617905550610197546103e8600160c01b90910461ffff1610610c4f57610198805467ffffffffffffffff19169055610c1d619968600e612541565b610c279088612476565b61019760106101000a8154816001600160401b0302191690836001600160401b031602179055505b610d13565b610197546001600160401b03600160801b909104811690881610610d1357600261019760088282829054906101000a90046001600160401b0316610c989190612476565b92506101000a8154816001600160401b0302191690836001600160401b03160217905550619968600e610ccb9190612541565b6101978054601090610cee908490600160801b90046001600160401b0316612476565b92506101000a8154816001600160401b0302191690836001600160401b031602179055505b84610d1d81612570565b955050505050506107c9565b949350505050565b610d3d60036012612349565b6103cc90600a612448565b6000606080606080606080606060008a610d63576004610d66565b60cd5b9050610d72818b6114a5565b60035460405163731fd3f760e01b8152969f50949d50929b50909950975095506001600160a01b03169063731fd3f790610db2908a903390600401612590565b600060405180830381865afa158015610dcf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610df79190810190612697565b999c989b5096995094979396929594505050565b6103cc6012600a612448565b610e236012600a612448565b6103cc906103e8612457565b6103cc619968600e612541565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052908080610e8260048661187c565b9250905060ff8082161415610ea557610e9c60cd8661187c565b60019450925090505b60ff8181161415610f305760405162461bcd60e51b815260206004820152604960248201527f4368616c6c656e67652077697468207468697320626c6f636b4e756d6265722060448201527f646f65736e2774206578697374206f7220686173206265656e20636c61696d656064820152686420616c726561647960b81b608482015260a40161052d565b610f4883610f3f576004610f42565b60cd5b82611afa565b6040805160e081018252825481526001909201546001600160401b038082166020850181905261ffff600160401b8404169385019390935260ff600160501b830481166060860152600160581b8304811615156080860152600160601b8304811660a0860152600160681b90920490911660c0840152919550908616146110115760405162461bcd60e51b815260206004820181905260248201527f436f727275707420626c6f636b4e756d62657220696e206368616c6c656e6765604482015260640161052d565b509193909250565b6001546001600160a01b0316331461108f5760405162461bcd60e51b815260206004820152603360248201527f4f6e6c79547275737465653a206f6e6c7920747275737465652063616e20657860448201527232b1baba32903a3434b990333ab731ba34b7b760691b606482015260840161052d565b60008161109d5760046110a0565b60cd5b90506000806110af838661187c565b909250905060ff80831614156111075760405162461bcd60e51b815260206004820152601960248201527f436f7272757074206368616c6c656e6765207265636f72647300000000000000604482015260640161052d565b60ff8116600a1180159061111f575060d060ff821611155b61116b5760405162461bcd60e51b815260206004820152601a60248201527f446966666963756c7479206973206f7574206f662072616e6765000000000000604482015260640161052d565b6111758383611c13565b60006111816004611ee3565b9050600061118f60cd611ee3565b6003549091506001600160a01b031663910eb1ce6001600160401b03808416908516106111bc57826111be565b835b6040516001600160e01b031960e084901b1681526001600160401b039091166004820152602401600060405180830381600087803b1580156111ff57600080fd5b505af1158015611213573d6000803e3d6000fd5b50505050611221600a6106f3565b5050505050505050565b60c8840154606460ff909116106112945760405162461bcd60e51b815260206004820152602760248201527f4368616c6c656e67655265636f7264733a204368616c6c656e676520736574206044820152661a5cc8199d5b1b60ca1b606482015260840161052d565b60c8840154610100900460ff16606481106112c15760405162461bcd60e51b815260040161052d90612763565b60006112cd8683611afa565b6001810154909150600160581b900460ff16156113495760405162461bcd60e51b815260206004820152603460248201527f4368616c6c656e67655265636f7264733a20636f7272757074206368616c6c656044820152731b99d9481a5d195b481a5b88199c9959531a5cdd60621b606482015260840161052d565b60018101805460c88801805461ff001916610100600160681b90930460ff908116939093021781558684558254600160581b6001600160401b038a1669ffffffffffffffffffff1990921691909117600160401b61ffff8916021760ff60581b19811682178555825460ff60681b61ffff60581b199092166301000000918290048616600160601b021790921760ff60681b191617909355549190910481161461142557600061140a878860c80160039054906101000a900460ff16611afa565b600101805460ff60681b1916600160681b60ff861602179055505b60c88601805460ff80851663010000000263ff000000199092169190911791829055620100009091048116141561146f5760c88601805462ff000019166201000060ff8516021790555b60c88601805460ff1690600061148483612570565b91906101000a81548160ff021916908360ff16021790555050505050505050565b6000606080606080606060008860c80160009054906101000a900460ff1660ff168860ff16106114dc5760c889015460ff166114de565b875b60c88a015460ff908116985090915081166001600160401b03811115611506576115066125ba565b60405190808252806020026020018201604052801561152f578160200160208202803683370190505b5095508060ff166001600160401b0381111561154d5761154d6125ba565b604051908082528060200260200182016040528015611576578160200160208202803683370190505b5094508060ff166001600160401b03811115611594576115946125ba565b6040519080825280602002602001820160405280156115bd578160200160208202803683370190505b5092508060ff166001600160401b038111156115db576115db6125ba565b604051908082528060200260200182016040528015611604578160200160208202803683370190505b5091508060ff166001600160401b03811115611622576116226125ba565b60405190808252806020026020018201604052801561164b578160200160208202803683370190505b5060c88a015490945062010000900460ff1660005b8260ff168160ff1610156117f057600061167a8c84611afa565b6040805160e081018252825481526001909201546001600160401b038116602084015261ffff600160401b8204169183019190915260ff600160501b8204811660608401819052600160581b8304821615156080850152600160601b8304821660a0850152600160681b909204811660c08401528b5192935090918b918516908110611708576117086127a6565b602002602001019060ff16908160ff16815250508060200151888360ff1681518110611736576117366127a6565b60200260200101906001600160401b031690816001600160401b0316815250508060400151878360ff1681518110611770576117706127a6565b602002602001019061ffff16908161ffff16815250508060000151868360ff16815181106117a0576117a06127a6565b6020026020010181815250508060c00151858360ff16815181106117c6576117c66127a6565b60ff9092166020928302919091019091015260c001519150806117e881612570565b915050611660565b5060c88a015460ff908116908a16108061180c575060ff818116145b6118705760405162461bcd60e51b815260206004820152602f60248201527f4368616c6c656e67655265636f7264732e5f6368616c6c656e6765734765742860448201526e0a4e8818dbdc9c9d5c1d081b1a5cdd608a1b606482015260840161052d565b50509295509295509295565b60c8820154600090819060ff1660648111156119115760405162461bcd60e51b815260206004820152604860248201527f4368616c6c656e67655265636f7264733a20496e76616c696420636f6e66696760448201527f75726174696f6e3a20636e74203c3d204d41585f4348414c4c454e47455f434e606482015267150819985a5b195960c21b608482015260a40161052d565b60c885015462010000900460ff16925060009150815b8160ff168160ff161015611ace5760006119418786611afa565b6040805160e081018252825481526001909201546001600160401b038082166020850181905261ffff600160401b8404169385019390935260ff600160501b830481166060860152600160581b8304811615156080860152600160601b8304811660a0860152600160681b90920490911660c08401529192509087161415611ab657806060015160ff168560ff16146119ec5760405162461bcd60e51b815260040161052d906127bc565b60016119f88385612349565b611a029190612349565b611a0d90600261280b565b611a189060d0612349565b935060ff8416600a11801590611a32575060d060ff851611155b611aae5760405162461bcd60e51b815260206004820152604160248201527f4368616c6c656e67655265636f7264732e5f6368616c6c656e676546696e642860448201527f293a2067656e6572616c446966666963756c7479206f7574206f662072616e676064820152606560f81b608482015260a40161052d565b505050611af3565b60c00151935080611ac681612570565b915050611927565b5060ff83811614611af15760405162461bcd60e51b815260040161052d906127bc565b505b9250929050565b6000606460ff831610611b755760405162461bcd60e51b815260206004820152603760248201527f4368616c6c656e67655265636f7264732e5f6368616c6c656e6765476574282960448201527f3a20696e646578206973206f7574206f662072616e6765000000000000000000606482015260840161052d565b60008360ff841660648110611b8c57611b8c6127a6565b6002020190508260ff1681600101600a9054906101000a900460ff1660ff1614611c0a5760405162461bcd60e51b815260206004820152602960248201527f4368616c6c656e67655265636f7264733a20636f7272757074206368616c6c656044820152680dcceca40d2dcc8caf60bb1b606482015260840161052d565b90505b92915050565b60c882015460ff16611c785760405162461bcd60e51b815260206004820152602860248201527f4368616c6c656e67655265636f7264733a204368616c6c656e67652073657420604482015267697320656d70747960c01b606482015260840161052d565b6000611c848383611afa565b6001810154909150600160581b900460ff16611cf25760405162461bcd60e51b815260206004820152602760248201527f4368616c6c656e67655265636f7264733a2072656d6f76696e6720696e76616c6044820152666964206974656d60c81b606482015260840161052d565b6001810154600160601b900460ff90811614611d4d576000611d258483600101600c9054906101000a900460ff16611afa565b6001838101549101805460ff60681b1916600160681b9283900460ff16909202919091179055505b6001810154600160681b900460ff90811614611da8576000611d808483600101600d9054906101000a900460ff16611afa565b6001838101549101805460ff60601b1916600160601b9283900460ff16909202919091179055505b60c883015460ff83811662010000909204161415611de857600181015460c88401805462ff00001916600160681b90920460ff1662010000029190911790555b60c883015460ff8381166301000000909204161415611e2b57600181015460c88401805463ff0000001916600160601b90920460ff166301000000029190911790555b60c8830154610100900460ff166064811080611e49575060ff818116145b611e655760405162461bcd60e51b815260040161052d90612763565b600080835560018301805460ff848116600160681b026dffffff00ffffffffffffffffffff199092169190911760ff60601b1790915560c8860180548683166101000261ff0019821681178355831692169190911791611ec48361282c565b91906101000a81548160ff021916908360ff1602179055505050505050565b60c881015460009060ff62010000909104811690811415611f0657439150611ff8565b6000611f128483611afa565b6040805160e081018252825481526001909201546001600160401b038116602084015261ffff600160401b8204169183019190915260ff600160501b820481166060840152600160581b82048116151560808401819052600160601b8304821660a0850152600160681b9092041660c0830152909150611ff15760405162461bcd60e51b815260206004820152603460248201527f4368616c6c656e67655265636f7264733a20636f7272757074206368616c6c656044820152731b99d9481a5d195b481a5b881d1a19481b1a5cdd60621b606482015260840161052d565b6020015191505b50919050565b60006020828403121561201057600080fd5b81356001600160a01b0381168114611c0a57600080fd5b803560ff8116811461203857600080fd5b919050565b60006020828403121561204f57600080fd5b61205882612027565b9392505050565b801515811461206d57600080fd5b50565b6000806040838503121561208357600080fd5b823561208e8161205f565b915061209c60208401612027565b90509250929050565b600081518084526020808501945080840160005b838110156120d857815160ff16875295820195908201906001016120b9565b509495945050505050565b600081518084526020808501945080840160005b838110156120d85781516001600160401b0316875295820195908201906001016120f7565b600081518084526020808501945080840160005b838110156120d857815161ffff1687529582019590820190600101612130565b600081518084526020808501945080840160005b838110156120d8578151151587529582019590820190600101612164565b600061010060ff8b168352602081818501526121a08285018c6120a5565b915083820360408501526121b4828b6120e3565b915083820360608501526121c8828a61211c565b84810360808601528851808252828a0193509082019060005b818110156121fd578451835293830193918301916001016121e1565b505084810360a086015261221181896120a5565b9250505082810360c0840152612227818661211c565b905082810360e084015261223b8185612150565b9b9a5050505050505050505050565b80356001600160401b038116811461203857600080fd5b60006020828403121561227357600080fd5b6120588261224a565b600061012082019050845182526001600160401b03602086015116602083015261ffff604086015116604083015260ff606086015116606083015260808501511515608083015260ff60a08601511660a083015260c08501516122e460c084018260ff169052565b5083151560e083015260ff8316610100830152610d29565b6000806040838503121561230f57600080fd5b6123188361224a565b915060208301356123288161205f565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168082101561236357612363612333565b90039392505050565b600181815b80851115611af157816000190482111561238d5761238d612333565b8085161561239a57918102915b93841c9390800290612371565b6000826123b657506001611c0d565b816123c357506000611c0d565b81600181146123d957600281146123e3576123ff565b6001915050611c0d565b60ff8411156123f4576123f4612333565b50506001821b611c0d565b5060208310610133831016604e8410600b8410161715612422575081810a611c0d565b61242c838361236c565b806000190482111561244057612440612333565b029392505050565b600061205860ff8416836123a7565b600081600019048311821515161561247157612471612333565b500290565b60006001600160401b0380831681851680830382111561249857612498612333565b01949350505050565b60006001600160401b03838116908316818110156124c1576124c1612333565b039392505050565b60006001600160401b03808416806124f157634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b60006001600160401b038083168181141561251a5761251a612333565b6001019392505050565b600061ffff80831681851680830382111561249857612498612333565b60006001600160401b038083168185168183048111821515161561256757612567612333565b02949350505050565b600060ff821660ff81141561258757612587612333565b60010192915050565b6040815260006125a360408301856120e3565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156125f8576125f86125ba565b604052919050565b60006001600160401b03821115612619576126196125ba565b5060051b60200190565b600082601f83011261263457600080fd5b8151602061264961264483612600565b6125d0565b82815260059290921b8401810191818101908684111561266857600080fd5b8286015b8481101561268c57805161267f8161205f565b835291830191830161266c565b509695505050505050565b600080604083850312156126aa57600080fd5b82516001600160401b03808211156126c157600080fd5b818501915085601f8301126126d557600080fd5b815160206126e561264483612600565b82815260059290921b8401810191818101908984111561270457600080fd5b948201945b8386101561273357855161ffff811681146127245760008081fd5b82529482019490820190612709565b9188015191965090935050508082111561274c57600080fd5b5061275985828601612623565b9150509250929050565b60208082526023908201527f4368616c6c656e67655265636f7264733a20636f72727570742066726565496e6040820152620c8caf60eb1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252602f908201527f4368616c6c656e67655265636f7264732e5f6368616c6c656e676546696e642860408201526e0a4e8818dbdc9c9d5c1d081b1a5cdd608a1b606082015260800190565b600060ff821660ff84168160ff048111821515161561244057612440612333565b600060ff82168061283f5761283f612333565b600019019291505056fea26469706673582212203df8e212857c03c1f4e2ae92ba8723f617286ff5fac09ba0d5270b64a10b5f7564736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaCampaignLaunch } from \"../LuminaCampaignLaunch\";\n\nexport class LuminaCampaignLaunch__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    marketingAddr_: string,\n    overrides?: Overrides\n  ): Promise<LuminaCampaignLaunch> {\n    return super.deploy(\n      marketingAddr_,\n      overrides || {}\n    ) as Promise<LuminaCampaignLaunch>;\n  }\n  getDeployTransaction(\n    marketingAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(marketingAddr_, overrides || {});\n  }\n  attach(address: string): LuminaCampaignLaunch {\n    return super.attach(address) as LuminaCampaignLaunch;\n  }\n  connect(signer: Signer): LuminaCampaignLaunch__factory {\n    return super.connect(signer) as LuminaCampaignLaunch__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaCampaignLaunch {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as LuminaCampaignLaunch;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"marketingAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"_claim\",\n    outputs: [\n      {\n        internalType: \"address payable[]\",\n        name: \"recipients\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"tokenCommisions\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ethCommisions\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n    ],\n    name: \"_hasReferral\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"referrer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"_referral\",\n    outputs: [\n      {\n        internalType: \"address payable[]\",\n        name: \"recipients\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"tokenCommisions\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ethCommisions\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"claimsCnt\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"hasReferral\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"marketingAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"referralsCnt\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50604051610c27380380610c2783398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610b94806100936000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806348d497c71161005b57806348d497c7146100fa5780634fe309701461010d57806356494faa14610139578063c142fed81461014c57600080fd5b806303c9f1e7146100825780633f2ee795146100ad5780633ff42b92146100df575b600080fd5b6100956100903660046108a8565b61015f565b6040516100a49392919061097d565b60405180910390f35b6000546100c790600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020016100a4565b6000546040516001600160a01b0390911681526020016100a4565b6100956101083660046109f2565b61049e565b336000908152600260205260409020546001600160a01b031615155b60405190151581526020016100a4565b610129610147366004610a34565b610842565b6001546100c7906001600160401b031681565b60608080336001600160a01b031661017f6000546001600160a01b031690565b6001600160a01b0316146101ae5760405162461bcd60e51b81526004016101a590610a56565b60405180910390fd5b600180546001600160401b03169060006101c783610ac9565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050876001600160a01b0316896001600160a01b031614801561022657506001600160a01b03881660009081526003602052604090205460ff16155b15610491576001600160a01b038089166000908152600260205260408120549091169081610255576001610258565b60025b90508060ff166001600160401b0381111561027557610275610af0565b60405190808252806020026020018201604052801561029e578160200160208202803683370190505b5094508060ff166001600160401b038111156102bc576102bc610af0565b6040519080825280602002602001820160405280156102e5578160200160208202803683370190505b5093508060ff166001600160401b0381111561030357610303610af0565b60405190808252806020026020018201604052801561032c578160200160208202803683370190505b50925060008a868260ff168151811061034757610347610b06565b6001600160a01b0390921660209283029190910190910152610372600a670de0b6b3a7640000610b1c565b858260ff168151811061038757610387610b06565b60209081029190910101526103a5600a670de0b6b3a7640000610b1c565b8b6001600160a01b03163110156103eb576103c9600a670de0b6b3a7640000610b1c565b848260ff16815181106103de576103de610b06565b6020026020010181815250505b6001600160a01b0383161561046a578061040481610b3e565b91505082868260ff168151811061041d5761041d610b06565b6001600160a01b0390921660209283029190910190910152610448600a670de0b6b3a7640000610b1c565b858260ff168151811061045d5761045d610b06565b6020026020010181815250505b5050506001600160a01b0388166000908152600360205260409020805460ff191660011790555b9750975097945050505050565b60608080336001600160a01b03166104be6000546001600160a01b031690565b6001600160a01b0316146104e45760405162461bcd60e51b81526004016101a590610a56565b856001600160a01b0316876001600160a01b031614156105515760405162461bcd60e51b815260206004820152602260248201527f52656665727265722063616e6e6f7420626520726566657272616c2073656e6460448201526132b960f11b60648201526084016101a5565b6001600160a01b0386811660009081526002602052604090205416156105c95760405162461bcd60e51b815260206004820152602760248201527f4f6e6c79206f6e6520726566657272616c207065722073656e64657220697320604482015266185b1b1bddd95960ca1b60648201526084016101a5565b60008054600160a01b90046001600160401b03169060146105e983610ac9565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160028082526060820183529182906020830190803683370190505093508060ff166001600160401b0381111561064857610648610af0565b604051908082528060200260200182016040528015610671578160200160208202803683370190505b5092508060ff166001600160401b0381111561068f5761068f610af0565b6040519080825280602002602001820160405280156106b8578160200160208202803683370190505b509150600088858260ff16815181106106d3576106d3610b06565b6001600160a01b03909216602092830291909101909101526106fe600a670de0b6b3a7640000610b1c565b848260ff168151811061071357610713610b06565b6020026020010181815250506000838260ff168151811061073657610736610b06565b60209081029190910101528061074b81610b3e565b91505087858260ff168151811061076457610764610b06565b6001600160a01b039092166020928302919091019091015261078f600a670de0b6b3a7640000610b1c565b848260ff16815181106107a4576107a4610b06565b60209081029190910101526107c2600a670de0b6b3a7640000610b1c565b886001600160a01b0316311015610808576107e6600a670de0b6b3a7640000610b1c565b838260ff16815181106107fb576107fb610b06565b6020026020010181815250505b50506001600160a01b0395861660009081526002602052604090208054969097166001600160a01b03199096169590951790955594915050565b600080546001600160a01b0316331461086d5760405162461bcd60e51b81526004016101a590610a56565b506001600160a01b038181166000908152600260205260409020541615155b919050565b80356001600160a01b038116811461088c57600080fd5b600080600080600080600060e0888a0312156108c357600080fd5b87356001600160401b03811681146108da57600080fd5b96506108e860208901610891565b95506108f660408901610891565b9450606088013563ffffffff8116811461090f57600080fd5b9350608088013560ff8116811461092557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600081518084526020808501945080840160005b8381101561097257815187529582019590820190600101610956565b509495945050505050565b606080825284519082018190526000906020906080840190828801845b828110156109bf5781516001600160a01b03168452928401929084019060010161099a565b505050838103828501526109d38187610942565b91505082810360408401526109e88185610942565b9695505050505050565b60008060008060808587031215610a0857600080fd5b610a1185610891565b9350610a1f60208601610891565b93969395505050506040820135916060013590565b600060208284031215610a4657600080fd5b610a4f82610891565b9392505050565b60208082526037908201527f4f6e6c794d61726b6574696e673a206f6e6c79206d61726b6574696e6720636160408201527f6e206578656375746520746869732066756e6374696f6e000000000000000000606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b0380831681811415610ae657610ae6610ab3565b6001019392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600082610b3957634e487b7160e01b600052601260045260246000fd5b500490565b600060ff821660ff811415610b5557610b55610ab3565b6001019291505056fea26469706673582212208e7128a19127e553b3b20615da58b8ff7236aca6775145432abb39f8619e425064736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaMarketing } from \"../LuminaMarketing\";\n\nexport class LuminaMarketing__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(tokenAddr_: string, overrides?: Overrides): Promise<LuminaMarketing> {\n    return super.deploy(\n      tokenAddr_,\n      overrides || {}\n    ) as Promise<LuminaMarketing>;\n  }\n  getDeployTransaction(\n    tokenAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(tokenAddr_, overrides || {});\n  }\n  attach(address: string): LuminaMarketing {\n    return super.attach(address) as LuminaMarketing;\n  }\n  connect(signer: Signer): LuminaMarketing__factory {\n    return super.connect(signer) as LuminaMarketing__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaMarketing {\n    return new Contract(address, _abi, signerOrProvider) as LuminaMarketing;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"message\",\n        type: \"string\",\n      },\n    ],\n    name: \"CampaignClaimFailed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"tokenAddr\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"message\",\n        type: \"string\",\n      },\n    ],\n    name: \"TokenCallFailed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_DAY\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_DIFFICULTY_STEP\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_NULL\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DEMO\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"LUCKY_NUMBER\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_CNT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_DONOR_BLOCKS\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_REGISTERED_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINERS_CLAIM_MAX_RECIPIENT_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINERS_CLAIM_MIN_RECIPIENT_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MIN_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARDS_CNT_LIMIT\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_INC\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_STANDARD\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_START\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_DECIMALS\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"rewardUnits\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"commisionPrc\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"_claim\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenBudget\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"ethBudget\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"addBudget\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"addCampaign\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"trusteeAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"attachTrustee\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"getCampaign\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenBudget\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"ethBudget\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"campaignId\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"valid\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"active\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCampaigns\",\n    outputs: [\n      {\n        internalType: \"address[]\",\n        name: \"campaigns\",\n        type: \"address[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasReferral\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"isLuminaFund\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"referrer\",\n        type: \"address\",\n      },\n    ],\n    name: \"referral\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"removeBudget\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"removeCampaign\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"startCampaign\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"stopCampaign\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"tokenAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"trusteeAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unpause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b50604051620029e1380380620029e1833981016040819052620000349162000240565b6200003f3362000098565b6000805460ff60a01b19169055600180546001600160a01b0319163317905562000068620000e8565b600380546001600160a01b039092166001600160a01b031992831681179091556004805490921617905562000272565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b33620000f362000166565b6001600160a01b0316146200014f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b620001646200018260201b62001b0b1760201c565b565b60006200017d6200023160201b62001bb01760201c565b905090565b62000196600054600160a01b900460ff1690565b15620001d85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640162000146565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258620002143390565b6040516001600160a01b03909116815260200160405180910390a1565b6000546001600160a01b031690565b6000602082840312156200025357600080fd5b81516001600160a01b03811681146200026b57600080fd5b9392505050565b61275f80620002826000396000f3fe60806040526004361061026b5760003560e01c8063777b0c2111610144578063b91268e8116100b6578063e3eddde21161007a578063e3eddde2146106cf578063e4663a5b146106ef578063e81ec6121461070f578063ec2165d314610724578063f2fde38b14610739578063f883fcaa146105a757600080fd5b8063b91268e8146103f0578063c28bd11c146105a7578063c28cedf314610690578063c6088d97146106a5578063df71f990146106bb57600080fd5b80639d941362116101085780639d94136214610572578063a21577671461060f578063a5c9cd8214610624578063a6b0363314610639578063ac9c4fd31461065b578063b313bd621461067b57600080fd5b8063777b0c21146105875780637fb01232146105a757806382e51bd0146105bc5780638456cb59146105dc5780638da5cb5b146105f157600080fd5b80633e6e387c116101dd5780635c975abb116101a15780635c975abb1461046e5780635fbe4d1d146104995780636bb987fe146104b9578063715018a6146104cf578063731301cf146104e457806373d6aafa1461057257600080fd5b80633e6e387c146104055780633f4ba83a1461041a578063479e92c81461042f578063504b3662146104445780635b7f415c1461045957600080fd5b80631c505d1d1161022f5780631c505d1d146103425780631df5567914610362578063270d8e0e146103825780632713b960146103a257806330db4fa0146103c25780633a3a7c53146103f057600080fd5b806306e38632146102775780630bf43309146102a45780630d423bd4146102cb57806314270b65146102ee57806318f053da1461032057600080fd5b3661027257005b600080fd5b34801561028357600080fd5b5061028c600581565b60405161ffff90911681526020015b60405180910390f35b3480156102b057600080fd5b506102b960d081565b60405160ff909116815260200161029b565b3480156102d757600080fd5b506102e0610759565b60405190815260200161029b565b3480156102fa57600080fd5b506002546001600160a01b03165b6040516001600160a01b03909116815260200161029b565b34801561032c57600080fd5b5061034061033b366004611fa0565b610780565b005b34801561034e57600080fd5b5061034061035d366004611fc4565b61092e565b34801561036e57600080fd5b5061034061037d366004611fa0565b610aa4565b34801561038e57600080fd5b5061034061039d366004611ffd565b610bd1565b3480156103ae57600080fd5b506103406103bd366004612032565b610e24565b3480156103ce57600080fd5b506103d760c881565b60405167ffffffffffffffff909116815260200161029b565b3480156103fc57600080fd5b506102e061114a565b34801561041157600080fd5b5061028c600281565b34801561042657600080fd5b50610340611161565b34801561043b57600080fd5b506102b9600a81565b34801561045057600080fd5b506102b9606481565b34801561046557600080fd5b506102b9601281565b34801561047a57600080fd5b50600054600160a01b900460ff165b604051901515815260200161029b565b3480156104a557600080fd5b50600354610308906001600160a01b031681565b3480156104c557600080fd5b506103d761996881565b3480156104db57600080fd5b50610340611195565b3480156104f057600080fd5b506105406104ff366004611fa0565b6001600160a01b0316600090815260086020526040902080546001820154600290920154909260ff8083169261010081048216926201000090910490911690565b60408051958652602086019490945260ff9092169284019290925290151560608301521515608082015260a00161029b565b34801561057e57600080fd5b5061028c600a81565b34801561059357600080fd5b506103406105a2366004611fa0565b611214565b3480156105b357600080fd5b506102b9600281565b3480156105c857600080fd5b506103406105d7366004611fa0565b6112e7565b3480156105e857600080fd5b506103406113bf565b3480156105fd57600080fd5b506000546001600160a01b0316610308565b34801561061b57600080fd5b506102b960ff81565b34801561063057600080fd5b506102e06113f1565b34801561064557600080fd5b5061064e6113fd565b60405161029b91906120bf565b34801561066757600080fd5b50610340610676366004611fa0565b61145f565b34801561068757600080fd5b506103d7600281565b34801561069c57600080fd5b50610489600181565b3480156106b157600080fd5b5061028c6103e881565b3480156106c757600080fd5b506001610489565b3480156106db57600080fd5b506104896106ea366004611fa0565b61162d565b3480156106fb57600080fd5b5061034061070a366004611fa0565b6117ed565b34801561071b57600080fd5b506102e0611a4b565b34801561073057600080fd5b506103d7611a63565b34801561074557600080fd5b50610340610754366004611fa0565b611a70565b61076560036012612122565b61077090600a61222b565b61077d906298968061223a565b81565b6000546001600160a01b031633146107b35760405162461bcd60e51b81526004016107aa90612259565b60405180910390fd5b6001600160a01b03811660009081526008602052604090206002810154610100900460ff166107f45760405162461bcd60e51b81526004016107aa9061228e565b6002810154600780546001600160a01b0385169260ff1690811061081a5761081a6122c5565b6000918252602090912001546001600160a01b03161461084c5760405162461bcd60e51b81526004016107aa906122db565b8054600554101561089a5760405162461bcd60e51b8152602060048201526018602482015277496e636f6e73697374656e7420627564676574206461746160401b60448201526064016107aa565b806001015460065410156108eb5760405162461bcd60e51b8152602060048201526018602482015277496e636f6e73697374656e7420627564676574206461746160401b60448201526064016107aa565b8054600580546000906108ff908490612312565b909155505060018101546006805460009061091b908490612312565b9091555050600080825560019091015550565b600054600160a01b900460ff1615610944575050565b6001600160a01b03821660009081526008602052604090206002810154610100900460ff166109855760405162461bcd60e51b81526004016107aa9061228e565b6002810154600780546001600160a01b0386169260ff169081106109ab576109ab6122c5565b6000918252602090912001546001600160a01b0316146109dd5760405162461bcd60e51b81526004016107aa906122db565b600281015462010000900460ff1615610a9f57805460018201546040516348d497c760e01b81526001600160a01b03858116600483015233602483015260448201939093526064810191909152849160009182918291908516906348d497c7906084016000604051808303816000875af1158015610a5f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a879190810190612401565b925092509250610a9a8786858585611bbf565b505050505b505050565b6001546001600160a01b03163314610b245760405162461bcd60e51b815260206004820152603760248201527f4f6e6c79547275737465653a206f6e6c792063726561746f722063616e20617460448201527f746163682061207472757374656520636f6e747261637400000000000000000060648201526084016107aa565b6002546001600160a01b031615610ba35760405162461bcd60e51b815260206004820152603b60248201527f4f6e6c79547275737465653a20746865207472757374656520636f6e7472616360448201527f742068617320616c7265616479206265656e206174746163686564000000000060648201526084016107aa565b600180546001600160a01b0319908116909155600280549091166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610bfb5760405162461bcd60e51b81526004016107aa90612259565b6001600160a01b03831660009081526008602052604090206002810154610100900460ff16610c3c5760405162461bcd60e51b81526004016107aa9061228e565b6002810154600780546001600160a01b0387169260ff16908110610c6257610c626122c5565b6000918252602090912001546001600160a01b031614610c945760405162461bcd60e51b81526004016107aa906122db565b82600554610ca291906124f5565b600480546040516370a0823160e01b815230928101929092526001600160a01b0316906370a0823190602401602060405180830381865afa158015610ceb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0f919061250d565b1015610d5d5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420746f6b656e2062616c616e636500000000000060448201526064016107aa565b81600654610d6b91906124f5565b471015610dba5760405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e74206574682062616c616e6365000000000000000060448201526064016107aa565b8260056000828254610dcc91906124f5565b925050819055508160066000828254610de591906124f5565b9091555050805483908290600090610dfe9084906124f5565b9250508190555081816001016000828254610e1991906124f5565b909155505050505050565b6002546001600160a01b03163314610e9a5760405162461bcd60e51b815260206004820152603360248201527f4f6e6c79547275737465653a206f6e6c7920747275737465652063616e20657860448201527232b1baba32903a3434b990333ab731ba34b7b760691b60648201526084016107aa565b600054600160a01b900460ff1615610eb157611143565b60005b60075463ffffffff8216101561114157600060078263ffffffff1681548110610edf57610edf6122c5565b60009182526020808320909101546001600160a01b03168083526008909152604090912060028101549192509060ff61010090910416610f315760405162461bcd60e51b81526004016107aa9061228e565b6002810154600780546001600160a01b0385169260ff16908110610f5757610f576122c5565b6000918252602090912001546001600160a01b031614610f895760405162461bcd60e51b81526004016107aa906122db565b600281015462010000900460ff161561112c57805460018201546040516303c9f1e760e01b815267ffffffffffffffff8b1660048201526001600160a01b038a81166024830152898116604483015263ffffffff8916606483015260ff8816608483015260a482019390935260c481019190915283918216906303c9f1e79060e4016000604051808303816000875af192505050801561104b57506040513d6000823e601f3d908101601f191682016040526110489190810190612401565b60015b61111957611057612526565b806308c379a014156110b8575061106c612542565b8061107757506110ba565b7f1c78fe569029f719914c6066018a968a8ca4d3810eed21ca6d09951cd0a9f590848b836040516110aa93929190612619565b60405180910390a15061112a565b505b604080516001600160a01b038516815267ffffffffffffffff8b166020820152606081830181905260009082015290517f1c78fe569029f719914c6066018a968a8ca4d3810eed21ca6d09951cd0a9f5909181900360800190a161112a565b6111268686858585611bbf565b5050505b505b5050808061113990612656565b915050610eb4565b505b5050505050565b61115660036012612122565b61077d90600a61222b565b6000546001600160a01b0316331461118b5760405162461bcd60e51b81526004016107aa90612259565b611193611e87565b565b6000546001600160a01b031633146111bf5760405162461bcd60e51b81526004016107aa90612259565b600054600160a01b900460ff161561120c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107aa565b611193611f0b565b6000546001600160a01b0316331461123e5760405162461bcd60e51b81526004016107aa90612259565b6001600160a01b03811660009081526008602052604090206002810154610100900460ff1661127f5760405162461bcd60e51b81526004016107aa9061228e565b6002810154600780546001600160a01b0385169260ff169081106112a5576112a56122c5565b6000918252602090912001546001600160a01b0316146112d75760405162461bcd60e51b81526004016107aa906122db565b600201805462ff00001916905550565b6000546001600160a01b031633146113115760405162461bcd60e51b81526004016107aa90612259565b6001600160a01b03811660009081526008602052604090206002810154610100900460ff166113525760405162461bcd60e51b81526004016107aa9061228e565b6002810154600780546001600160a01b0385169260ff16908110611378576113786122c5565b6000918252602090912001546001600160a01b0316146113aa5760405162461bcd60e51b81526004016107aa906122db565b600201805462ff000019166201000017905550565b6000546001600160a01b031633146113e95760405162461bcd60e51b81526004016107aa90612259565b611193611b0b565b61077d6012600a61222b565b6060600780548060200260200160405190810160405280929190818152602001828054801561145557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611437575b5050505050905090565b6000546001600160a01b031633146114895760405162461bcd60e51b81526004016107aa90612259565b6001600160a01b03811660009081526008602052604090206002810154610100900460ff161561151a5760405162461bcd60e51b815260206004820152603660248201527f5468652063616d706169676e2077697468207468697320636f6e7472616374206044820152756164647265737320616c72656164792065786973747360501b60648201526084016107aa565b6007546101001161156d5760405162461bcd60e51b815260206004820152601d60248201527f4e6f206d6f72652063616d706169676e732061726520616c6c6f77656400000060448201526064016107aa565b60028101805461010061ff00198216811783556007805461ffff1990931660ff938416179091178355805460018101825560008290527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180546001600160a01b0319166001600160a01b038716908117909155925481549192169081106115f7576115f76122c5565b6000918252602090912001546001600160a01b0316146116295760405162461bcd60e51b81526004016107aa906122db565b5050565b60008054600160a01b900460ff16156116885760405162461bcd60e51b815260206004820181905260248201527f546865206d61726b6574696e6720636f6e74726163742069732070617573656460448201526064016107aa565b6001600160a01b03821660009081526008602052604090206002810154610100900460ff166116c95760405162461bcd60e51b81526004016107aa9061228e565b6002810154600780546001600160a01b0386169260ff169081106116ef576116ef6122c5565b6000918252602090912001546001600160a01b0316146117215760405162461bcd60e51b81526004016107aa906122db565b600281015462010000900460ff1661177b5760405162461bcd60e51b815260206004820152601a60248201527f5468652063616d706169676e206973206e6f742061637469766500000000000060448201526064016107aa565b604051632b24a7d560e11b815233600482015283906001600160a01b038216906356494faa90602401602060405180830381865afa1580156117c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e5919061267a565b949350505050565b6000546001600160a01b031633146118175760405162461bcd60e51b81526004016107aa90612259565b6001600160a01b03811660009081526008602052604090206002810154610100900460ff166118585760405162461bcd60e51b81526004016107aa9061228e565b6002810154600780546001600160a01b0385169260ff1690811061187e5761187e6122c5565b6000918252602090912001546001600160a01b0316146118b05760405162461bcd60e51b81526004016107aa906122db565b6118b982610780565b60078054600091906118cd90600190612312565b815481106118dd576118dd6122c5565b60009182526020808320909101546001600160a01b0316808352600890915260409091206002015490915060ff6101009091041661195d5760405162461bcd60e51b815260206004820152601960248201527f496e636f73697374656e742063616d706169676e20646174610000000000000060448201526064016107aa565b600280830180546001600160a01b0384166000908152600860205260409020909201805460ff191660ff9384161790555460078054849391929091169081106119a8576119a86122c5565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060078054806119e7576119e761269c565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556002938401805461ff00191690556001600160a01b0394909416815260089093525060408220828155600181019290925501805462ffffff19169055565b611a576012600a61222b565b61077d906103e861223a565b61077d619968600e6126b2565b6000546001600160a01b03163314611a9a5760405162461bcd60e51b81526004016107aa90612259565b6001600160a01b038116611aff5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107aa565b611b0881611f3b565b50565b600054600160a01b900460ff1615611b585760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107aa565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611b933390565b6040516001600160a01b03909116815260200160405180910390a1565b6000546001600160a01b031690565b60005b8351811015611141576000848281518110611bdf57611bdf6122c5565b6020026020010151905060006001600160a01b0316816001600160a01b031614611e74578351821015611dbc576000848381518110611c2057611c206122c5565b60200260200101519050600081118015611c3b575086548111155b15611dba576004805460405163a9059cbb60e01b81526001600160a01b03858116938201939093526024810184905291169063a9059cbb906044016020604051808303816000875af1925050508015611cb1575060408051601f3d908101601f19168201909252611cae9181019061267a565b60015b611d8657611cbd612526565b806308c379a01415611d2a5750611cd2612542565b80611cdd5750611d2c565b6003546040517fa76d52006316997771fc50eef565e7d0432c0e464675710e478b3322568b510991611d1c918c916001600160a01b03169085906126e2565b60405180910390a150611dba565b505b600354604080516001600160a01b038b8116825290921660208301526060828201819052600090830152517fa76d52006316997771fc50eef565e7d0432c0e464675710e478b3322568b51099181900360800190a1611dba565b5080876000016000828254611d9b9190612312565b925050819055508060056000828254611db49190612312565b90915550505b505b8251821015611e74576000838381518110611dd957611dd96122c5565b60200260200101519050600081118015611df7575080876001015410155b8015611e035750804710155b15611e72576040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015611e3e573d6000803e3d6000fd5b5080876001016000828254611e539190612312565b925050819055508060066000828254611e6c9190612312565b90915550505b505b5080611e7f8161270e565b915050611bc2565b600054600160a01b900460ff16611ed75760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107aa565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33611b93565b6000546001600160a01b03163314611f355760405162461bcd60e51b81526004016107aa90612259565b61119360005b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114611b0857600080fd5b600060208284031215611fb257600080fd5b8135611fbd81611f8b565b9392505050565b60008060408385031215611fd757600080fd5b8235611fe281611f8b565b91506020830135611ff281611f8b565b809150509250929050565b60008060006060848603121561201257600080fd5b833561201d81611f8b565b95602085013595506040909401359392505050565b600080600080600060a0868803121561204a57600080fd5b853567ffffffffffffffff8116811461206257600080fd5b9450602086013561207281611f8b565b9350604086013561208281611f8b565b9250606086013563ffffffff8116811461209b57600080fd5b9150608086013560ff811681146120b157600080fd5b809150509295509295909350565b6020808252825182820181905260009190848201906040850190845b818110156121005783516001600160a01b0316835292840192918401916001016120db565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168082101561213c5761213c61210c565b90039392505050565b600181815b808511156121805781600019048211156121665761216661210c565b8085161561217357918102915b93841c939080029061214a565b509250929050565b60008261219757506001612225565b816121a457506000612225565b81600181146121ba57600281146121c4576121e0565b6001915050612225565b60ff8411156121d5576121d561210c565b50506001821b612225565b5060208310610133831016604e8410600b8410161715612203575081810a612225565b61220d8383612145565b80600019048211156122215761222161210c565b0290505b92915050565b6000611fbd60ff841683612188565b60008160001904831182151516156122545761225461210c565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601b908201527f5468652063616d706169676e20646f6573206e6f742065786973740000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252601a908201527f496e636f6e73697374656e742063616d706169676e206c697374000000000000604082015260600190565b6000828210156123245761232461210c565b500390565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561236557612365612329565b6040525050565b600067ffffffffffffffff82111561238657612386612329565b5060051b60200190565b600082601f8301126123a157600080fd5b815160206123ae8261236c565b6040516123bb828261233f565b83815260059390931b85018201928281019150868411156123db57600080fd5b8286015b848110156123f657805183529183019183016123df565b509695505050505050565b60008060006060848603121561241657600080fd5b835167ffffffffffffffff8082111561242e57600080fd5b818601915086601f83011261244257600080fd5b8151602061244f8261236c565b60405161245c828261233f565b83815260059390931b850182019282810191508a84111561247c57600080fd5b948201945b838610156124a357855161249481611f8b565b82529482019490820190612481565b918901519197509093505050808211156124bc57600080fd5b6124c887838801612390565b935060408601519150808211156124de57600080fd5b506124eb86828701612390565b9150509250925092565b600082198211156125085761250861210c565b500190565b60006020828403121561251f57600080fd5b5051919050565b600060033d111561253f5760046000803e5060005160e01c5b90565b600060443d10156125505790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561258057505050505090565b82850191508151818111156125985750505050505090565b843d87010160208285010111156125b25750505050505090565b6125c16020828601018761233f565b509095945050505050565b6000815180845260005b818110156125f2576020818501810151868301820152016125d6565b81811115612604576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038416815267ffffffffffffffff8316602082015260606040820181905260009061264d908301846125cc565b95945050505050565b600063ffffffff808316818114156126705761267061210c565b6001019392505050565b60006020828403121561268c57600080fd5b81518015158114611fbd57600080fd5b634e487b7160e01b600052603160045260246000fd5b600067ffffffffffffffff808316818516818304811182151516156126d9576126d961210c565b02949350505050565b6001600160a01b0384811682528316602082015260606040820181905260009061264d908301846125cc565b60006000198214156127225761272261210c565b506001019056fea2646970667358221220582009729fa082a0bffd3c77a114e9d6141ff41d77b2ccf9f5d521ed3c83794f64736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaRecords } from \"../LuminaRecords\";\n\nexport class LuminaRecords__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<LuminaRecords> {\n    return super.deploy(overrides || {}) as Promise<LuminaRecords>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): LuminaRecords {\n    return super.attach(address) as LuminaRecords;\n  }\n  connect(signer: Signer): LuminaRecords__factory {\n    return super.connect(signer) as LuminaRecords__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaRecords {\n    return new Contract(address, _abi, signerOrProvider) as LuminaRecords;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"commisionPrc\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"Commision\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RegisteredBalance\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_DAY\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_DIFFICULTY_STEP\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_NULL\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DEMO\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"LUCKY_NUMBER\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_CNT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_DONOR_BLOCKS\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_REGISTERED_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINERS_CLAIM_MAX_RECIPIENT_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINERS_CLAIM_MIN_RECIPIENT_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MIN_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARDS_CNT_LIMIT\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_INC\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_STANDARD\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_START\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_DECIMALS\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"rewardUnits\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"_addClaim\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"force\",\n        type: \"bool\",\n      },\n    ],\n    name: \"_registerBalance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"registered\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"_updateBalance\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"firstBlockNumber_\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"_updateFirstBlockNumber\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"adminAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"adminAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"attachAdmin\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"attachToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"trusteeAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"attachTrustee\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"findBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getBalances\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"balances\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint64[]\",\n        name: \"blockNumbers\",\n        type: \"uint64[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64[]\",\n        name: \"blockNumbers\",\n        type: \"uint64[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"getClaims\",\n    outputs: [\n      {\n        internalType: \"uint16[]\",\n        name: \"claimsCnt\",\n        type: \"uint16[]\",\n      },\n      {\n        internalType: \"bool[]\",\n        name: \"claimed\",\n        type: \"bool[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"getClaimsCnt\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n    ],\n    name: \"getCommision\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"commisionPrc\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasClaimed\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"rewardUnits\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint8\",\n        name: \"commisionPrc\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"setCommision\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"tokenAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"trusteeAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b5060008054336001600160a01b031991821681178355600280548316821790556004805490921617905560058054600160a01b600160e01b0319169055611c1d90819061005d90396000f3fe608060405234801561001057600080fd5b50600436106102475760003560e01c80636bb987fe1161013b578063b313bd62116100b8578063d045d5ae1161007c578063d045d5ae14610478578063d7a8a2b7146104a5578063e81ec612146104cd578063ec2165d3146104d5578063f883fcaa1461041057600080fd5b8063b313bd621461045f578063b91268e814610346578063c28bd11c14610410578063c28cedf314610467578063c6088d971461046f57600080fd5b8063910eb1ce116100ff578063910eb1ce146104295780639d94136214610408578063a21577671461043c578063a5c9cd8214610444578063ad6e33181461044c57600080fd5b80636bb987fe146103de578063731fd3f7146103e757806373d6aafa146104085780637fb0123214610410578063818305931461041857600080fd5b80633e6e387c116101c9578063552ba3331161018d578063552ba3331461038c578063566568751461039f5780635b7f415c146103b25780635fbe4d1d146103ba578063609eb1c3146103cb57600080fd5b80633e6e387c1461034e578063406a6f6014610356578063479e92c814610369578063480414df14610371578063504b36621461038457600080fd5b80631df55679116102105780631df55679146102db57806322a0c348146102f057806330db4fa014610303578063362b8b32146103235780633a3a7c531461034657600080fd5b8062113e081461024c57806306e386321461026b5780630bf43309146102865780630d423bd4146102a057806314270b65146102b6575b600080fd5b6102546104dd565b6040516102629291906115d3565b60405180910390f35b610273600581565b60405161ffff9091168152602001610262565b61028e60d081565b60405160ff9091168152602001610262565b6102a86106ad565b604051908152602001610262565b6003546001600160a01b03165b6040516001600160a01b039091168152602001610262565b6102ee6102e9366004611673565b6106d4565b005b6102a86102fe3660046116a5565b610806565b61030b60c881565b6040516001600160401b039091168152602001610262565b6103366103313660046116d8565b61096b565b6040519015158152602001610262565b6102a8610bf3565b610273600281565b6102ee610364366004611673565b610c0a565b61028e600a81565b6102ee61037f366004611673565b610d27565b61028e606481565b6102ee61039a36600461171d565b610e44565b61028e6103ad366004611673565b611024565b61028e601281565b6001546001600160a01b03166102c3565b6102ee6103d9366004611747565b6110b8565b61030b61996881565b6103fa6103f53660046117a2565b6111bc565b604051610262929190611878565b610273600a81565b61028e600281565b6005546001600160a01b03166102c3565b6102ee6104373660046118ec565b61133c565b61028e60ff81565b6102a86113dc565b6102ee61045a366004611907565b6113e8565b61030b600281565b610336600181565b6102736103e881565b6102736104863660046118ec565b6001600160401b031660009081526007602052604090205461ffff1690565b6104b86104b336600461192a565b6114ad565b60405163ffffffff9091168152602001610262565b6102a86114e4565b61030b6114fc565b33600090815260066020526040808220815160e08101835260609384939092908290810182600586835b828210156105485760408051808201909152600283028501805482526001908101546001600160401b03166020808401919091529183529092019101610507565b50505090825250600a919091015460ff9081166020928301529082015191925081166001600160401b038111156105815761058161178c565b6040519080825280602002602001820160405280156105aa578160200160208202803683370190505b5093508060ff166001600160401b038111156105c8576105c861178c565b6040519080825280602002602001820160405280156105f1578160200160208202803683370190505b50925060005b826020015160ff168160ff1610156106a657825160ff82166005811061061f5761061f611954565b602002015160000151858260ff168151811061063d5761063d611954565b6020908102919091010152825160ff82166005811061065e5761065e611954565b602002015160200151848260ff168151811061067c5761067c611954565b6001600160401b03909216602092830291909101909101528061069e81611980565b9150506105f7565b5050509091565b6106b9600360126119a0565b6106c490600a611aa7565b6106d19062989680611ab6565b81565b6002546001600160a01b031633146107595760405162461bcd60e51b815260206004820152603760248201527f4f6e6c79547275737465653a206f6e6c792063726561746f722063616e20617460448201527f746163682061207472757374656520636f6e747261637400000000000000000060648201526084015b60405180910390fd5b6003546001600160a01b0316156107d85760405162461bcd60e51b815260206004820152603b60248201527f4f6e6c79547275737465653a20746865207472757374656520636f6e7472616360448201527f742068617320616c7265616479206265656e20617474616368656400000000006064820152608401610750565b600280546001600160a01b0319908116909155600380549091166001600160a01b0392909216919091179055565b6001600160a01b038216600090815260066020526040808220815160e08101835283929091908290810182600586835b828210156108775760408051808201909152600283028501805482526001908101546001600160401b03166020808401919091529183529092019101610836565b50505090825250600a919091015460ff16602090910152905060005b816020015160ff168160ff16101561091457815160ff8216600581106108bb576108bb611954565b6020020151602001516001600160401b0316846001600160401b03161061090257815160ff8216600581106108f2576108f2611954565b6020020151519250610965915050565b8061090c81611980565b915050610893565b5081156109635760405162461bcd60e51b815260206004820152601d60248201527f5f62616c616e636546696e643a20636f72727570742062616c616e63650000006044820152606401610750565b505b92915050565b6001546000906001600160a01b031633146109985760405162461bcd60e51b815260040161075090611ad5565b6001600160a01b03841660009081526006602052604090206109b981611509565b6109c5600360126119a0565b6109d090600a611aa7565b8410156109f657600a8101546000945060ff166109f1576000915050610bec565b610a30565b610a026012600a611aa7565b610a0e906103e8611ab6565b841115610a3057610a216012600a611aa7565b610a2d906103e8611ab6565b93505b600a810154439060ff1615801590610a485750815485145b15610a565760019250610be9565b600a820154600560ff9091161080610a6b5750835b15610be457600a820154600090600560ff90911610610a9557610a90600160056119a0565b610a9e565b600a83015460ff165b9050805b60ff811615610b2a5783610ab76001836119a0565b60ff1660058110610aca57610aca611954565b600202018460ff831660058110610ae357610ae3611954565b8254600291909102919091019081556001918201549101805467ffffffffffffffff19166001600160401b0390921691909117905580610b2281611b24565b915050610aa2565b5085835560018301805467ffffffffffffffff19166001600160401b038416179055600a830154600560ff9091161015610b8d57600a8301805460ff16906000610b7383611980565b91906101000a81548160ff021916908360ff160217905550505b604080516001600160401b038416815260208101889052600195506001600160a01b038916917f0794a217cb61f365d81276ab2903aebd9d4d2c6d326af7deba31fce55ca8c48a910160405180910390a250610be9565b600092505b50505b9392505050565b610bff600360126119a0565b6106d190600a611aa7565b6000546001600160a01b03163314610c805760405162461bcd60e51b815260206004820152603360248201527f4f6e6c79546f6b656e3a206f6e6c792063726561746f722063616e206174746160448201527218da0818481d1bdad95b8818dbdb9d1c9858dd606a1b6064820152608401610750565b6001546001600160a01b031615610cf95760405162461bcd60e51b815260206004820152603760248201527f4f6e6c79546f6b656e3a2074686520746f6b656e20636f6e74726163742068616044820152761cc8185b1c9958591e481899595b88185d1d1858da1959604a1b6064820152608401610750565b600080546001600160a01b0319908116909155600180549091166001600160a01b0392909216919091179055565b6004546001600160a01b03163314610d9d5760405162461bcd60e51b815260206004820152603360248201527f4f6e6c7941646d696e3a206f6e6c792063726561746f722063616e206174746160448201527218da08184818591b5a5b8818dbdb9d1c9858dd606a1b6064820152608401610750565b6005546001600160a01b031615610e165760405162461bcd60e51b815260206004820152603760248201527f4f6e6c7941646d696e3a207468652061646d696e20636f6e74726163742068616044820152761cc8185b1c9958591e481899595b88185d1d1858da1959604a1b6064820152608401610750565b600480546001600160a01b0319908116909155600580549091166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610e6e5760405162461bcd60e51b815260040161075090611ad5565b6001600160a01b0382166000908152600660205260409020610e8f81611509565b610e9b600360126119a0565b610ea690600a611aa7565b821015610ec757600a8101546000925060ff16610ec257505050565b610f01565b610ed36012600a611aa7565b610edf906103e8611ab6565b821115610f0157610ef26012600a611aa7565b610efe906103e8611ab6565b91505b600a810154439060ff16610fba5782825560018201805467ffffffffffffffff19166001600160401b038316179055600a8201805460ff16906000610f4583611980565b91906101000a81548160ff021916908360ff16021790555050836001600160a01b03167f0794a217cb61f365d81276ab2903aebd9d4d2c6d326af7deba31fce55ca8c48a8285604051610fad9291906001600160401b03929092168252602082015260400190565b60405180910390a261101d565b815483101561101d57508181556001810154604080516001600160401b0390921680835260208301859052916001600160a01b038616917f0794a217cb61f365d81276ab2903aebd9d4d2c6d326af7deba31fce55ca8c48a910160405180910390a25b50505b5050565b6001600160a01b03811660009081526009602052604081205460ff16823b151581156110615760ff8281161461105a5781611070565b6000611070565b8061106d576016611070565b60005b925060ff83161580611095575060ff8316600a118015906110955750605a60ff841611155b6110b15760405162461bcd60e51b815260040161075090611b41565b5050919050565b6003546001600160a01b0316331461112e5760405162461bcd60e51b815260206004820152603360248201527f4f6e6c79547275737465653a206f6e6c7920747275737465652063616e20657860448201527232b1baba32903a3434b990333ab731ba34b7b760691b6064820152608401610750565b6001600160401b0383166000908152600760205260408120805461ffff169161115683611b96565b825461ffff9182166101009390930a9283029190920219909116179055506001600160401b0390921660009081526008602090815260408083206001600160a01b03909416835292905220805463ffffffff90921663ffffffff19909216919091179055565b8151606090819060ff81166001600160401b038111156111de576111de61178c565b604051908082528060200260200182016040528015611207578160200160208202803683370190505b5092508060ff166001600160401b038111156112255761122561178c565b60405190808252806020026020018201604052801561124e578160200160208202803683370190505b50915060005b8160ff168160ff161015611333576112a1868260ff168151811061127a5761127a611954565b60200260200101516001600160401b031660009081526007602052604090205461ffff1690565b848260ff16815181106112b6576112b6611954565b602002602001019061ffff16908161ffff16815250506112f2868260ff16815181106112e4576112e4611954565b6020026020010151866114ad565b63ffffffff1660001415838260ff168151811061131157611311611954565b911515602092830291909101909101528061132b81611980565b915050611254565b50509250929050565b6005546001600160a01b031633146113af5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e3a20636f6e6c792061646d696e2063616e20657865637560448201526f3a32903a3434b990333ab731ba34b7b760811b6064820152608401610750565b600580546001600160401b03909216600160a01b0267ffffffffffffffff60a01b19909216919091179055565b6106d16012600a611aa7565b3360ff8216158061140c575060ff8216600a1180159061140c5750605a60ff831611155b6114285760405162461bcd60e51b815260040161075090611b41565b600060ff831615611439578261143c565b60ff5b6001600160a01b03831660008181526009602052604090819020805460ff851660ff1990911617905551919250907f51a5c3921364280218d7e7926208d254f2ce18260cf6f45e7bb9432b044fe20b906114a090869060ff91909116815260200190565b60405180910390a2505050565b6001600160401b0390911660009081526008602090815260408083206001600160a01b039094168352929052205463ffffffff1690565b6114f06012600a611aa7565b6106d1906103e8611ab6565b6106d1619968600e611bb8565b600a810154600160ff90911611156115d057600a8101546000906115329060019060ff166119a0565b90505b60ff8116156110205760008261154c6001846119a0565b60ff166005811061155f5761155f611954565b600554600160029290920292909201908101549092506001600160401b03600160a01b90920482169116116115bd57600a8301805460ff169060006115a383611b24565b91906101000a81548160ff021916908360ff160217905550505b50806115c881611b24565b915050611535565b50565b604080825283519082018190526000906020906060840190828701845b8281101561160c578151845292840192908401906001016115f0565b5050508381038285015284518082528583019183019060005b8181101561164a5783516001600160401b031683529284019291840191600101611625565b5090979650505050505050565b80356001600160a01b038116811461166e57600080fd5b919050565b60006020828403121561168557600080fd5b610bec82611657565b80356001600160401b038116811461166e57600080fd5b600080604083850312156116b857600080fd5b6116c183611657565b91506116cf6020840161168e565b90509250929050565b6000806000606084860312156116ed57600080fd5b6116f684611657565b9250602084013591506040840135801515811461171257600080fd5b809150509250925092565b6000806040838503121561173057600080fd5b61173983611657565b946020939093013593505050565b60008060006060848603121561175c57600080fd5b6117658461168e565b925061177360208501611657565b9150604084013563ffffffff8116811461171257600080fd5b634e487b7160e01b600052604160045260246000fd5b600080604083850312156117b557600080fd5b82356001600160401b03808211156117cc57600080fd5b818501915085601f8301126117e057600080fd5b81356020828211156117f4576117f461178c565b8160051b604051601f19603f830116810181811086821117156118195761181961178c565b60405292835281830193508481018201928984111561183757600080fd5b948201945b8386101561185c5761184d8661168e565b8552948201949382019361183c565b965061186b9050878201611657565b9450505050509250929050565b604080825283519082018190526000906020906060840190828701845b828110156118b557815161ffff1684529284019290840190600101611895565b5050508381038285015284518082528583019183019060005b8181101561164a5783511515835292840192918401916001016118ce565b6000602082840312156118fe57600080fd5b610bec8261168e565b60006020828403121561191957600080fd5b813560ff81168114610bec57600080fd5b6000806040838503121561193d57600080fd5b6119468361168e565b91506116cf60208401611657565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8114156119975761199761196a565b60010192915050565b600060ff821660ff8416808210156119ba576119ba61196a565b90039392505050565b600181815b808511156119fe5781600019048211156119e4576119e461196a565b808516156119f157918102915b93841c93908002906119c8565b509250929050565b600082611a1557506001610965565b81611a2257506000610965565b8160018114611a385760028114611a4257611a5e565b6001915050610965565b60ff841115611a5357611a5361196a565b50506001821b610965565b5060208310610133831016604e8410600b8410161715611a81575081810a610965565b611a8b83836119c3565b8060001904821115611a9f57611a9f61196a565b029392505050565b6000610bec60ff841683611a06565b6000816000190483118215151615611ad057611ad061196a565b500290565b6020808252602f908201527f4f6e6c79546f6b656e3a206f6e6c7920746f6b656e2063616e2065786563757460408201526e32903a3434b990333ab731ba34b7b760891b606082015260800190565b600060ff821680611b3757611b3761196a565b6000190192915050565b60208082526035908201527f436f6d6d6973696f6e2076616c7565206973206f7574206f6620616c6c6f77656040820152740642072616e67653a205b31302d39305d206f72203605c1b606082015260800190565b600061ffff80831681811415611bae57611bae61196a565b6001019392505050565b60006001600160401b0380831681851681830481118215151615611bde57611bde61196a565b0294935050505056fea264697066735822122014f6304c53150bcfa65cf960fdda22a8c7f1270242f0ab17b58f7ee86e92e86564736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaTrustee } from \"../LuminaTrustee\";\n\nexport class LuminaTrustee__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    tokenAddr_: string,\n    recordsAddr_: string,\n    adminAddr_: string,\n    overrides?: Overrides\n  ): Promise<LuminaTrustee> {\n    return super.deploy(\n      tokenAddr_,\n      recordsAddr_,\n      adminAddr_,\n      overrides || {}\n    ) as Promise<LuminaTrustee>;\n  }\n  getDeployTransaction(\n    tokenAddr_: string,\n    recordsAddr_: string,\n    adminAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      tokenAddr_,\n      recordsAddr_,\n      adminAddr_,\n      overrides || {}\n    );\n  }\n  attach(address: string): LuminaTrustee {\n    return super.attach(address) as LuminaTrustee;\n  }\n  connect(signer: Signer): LuminaTrustee__factory {\n    return super.connect(signer) as LuminaTrustee__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaTrustee {\n    return new Contract(address, _abi, signerOrProvider) as LuminaTrustee;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenAddr_\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recordsAddr_\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"adminAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"solution\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"commisionPrc\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"claimNo\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"Claim\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"marketingAddr\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"message\",\n        type: \"string\",\n      },\n    ],\n    name: \"MarketingCallFailed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_DAY\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_DIFFICULTY_STEP\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_NULL\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DEMO\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"LUCKY_NUMBER\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_CNT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_DONOR_BLOCKS\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_REGISTERED_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINERS_CLAIM_MAX_RECIPIENT_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINERS_CLAIM_MIN_RECIPIENT_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MIN_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARDS_CNT_LIMIT\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_INC\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_STANDARD\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_START\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_DECIMALS\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"adminAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"solution\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"claimReward\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"rewardUnits\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"reason\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"claimsCnt\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getClaimedTokens\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getProgress\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"progress\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"progressMax\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"marketingAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"recordsAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"marketingAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"setMarketingAddr\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"tokenAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unpause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"solution\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"verifyClaim\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"rewardUnits\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"reason\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"rewardsCnt\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"claimsCnt\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"solution\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"verifySolution\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"solvedDifficulty\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b50604051620029373803806200293783398101604081905262000034916200025d565b6200003f33620000ca565b6000805460ff60a01b19169055620000566200011a565b600180546001600160a01b039485166001600160a01b03199182168117909255600280549486169482168517905560038054939095169281168317909455600580548516909117905560068054909316909117909155600780546001600160e01b03191690911790556000600855620002a7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146200017a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6200018f6200019160201b6200170b1760201c565b565b620001a5600054600160a01b900460ff1690565b15620001e75760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640162000171565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258620002233390565b6040516001600160a01b03909116815260200160405180910390a1565b80516001600160a01b03811681146200025857600080fd5b919050565b6000806000606084860312156200027357600080fd5b6200027e8462000240565b92506200028e6020850162000240565b91506200029e6040850162000240565b90509250925092565b61268080620002b76000396000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c80637fb012321161013b578063b91268e8116100b8578063e81ec6121161007c578063e81ec61214610462578063ec2165d31461046a578063f2fde38b14610472578063f668bee514610485578063f883fcaa146103cd57600080fd5b8063b91268e81461033e578063b915dec214610449578063c28bd11c146103cd578063c28cedf314610451578063c6088d971461045957600080fd5b80639d941362116100ff5780639d941362146103c5578063a21577671461041e578063a5c9cd8214610426578063a7c1d5901461042e578063b313bd621461044157600080fd5b80637fb01232146103cd57806381830593146103d55780638456cb59146103e85780638da5cb5b146103f0578063939c44561461040157600080fd5b80633f4ba83a116101c95780635c975abb1161018d5780635c975abb146103835780635fbe4d1d146103a15780636bb987fe146103b4578063715018a6146103bd57806373d6aafa146103c557600080fd5b80633f4ba83a1461034e5780633ff42b9214610358578063479e92c81461036b578063504b3662146103735780635b7f415c1461037b57600080fd5b80630ff8a7eb116102105780630ff8a7eb146102e05780631e7bfd60146102f357806330db4fa01461031e5780633a3a7c531461033e5780633e6e387c1461034657600080fd5b806306e38632146102425780630bf43309146102625780630d423bd41461027c5780630e7d8db914610292575b600080fd5b61024a600581565b60405161ffff90911681526020015b60405180910390f35b61026a60d081565b60405160ff9091168152602001610259565b6102846104cb565b604051908152602001610259565b6102a56102a0366004611f47565b6104f2565b6040805163ffffffff909616865260ff90941660208601529115159284019290925261ffff918216606084015216608082015260a001610259565b61024a6102ee366004611f47565b61096a565b600254610306906001600160a01b031681565b6040516001600160a01b039091168152602001610259565b61032660c881565b6040516001600160401b039091168152602001610259565b610284610b58565b61024a600281565b610356610b6f565b005b600454610306906001600160a01b031681565b61026a600a81565b61026a606481565b61026a601281565b600054600160a01b900460ff165b6040519015158152602001610259565b600154610306906001600160a01b031681565b61032661996881565b610356610ba3565b61024a600a81565b61026a600281565b600354610306906001600160a01b031681565b610356610bff565b6000546001600160a01b0316610306565b610409610c31565b60408051928352602083019190915201610259565b61026a60ff81565b610284610cb4565b61035661043c366004611f98565b610cc0565b610326600281565b600854610284565b610391600181565b61024a6103e881565b610284610e25565b610326610e3d565b610356610480366004611f98565b610e4a565b610498610493366004611f47565b610ee5565b6040805163ffffffff909516855260ff90931660208501529015159183019190915261ffff166060820152608001610259565b6104d760036012611fcb565b6104e290600a6120d2565b6104ef90629896806120e1565b81565b600080600080600061050e60005460ff600160a01b9091041690565b156105345760405162461bcd60e51b815260040161052b90612100565b60405180910390fd5b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260075460405163f5d4d8a160e01b81526001600160401b038c1660048201526000916001600160a01b03169063f5d4d8a19060240161012060405180830381865afa1580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e491906121cf565b608083015191975091935090915061063e5760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206368616c6c656e6765207265636f72640000000000000000604482015260640161052b565b60006106508c8b84866000015161178d565b905060006106608d8d8d8d61096a565b905060009850600097508160ff168161ffff161061085b576005546040516370a0823160e01b81526001600160a01b038d8116600483015260009216906370a0823190602401602060405180830381865afa1580156106c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e79190612293565b9050600660009054906101000a90046001600160a01b03166001600160a01b031663d7a8a2b78f8e6040518363ffffffff1660e01b81526004016107499291906001600160401b039290921682526001600160a01b0316602082015260400190565b602060405180830381865afa158015610766573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078a91906122ac565b63ffffffff161561079e5760039850610855565b8b6001600160a01b03168d6001600160a01b0316141580156107d557506107c760036012611fcb565b6107d290600a6120d2565b81105b156107e35760059850610855565b8b6001600160a01b03168d6001600160a01b031614158015610827575061080c60036012611fcb565b61081790600a6120d2565b61082490629896806120e1565b81115b156108355760069850610855565b8b3b1515801561084b57506108498c61196d565b155b1561085557600798505b50610860565b600297505b60ff881661095b57600061087785600001516119e1565b9097509050600261ffff8816111561088e57600296505b600660009054906101000a90046001600160a01b03166001600160a01b031663d045d5ae8f6040518263ffffffff1660e01b81526004016108de91906001600160401b0391909116815260200190565b602060405180830381865afa1580156108fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091f91906122d2565b95508661ffff168661ffff16101561095457846040015161ffff168161ffff1661094991906122ed565b995060009850610959565b600498505b505b50505050945094509450945094565b60008054600160a01b900460ff16156109955760405162461bcd60e51b815260040161052b90612100565b60075460405163f5d4d8a160e01b81526001600160401b0387166004820152600091829182916001600160a01b03169063f5d4d8a19060240161012060405180830381865afa1580156109ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1091906121cf565b9250925092508060ff166001610a27576014610a2a565b600a5b60ff1611158015610a3f575060d060ff821611155b610a8b5760405162461bcd60e51b815260206004820152601a60248201527f446966666963756c7479206973206f7574206f662072616e6765000000000000604482015260640161052b565b811580610a9a57506001821515145b610aa357600080fd5b82516040805160208101889052908101919091526001600160a01b0380881660608301528816608082015260009060a00160405160208183030381529060405290508051608014610b2e5760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420736f6c7574696f6e206461746160581b604482015260640161052b565b80516020820120610b3e81611a7a565b610b4a90610100612319565b9a9950505050505050505050565b610b6460036012611fcb565b6104ef90600a6120d2565b6000546001600160a01b03163314610b995760405162461bcd60e51b815260040161052b9061233c565b610ba1611aed565b565b6000546001600160a01b03163314610bcd5760405162461bcd60e51b815260040161052b9061233c565b600054600160a01b900460ff1615610bf75760405162461bcd60e51b815260040161052b90612100565b610ba1611b71565b6000546001600160a01b03163314610c295760405162461bcd60e51b815260040161052b9061233c565b610ba161170b565b6008546005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca19190612293565b600854610cae9190612371565b90509091565b6104ef6012600a6120d2565b6000546001600160a01b03163314610cea5760405162461bcd60e51b815260040161052b9061233c565b6001600160a01b0381161580610d7d57506000546001600160a01b03166001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d729190612389565b6001600160a01b0316145b610e035760405162461bcd60e51b815260206004820152604b60248201527f546865206d61726b6574696e6720636f6e74726163742061646472657373206d60448201527f75737420706f696e7420746f206120636f6e747261637420776974682074686560648201526a1039b0b6b29037bbb732b960a91b608482015260a40161052b565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610e316012600a6120d2565b6104ef906103e86120e1565b6104ef619968600e6123a6565b6000546001600160a01b03163314610e745760405162461bcd60e51b815260040161052b9061233c565b6001600160a01b038116610ed95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161052b565b610ee281611ba1565b50565b600080600080610eff60005460ff600160a01b9091041690565b15610f1c5760405162461bcd60e51b815260040161052b90612100565b6000610f2a898989896104f2565b9398509196509450909250905060ff84166116ff5760008563ffffffff1611610f8d5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c995dd85c9908185b5bdd5b9d605a1b604482015260640161052b565b610f9b6107d06103e8611bf1565b8563ffffffff161115610ff05760405162461bcd60e51b815260206004820152601e60248201527f496e76616c6964207265776172642c20616d6f756e7420746f6f206269670000604482015260640161052b565b600061101c61100160036012611fcb565b61100c90600a6120d2565b63ffffffff8089169190611bf116565b600654604051635665687560e01b81526001600160a01b038b8116600483015292935060009290911690635665687590602401602060405180830381865afa15801561106c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109091906123cc565b9050886001600160a01b03168a6001600160a01b03161461123d5760006110c560646110bf8560ff8616611bf1565b90611c06565b905060006110d38483611c12565b60055460405163a9059cbb60e01b81526001600160a01b038e811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015611128573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114c91906123e7565b5060055460405163a9059cbb60e01b81526001600160a01b038e81166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af11580156111a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c491906123e7565b508b6001600160a01b03168b6001600160a01b03168e6001600160401b03167f302c08954cd01f3e9a025e113b28fe1600afb14599ebd20d4447981c78fa958e8d878b60405161122e9392919092835260ff91909116602083015261ffff16604082015260600190565b60405180910390a45050611315565b60055460405163a9059cbb60e01b81526001600160a01b038b81166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af1158015611290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b491906123e7565b50604080518981526000602082015261ffff86168183015290516001600160a01b038c811692908c16916001600160401b038f16917f302c08954cd01f3e9a025e113b28fe1600afb14599ebd20d4447981c78fa958e919081900360600190a45b6008546113229083611c1e565b600855600261ffff8516106113725760405162461bcd60e51b8152602060048201526016602482015275636c61696d20636f756e7420697320746f6f2062696760501b604482015260640161052b565b8261ffff168461ffff16106113c25760405162461bcd60e51b8152602060048201526016602482015275636c61696d20636f756e7420697320746f6f2062696760501b604482015260640161052b565b836113cc81612402565b60065460405163609eb1c360e01b81526001600160401b038f1660048201526001600160a01b038d8116602483015263ffffffff8c1660448301529297509116915063609eb1c390606401600060405180830381600087803b15801561143157600080fd5b505af1158015611445573d6000803e3d6000fd5b505050508261ffff168461ffff16106114ff5760078054600160a01b90046001600160401b031690601461147883612424565b82546101009290920a6001600160401b0381810219909316918316021790915560075460405163f7f595fb60e01b8152918e16600483015287151560248301526001600160a01b0316915063f7f595fb90604401600060405180830381600087803b1580156114e657600080fd5b505af11580156114fa573d6000803e3d6000fd5b505050505b6004546001600160a01b0316156116fc57600480546040516301389dcb60e51b81526001600160401b038e16928101929092526001600160a01b038c811660248401528b8116604484015263ffffffff8a16606484015260ff8416608484015216908190632713b9609060a401600060405180830381600087803b15801561158657600080fd5b505af1925050508015611597575060015b6116fa576115a3612441565b806308c379a0141561165757506115b861245d565b806115c35750611659565b600980546001600160401b03169060006115dc83612424565b91906101000a8154816001600160401b0302191690836001600160401b03160217905550507fe4672f4d62a9c8ce07cefba7f97b1e461ca30161fc35c9095d5aab6c3b77e189600460009054906101000a90046001600160a01b03168e83604051611649939291906124e6565b60405180910390a1506116fa565b505b600980546801000000000000000090046001600160401b031690600861167e83612424565b82546101009290920a6001600160401b03818102199093169183160217909155600454604080516001600160a01b039092168252918f16602082015260609181018290526000918101919091527fe4672f4d62a9c8ce07cefba7f97b1e461ca30161fc35c9095d5aab6c3b77e189915060800160405180910390a15b505b50505b50945094509450949050565b600054600160a01b900460ff16156117355760405162461bcd60e51b815260040161052b90612100565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586117703390565b6040516001600160a01b03909116815260200160405180910390a1565b600654604051630454186960e31b81526001600160a01b0385811660048301526001600160401b038716602483015260009283929116906322a0c34890604401602060405180830381865afa1580156117ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180e9190612293565b9050600061181d848784611c2a565b9050600061182a83611cf7565b905060ff8616600a11801590611844575060d060ff871611155b6118a65760405162461bcd60e51b815260206004820152602d60248201527f766572696679436c61696d28293a2067656e6572616c446966666963756c747960448201526c206f7574206f662072616e676560981b606482015260840161052b565b60006118b2828461255b565b90508060ff168760ff1610156118c95760006118d3565b6118d38188611fcb565b9450600a60ff861610156118e657600a94505b60ff8516600a118015906118fe575060d060ff861611155b6119615760405162461bcd60e51b815260206004820152602e60248201527f766572696679436c61696d28293a2061646a7573746564446966666963756c7460448201526d79206f7574206f662072616e676560901b606482015260840161052b565b50505050949350505050565b600080829050806001600160a01b031663df71f9906040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156119cd575060408051601f3d908101601f191682019092526119ca918101906123e7565b60015b6119da5750600092915050565b9392505050565b600080826202222260ec82901c1415611a0357506101f4936107d09350915050565b61222260f082901c1415611a1f575060c8936101f49350915050565b61022260f482901c1415611a395750606493849350915050565b602260fe82901c1415611a53575060329360149350915050565b600260fc82901c1415611a6d575060149360059350915050565b50600a9360019350915050565b6000806101005b8061ffff168261ffff161015611ae65760006001611a9f8385612580565b61ffff16901c905060006001611ab68360026125a6565b611ac091906125b6565b9050808611611ad157819250611adf565b611adc826001612580565b93505b5050611a81565b5092915050565b600054600160a01b900460ff16611b3d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161052b565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33611770565b6000546001600160a01b03163314611b9b5760405162461bcd60e51b815260040161052b9061233c565b610ba160005b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611bfd82846120e1565b90505b92915050565b6000611bfd82846125e3565b6000611bfd82846125b6565b6000611bfd8284612371565b6000836001600160a01b03841680821883611c4482611e97565b905061ffff8116611c585750610100611c66565b80611c62816125f7565b9150505b6000611c7e611c776012600a6120d2565b8890611c06565b9050600060018210611cd25760148361ffff1610611c9e5750601e611cea565b600a8361ffff1610611cc757611cb5600a84611fcb565b611cc090601461255b565b9050611cea565b611cc0836002612615565b600a8361ffff161115611ce75750600a611cea565b50815b9998505050505050505050565b600080611d10611d096012600a6120d2565b8490611c06565b90506000611d44611d2360036012611fcb565b611d2e90600a6120d2565b6110bf611d3d6012600a6120d2565b8790611f11565b9050600060018310611dfa576103e88310611d615750601e611e8f565b6101f48310611d725750601c611e8f565b60c88310611d825750601a611e8f565b60648310611d9257506018611e8f565b60328310611da257506016611e8f565b60148310611db257506014611e8f565b600a8310611dc257506012611e8f565b60058310611dd257506010611e8f565b60038310611de25750600e611e8f565b60028310611df25750600c611e8f565b50600a611e8f565b6101f48210611e0b57506009611e8f565b60c88210611e1b57506008611e8f565b60648210611e2b57506007611e8f565b60328210611e3b57506006611e8f565b60148210611e4b57506005611e8f565b600a8210611e5b57506004611e8f565b60058210611e6b57506003611e8f565b60028210611e7b57506002611e8f565b60018210611e8b57506001611e8f565b5060005b949350505050565b600081611ea657506000919050565b60016101005b8061ffff168261ffff161015611ae65760006001611eca8385612580565b61ffff16901c905060006001611ee18360026125a6565b611eeb91906125b6565b9050858116611f0657611eff826001612580565b9350611f0a565b8192505b5050611eac565b6000611bfd8284612636565b6001600160401b0381168114610ee257600080fd5b6001600160a01b0381168114610ee257600080fd5b60008060008060808587031215611f5d57600080fd5b8435611f6881611f1d565b93506020850135611f7881611f32565b92506040850135611f8881611f32565b9396929550929360600135925050565b600060208284031215611faa57600080fd5b81356119da81611f32565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff841680821015611fe557611fe5611fb5565b90039392505050565b600181815b8085111561202957816000190482111561200f5761200f611fb5565b8085161561201c57918102915b93841c9390800290611ff3565b509250929050565b60008261204057506001611c00565b8161204d57506000611c00565b8160018114612063576002811461206d57612089565b6001915050611c00565b60ff84111561207e5761207e611fb5565b50506001821b611c00565b5060208310610133831016604e8410600b84101617156120ac575081810a611c00565b6120b68383611fee565b80600019048211156120ca576120ca611fb5565b029392505050565b6000611bfd60ff841683612031565b60008160001904831182151516156120fb576120fb611fb5565b500290565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60e081018181106001600160401b038211171561215757634e487b7160e01b600052604160045260246000fd5b60405250565b601f8201601f191681016001600160401b038111828210171561219057634e487b7160e01b600052604160045260246000fd5b6040525050565b805161ffff811681146121a957600080fd5b919050565b805160ff811681146121a957600080fd5b805180151581146121a957600080fd5b60008060008385036101208112156121e657600080fd5b60e08112156121f457600080fd5b506040516122018161212a565b84518152602085015161221381611f1d565b602082015261222460408601612197565b6040820152612235606086016121ae565b6060820152612246608086016121bf565b608082015261225760a086016121ae565b60a082015261226860c086016121ae565b60c0820152925061227b60e085016121bf565b915061228a61010085016121ae565b90509250925092565b6000602082840312156122a557600080fd5b5051919050565b6000602082840312156122be57600080fd5b815163ffffffff811681146119da57600080fd5b6000602082840312156122e457600080fd5b611bfd82612197565b600063ffffffff8083168185168183048111821515161561231057612310611fb5565b02949350505050565b600061ffff8381169083168181101561233457612334611fb5565b039392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561238457612384611fb5565b500190565b60006020828403121561239b57600080fd5b81516119da81611f32565b60006001600160401b038083168185168183048111821515161561231057612310611fb5565b6000602082840312156123de57600080fd5b611bfd826121ae565b6000602082840312156123f957600080fd5b611bfd826121bf565b600061ffff8083168181141561241a5761241a611fb5565b6001019392505050565b60006001600160401b038083168181141561241a5761241a611fb5565b600060033d111561245a5760046000803e5060005160e01c5b90565b600060443d101561246b5790565b6040516003193d81016004833e81513d6001600160401b03816024840111818411171561249a57505050505090565b82850191508151818111156124b25750505050505090565b843d87010160208285010111156124cc5750505050505090565b6124db6020828601018761215d565b509095945050505050565b60018060a01b0384168152600060206001600160401b0385168184015260606040840152835180606085015260005b8181101561253157858101830151858201608001528201612515565b81811115612543576000608083870101525b50601f01601f19169290920160800195945050505050565b600060ff821660ff84168060ff0382111561257857612578611fb5565b019392505050565b600061ffff80831681851680830382111561259d5761259d611fb5565b01949350505050565b6000611bfd61ffff841683612031565b6000828210156125c8576125c8611fb5565b500390565b634e487b7160e01b600052601260045260246000fd5b6000826125f2576125f26125cd565b500490565b600061ffff82168061260b5761260b611fb5565b6000190192915050565b600060ff821660ff84168160ff04811182151516156120ca576120ca611fb5565b600082612645576126456125cd565b50069056fea2646970667358221220bd643b22003397668c93fe1c5ca132bb7093b3522b86768a1217f5317b0ee3da64736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, BigNumberish } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaToken } from \"../LuminaToken\";\n\nexport class LuminaToken__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    name: string,\n    symbol: string,\n    initSupply: BigNumberish,\n    recordsAddr_: string,\n    overrides?: Overrides\n  ): Promise<LuminaToken> {\n    return super.deploy(\n      name,\n      symbol,\n      initSupply,\n      recordsAddr_,\n      overrides || {}\n    ) as Promise<LuminaToken>;\n  }\n  getDeployTransaction(\n    name: string,\n    symbol: string,\n    initSupply: BigNumberish,\n    recordsAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      name,\n      symbol,\n      initSupply,\n      recordsAddr_,\n      overrides || {}\n    );\n  }\n  attach(address: string): LuminaToken {\n    return super.attach(address) as LuminaToken;\n  }\n  connect(signer: Signer): LuminaToken__factory {\n    return super.connect(signer) as LuminaToken__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaToken {\n    return new Contract(address, _abi, signerOrProvider) as LuminaToken;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"initSupply\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recordsAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"recordsAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"registerBalance\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b50604051620010a3380380620010a3833981016040819052620000349162000344565b8351849084906200004d906003906020850190620001d1565b50805162000063906004906020840190620001d1565b505050600062000078620000e460201b60201c565b90508060ff166012146200008b57600080fd5b620000af336200009d83600a620004ee565b620000a9908662000506565b620000e9565b50600580546001600160a01b039092166001600160a01b03199283168117909155600680549092161790555062000580915050565b601290565b6001600160a01b038216620001445760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000158919062000528565b90915550506001600160a01b038216600090815260208190526040812080548392906200018790849062000528565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001df9062000543565b90600052602060002090601f0160209004810192826200020357600085556200024e565b82601f106200021e57805160ff19168380011785556200024e565b828001600101855582156200024e579182015b828111156200024e57825182559160200191906001019062000231565b506200025c92915062000260565b5090565b5b808211156200025c576000815560010162000261565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200029f57600080fd5b81516001600160401b0380821115620002bc57620002bc62000277565b604051601f8301601f19908116603f01168101908282118183101715620002e757620002e762000277565b816040528381526020925086838588010111156200030457600080fd5b600091505b8382101562000328578582018301518183018401529082019062000309565b838211156200033a5760008385830101525b9695505050505050565b600080600080608085870312156200035b57600080fd5b84516001600160401b03808211156200037357600080fd5b62000381888389016200028d565b955060208701519150808211156200039857600080fd5b50620003a7878288016200028d565b60408701516060880151919550935090506001600160a01b0381168114620003ce57600080fd5b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000430578160001904821115620004145762000414620003d9565b808516156200042257918102915b93841c9390800290620003f4565b509250929050565b6000826200044957506001620004e8565b816200045857506000620004e8565b81600181146200047157600281146200047c576200049c565b6001915050620004e8565b60ff841115620004905762000490620003d9565b50506001821b620004e8565b5060208310610133831016604e8410600b8410161715620004c1575081810a620004e8565b620004cd8383620003ef565b8060001904821115620004e457620004e4620003d9565b0290505b92915050565b6000620004ff60ff84168362000438565b9392505050565b6000816000190483118215151615620005235762000523620003d9565b500290565b600082198211156200053e576200053e620003d9565b500190565b600181811c908216806200055857607f821691505b602082108114156200057a57634e487b7160e01b600052602260045260246000fd5b50919050565b610b1380620005906000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d7146101b8578063a9059cbb146101cb578063c2cf1cdc146101de578063dd62ed3e146101e857600080fd5b8063395093511461017457806370a082311461018757806395d89b41146101b057600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd146101155780631e7bfd601461012757806323b872dd14610152578063313ce56714610165575b600080fd5b6100dc610221565b6040516100e9919061092e565b60405180910390f35b61010561010036600461099f565b6102b3565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b60055461013a906001600160a01b031681565b6040516001600160a01b0390911681526020016100e9565b6101056101603660046109c9565b6102c9565b604051601281526020016100e9565b61010561018236600461099f565b610378565b610119610195366004610a05565b6001600160a01b031660009081526020819052604090205490565b6100dc6103b4565b6101056101c636600461099f565b6103c3565b6101056101d936600461099f565b61045c565b6101e6610469565b005b6101196101f6366004610a27565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461023090610a5a565b80601f016020809104026020016040519081016040528092919081815260200182805461025c90610a5a565b80156102a95780601f1061027e576101008083540402835291602001916102a9565b820191906000526020600020905b81548152906001019060200180831161028c57829003601f168201915b5050505050905090565b60006102c03384846104fa565b50600192915050565b60006102d684848461061e565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103605760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61036d85338584036104fa565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102c09185906103af908690610a95565b6104fa565b60606004805461023090610a5a565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104455760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610357565b61045233858584036104fa565b5060019392505050565b60006102c033848461061e565b33600090815260208190526040812054600654604051631b15c59960e11b815233600482015260248101839052600160448201529192506001600160a01b03169063362b8b32906064016020604051808303816000875af11580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f69190610abb565b5050565b6001600160a01b03831661055c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610357565b6001600160a01b0382166105bd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610357565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b610629838383610760565b6006546001600160a01b031663552ba3338461065a816001600160a01b031660009081526020819052604090205490565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156106a057600080fd5b505af19250505080156106b1575060015b506006546001600160a01b031663362b8b32836106e3816001600160a01b031660009081526020819052604090205490565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152600060448201526064016020604051808303816000875af1925050508015610751575060408051601f3d908101601f1916820190925261074e91810190610abb565b60015b61075a57505050565b50505050565b6001600160a01b0383166107c45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610357565b6001600160a01b0382166108265760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610357565b6001600160a01b0383166000908152602081905260409020548181101561089e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610357565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108d5908490610a95565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161092191815260200190565b60405180910390a361075a565b600060208083528351808285015260005b8181101561095b5785810183015185820160400152820161093f565b8181111561096d576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461099a57600080fd5b919050565b600080604083850312156109b257600080fd5b6109bb83610983565b946020939093013593505050565b6000806000606084860312156109de57600080fd5b6109e784610983565b92506109f560208501610983565b9150604084013590509250925092565b600060208284031215610a1757600080fd5b610a2082610983565b9392505050565b60008060408385031215610a3a57600080fd5b610a4383610983565b9150610a5160208401610983565b90509250929050565b600181811c90821680610a6e57607f821691505b60208210811415610a8f57634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610ab657634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215610acd57600080fd5b81518015158114610a2057600080fdfea26469706673582212209c3f96b4504cef7d73ba137cba03e598e0c6c339c9805d18e5422456a47b06cc64736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { ProgressContractLocker } from \"../ProgressContractLocker\";\n\nexport class ProgressContractLocker__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    erc20Addr_: string,\n    progressingAddr_: string,\n    overrides?: Overrides\n  ): Promise<ProgressContractLocker> {\n    return super.deploy(\n      erc20Addr_,\n      progressingAddr_,\n      overrides || {}\n    ) as Promise<ProgressContractLocker>;\n  }\n  getDeployTransaction(\n    erc20Addr_: string,\n    progressingAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      erc20Addr_,\n      progressingAddr_,\n      overrides || {}\n    );\n  }\n  attach(address: string): ProgressContractLocker {\n    return super.attach(address) as ProgressContractLocker;\n  }\n  connect(signer: Signer): ProgressContractLocker__factory {\n    return super.connect(signer) as ProgressContractLocker__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ProgressContractLocker {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ProgressContractLocker;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"erc20Addr_\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"progressingAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"availableBalanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"deposit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"erc20Addr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"notAvailableBalanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"progressingAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalLockedBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdraw\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"withdrawAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"withdrawnBalanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b5060405162001e9338038062001e93833981016040819052620000349162000461565b620000d26040518060400160405280600781526020016602637b1b5b2b2160cd1b815250836001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000c19190810190620004af565b6200022e60201b62000c361760201c565b6200012f604051806040016040528060018152602001601360fa1b815250846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000097573d6000803e3d6000fd5b8383838381600390805190602001906200014b9291906200039e565b508051620001619060049060208401906200039e565b5050600580546001600160a01b038086166001600160a01b031992831617909255600680549285169290911682179055604080516349ce222b60e11b8152815192935063939c445692600480830193928290030181865afa158015620001cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f191906200058b565b5050600a80546001600160a01b039788166001600160a01b0319918216179091556009805496909716951694909417909455506200065292505050565b8051825160609184918491600091620002489190620005c6565b6001600160401b0381111562000262576200026262000499565b6040519080825280601f01601f1916602001820160405280156200028d576020820181803683370190505b509050806000805b85518110156200031157858181518110620002b457620002b4620005e1565b01602001516001600160f81b0319168383620002d081620005f7565b945081518110620002e557620002e5620005e1565b60200101906001600160f81b031916908160001a905350806200030881620005f7565b91505062000295565b5060005b84518110156200039157848181518110620003345762000334620005e1565b01602001516001600160f81b03191683836200035081620005f7565b945081518110620003655762000365620005e1565b60200101906001600160f81b031916908160001a905350806200038881620005f7565b91505062000315565b5090979650505050505050565b828054620003ac9062000615565b90600052602060002090601f016020900481019282620003d057600085556200041b565b82601f10620003eb57805160ff19168380011785556200041b565b828001600101855582156200041b579182015b828111156200041b578251825591602001919060010190620003fe565b50620004299291506200042d565b5090565b5b808211156200042957600081556001016200042e565b80516001600160a01b03811681146200045c57600080fd5b919050565b600080604083850312156200047557600080fd5b620004808362000444565b9150620004906020840162000444565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215620004c357600080fd5b82516001600160401b0380821115620004db57600080fd5b818501915085601f830112620004f057600080fd5b81518181111562000505576200050562000499565b604051601f8201601f19908116603f0116810190838211818310171562000530576200053062000499565b8160405282815288868487010111156200054957600080fd5b600093505b828410156200056d57848401860151818501870152928501926200054e565b828411156200057f5760008684830101525b98975050505050505050565b600080604083850312156200059f57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b60008219821115620005dc57620005dc620005b0565b500190565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200060e576200060e620005b0565b5060010190565b600181811c908216806200062a57607f821691505b602082108114156200064c57634e487b7160e01b600052602260045260246000fd5b50919050565b61183180620006626000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806362d8908f116100ad578063a457c2d711610071578063a457c2d714610289578063a9059cbb1461029c578063b6b55f25146102af578063c20704af146102c2578063dd62ed3e146102d557600080fd5b806362d8908f1461021457806370a082311461022757806378f77ebf14610250578063853828b61461027957806395d89b411461028157600080fd5b80632d98ac5e116100f45780632d98ac5e146101aa5780632e1a7d4d146101b2578063313ce567146101c7578063317e3ce0146101d6578063395093511461020157600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd1461018457806325d998bb14610197575b600080fd5b61013961030e565b604051610146919061144d565b60405180910390f35b61016261015d3660046114be565b6103a0565b6040519015158152602001610146565b6002545b604051908152602001610146565b6101626101923660046114e8565b6103b7565b6101766101a5366004611524565b610466565b6101766105bf565b6101c56101c036600461153f565b610630565b005b60405160128152602001610146565b600a546101e9906001600160a01b031681565b6040516001600160a01b039091168152602001610146565b61016261020f3660046114be565b6107a8565b610176610222366004611524565b6107e4565b610176610235366004611524565b6001600160a01b031660009081526020819052604090205490565b61017661025e366004611524565b6001600160a01b031660009081526008602052604090205490565b6101c561081c565b610139610927565b6101626102973660046114be565b610936565b6101626102aa3660046114be565b6109cf565b6101c56102bd36600461153f565b6109dc565b6009546101e9906001600160a01b031681565b6101766102e3366004611558565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461031d9061158b565b80601f01602080910402602001604051908101604052809291908181526020018280546103499061158b565b80156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b5050505050905090565b60006103ad338484610d89565b5060015b92915050565b60006103c4848484610eae565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561044e5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61045b8533858403610d89565b506001949350505050565b6001600160a01b0381166000908152602081905260408120548190600654604080516349ce222b60e11b8152815193945060009384936001600160a01b03169263939c445692600480820193918290030181865afa1580156104cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f091906115c6565b91509150816000141561050857506000949350505050565b8082106105185750909392505050565b6001600160a01b03851660009081526007602052604081205490506000610593836040518060400160405280602081526020017f50726f67726573734c6f636b65723a207a65726f2070726f67726573734d617881525061058c87610586878b610f8390919063ffffffff16565b90610f96565b9190610fa2565b9050818111156105b2576105a78183610fdc565b979650505050505050565b5060009695505050505050565b6005546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561060c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b191906115ea565b33600061063c82610466565b9050808311156106b45760405162461bcd60e51b815260206004820152603760248201527f50726f67726573734c6f636b65723a205769746864726177616c20657863656560448201527f64732074686520617661696c61626c6520616d6f756e740000000000000000006064820152608401610445565b6001600160a01b0382166000908152600760205260409020546106d78185610f83565b6001600160a01b0384166000908152600760209081526040808320939093556008905220546107068186610f83565b6001600160a01b0385166000908152600860205260409020556107298486610fe8565b60055460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af115801561077c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a09190611603565b505050505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103ad9185906107df90869061163b565b610d89565b6001600160a01b038116600090815260208190526040812054600061080884610466565b90506108148282610fdc565b949350505050565b33600061082882610466565b9050600061084b836001600160a01b031660009081526007602052604090205490565b90506108578183610f83565b6001600160a01b0384166000908152600760209081526040808320939093556008905220546108868184610f83565b6001600160a01b0385166000908152600860205260409020556108a98484610fe8565b60055460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529091169063a9059cbb906044016020604051808303816000875af11580156108fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109209190611603565b5050505050565b60606004805461031d9061158b565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156109b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610445565b6109c53385858403610d89565b5060019392505050565b60006103ad338484610eae565b6005546040516323b872dd60e01b81523360048201819052306024830181905260448301859052909290916001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5f9190611603565b50610a6a828461112e565b600654604080516349ce222b60e11b8152815160009384936001600160a01b039091169263939c445692600480830193928290030181865afa158015610ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad891906115c6565b600654604080516349ce222b60e11b815281519496509294506001600160a01b039091169263939c44569260048082019392918290030181865afa158015610b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4891906115c6565b9092509050811561092057808210610be05760405162461bcd60e51b815260206004820152604f60248201527f50726f67726573734c6f636b65723a2070726f6772657373206973203130302560448201527f2c20697420646f6573206e6f74206d616b6520616e792073656e736520746f2060648201526e6465706f73697420616e796d6f726560881b608482015260a401610445565b6000610bef868484601261120d565b6001600160a01b038616600090815260076020526040902054909150610c159082610f83565b6001600160a01b038616600090815260076020526040902055505050505050565b8051825160609184918491600091610c4e919061163b565b67ffffffffffffffff811115610c6657610c66611653565b6040519080825280601f01601f191660200182016040528015610c90576020820181803683370190505b509050806000805b8551811015610d0857858181518110610cb357610cb3611669565b01602001516001600160f81b0319168383610ccd8161167f565b945081518110610cdf57610cdf611669565b60200101906001600160f81b031916908160001a90535080610d008161167f565b915050610c98565b5060005b8451811015610d7c57848181518110610d2757610d27611669565b01602001516001600160f81b0319168383610d418161167f565b945081518110610d5357610d53611669565b60200101906001600160f81b031916908160001a90535080610d748161167f565b915050610d0c565b5090979650505050505050565b6001600160a01b038316610deb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610445565b6001600160a01b038216610e4c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610445565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316600090815260208190526040902054610ed2848484611273565b8115610f7d576001600160a01b03841660009081526007602052604081205490506000610f42836040518060400160405280601c81526020017f50726f67726573734c6f636b65723a207a65726f2062616c616e63650000000081525061058c8786610f9690919063ffffffff16565b9050610f4e8282610fdc565b6001600160a01b038088166000908152600760205260408082209390935590871681522054610c159082610f83565b50505050565b6000610f8f828461163b565b9392505050565b6000610f8f828461169a565b60008183610fc35760405162461bcd60e51b8152600401610445919061144d565b50828481610fd357610fd36116b9565b04949350505050565b6000610f8f82846116cf565b6001600160a01b0382166110485760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610445565b6001600160a01b038216600090815260208190526040902054818110156110bc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610445565b6001600160a01b03831660009081526020819052604081208383039055600280548492906110eb9084906116cf565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ea1565b6001600160a01b0382166111845760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610445565b8060026000828254611196919061163b565b90915550506001600160a01b038216600090815260208190526040812080548392906111c390849061163b565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000806112248461121e8888610f96565b90611441565b9050600061123384600a6117ca565b905060006112458661121e848a610f96565b905060006112538383610fdc565b905060006112658261121e8787610f96565b9a9950505050505050505050565b6001600160a01b0383166112d75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610445565b6001600160a01b0382166113395760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610445565b6001600160a01b038316600090815260208190526040902054818110156113b15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610445565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906113e890849061163b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161143491815260200190565b60405180910390a3610f7d565b6000610f8f82846117d9565b600060208083528351808285015260005b8181101561147a5785810183015185820160400152820161145e565b8181111561148c576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146114b957600080fd5b919050565b600080604083850312156114d157600080fd5b6114da836114a2565b946020939093013593505050565b6000806000606084860312156114fd57600080fd5b611506846114a2565b9250611514602085016114a2565b9150604084013590509250925092565b60006020828403121561153657600080fd5b610f8f826114a2565b60006020828403121561155157600080fd5b5035919050565b6000806040838503121561156b57600080fd5b611574836114a2565b9150611582602084016114a2565b90509250929050565b600181811c9082168061159f57607f821691505b602082108114156115c057634e487b7160e01b600052602260045260246000fd5b50919050565b600080604083850312156115d957600080fd5b505080516020909101519092909150565b6000602082840312156115fc57600080fd5b5051919050565b60006020828403121561161557600080fd5b81518015158114610f8f57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561164e5761164e611625565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561169357611693611625565b5060010190565b60008160001904831182151516156116b4576116b4611625565b500290565b634e487b7160e01b600052601260045260246000fd5b6000828210156116e1576116e1611625565b500390565b600181815b8085111561172157816000190482111561170757611707611625565b8085161561171457918102915b93841c93908002906116eb565b509250929050565b600082611738575060016103b1565b81611745575060006103b1565b816001811461175b576002811461176557611781565b60019150506103b1565b60ff84111561177657611776611625565b50506001821b6103b1565b5060208310610133831016604e8410600b84101617156117a4575081810a6103b1565b6117ae83836116e6565b80600019048211156117c2576117c2611625565b029392505050565b6000610f8f60ff841683611729565b6000826117f657634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220b73d4d7bf08bbb87de03a90044f68daf352fc2733aa3026cb0d16719a86d2d1b64736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { TokenFaucet } from \"../TokenFaucet\";\n\nexport class TokenFaucet__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    name: string,\n    symbol: string,\n    overrides?: Overrides\n  ): Promise<TokenFaucet> {\n    return super.deploy(name, symbol, overrides || {}) as Promise<TokenFaucet>;\n  }\n  getDeployTransaction(\n    name: string,\n    symbol: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(name, symbol, overrides || {});\n  }\n  attach(address: string): TokenFaucet {\n    return super.attach(address) as TokenFaucet;\n  }\n  connect(signer: Signer): TokenFaucet__factory {\n    return super.connect(signer) as TokenFaucet__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): TokenFaucet {\n    return new Contract(address, _abi, signerOrProvider) as TokenFaucet;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"supply\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b5060405162000db338038062000db38339810160408190526200003491620001e1565b8151829082906200004d9060039060208501906200006e565b508051620000639060049060208401906200006e565b505050505062000288565b8280546200007c906200024b565b90600052602060002090601f016020900481019282620000a05760008555620000eb565b82601f10620000bb57805160ff1916838001178555620000eb565b82800160010185558215620000eb579182015b82811115620000eb578251825591602001919060010190620000ce565b50620000f9929150620000fd565b5090565b5b80821115620000f95760008155600101620000fe565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013c57600080fd5b81516001600160401b038082111562000159576200015962000114565b604051601f8301601f19908116603f0116810190828211818310171562000184576200018462000114565b81604052838152602092508683858801011115620001a157600080fd5b600091505b83821015620001c55785820183015181830184015290820190620001a6565b83821115620001d75760008385830101525b9695505050505050565b60008060408385031215620001f557600080fd5b82516001600160401b03808211156200020d57600080fd5b6200021b868387016200012a565b935060208501519150808211156200023257600080fd5b5062000241858286016200012a565b9150509250929050565b600181811c908216806200026057607f821691505b602082108114156200028257634e487b7160e01b600052602260045260246000fd5b50919050565b610b1b80620002986000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461014157806395d89b411461016a578063a0712d6814610172578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101e6565b6040516100ce9190610825565b60405180910390f35b6100ea6100e5366004610896565b610278565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a3660046108c0565b61028f565b604051601281526020016100ce565b6100ea61013c366004610896565b61033e565b6100fe61014f3660046108fc565b6001600160a01b031660009081526020819052604090205490565b6100c161037a565b61018561018036600461091e565b610389565b005b6100ea610195366004610896565b6103ad565b6100ea6101a8366004610896565b610446565b6100fe6101bb366004610937565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f59061096a565b80601f01602080910402602001604051908101604052809291908181526020018280546102219061096a565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b6000610285338484610453565b5060015b92915050565b600061029c848484610577565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103265760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103338533858403610453565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102859185906103759086906109bb565b610453565b6060600480546101f59061096a565b60126103a93361039a83600a610ab7565b6103a49085610ac6565b610746565b5050565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561042f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161031d565b61043c3385858403610453565b5060019392505050565b6000610285338484610577565b6001600160a01b0383166104b55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161031d565b6001600160a01b0382166105165760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161031d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105db5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161031d565b6001600160a01b03821661063d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161031d565b6001600160a01b038316600090815260208190526040902054818110156106b55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161031d565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106ec9084906109bb565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161073891815260200190565b60405180910390a350505050565b6001600160a01b03821661079c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161031d565b80600260008282546107ae91906109bb565b90915550506001600160a01b038216600090815260208190526040812080548392906107db9084906109bb565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b8181101561085257858101830151858201604001528201610836565b81811115610864576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461089157600080fd5b919050565b600080604083850312156108a957600080fd5b6108b28361087a565b946020939093013593505050565b6000806000606084860312156108d557600080fd5b6108de8461087a565b92506108ec6020850161087a565b9150604084013590509250925092565b60006020828403121561090e57600080fd5b6109178261087a565b9392505050565b60006020828403121561093057600080fd5b5035919050565b6000806040838503121561094a57600080fd5b6109538361087a565b91506109616020840161087a565b90509250929050565b600181811c9082168061097e57607f821691505b6020821081141561099f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156109ce576109ce6109a5565b500190565b600181815b80851115610a0e5781600019048211156109f4576109f46109a5565b80851615610a0157918102915b93841c93908002906109d8565b509250929050565b600082610a2557506001610289565b81610a3257506000610289565b8160018114610a485760028114610a5257610a6e565b6001915050610289565b60ff841115610a6357610a636109a5565b50506001821b610289565b5060208310610133831016604e8410600b8410161715610a91575081810a610289565b610a9b83836109d3565b8060001904821115610aaf57610aaf6109a5565b029392505050565b600061091760ff841683610a16565b6000816000190483118215151615610ae057610ae06109a5565b50029056fea2646970667358221220f6479e2bafb866c19548e9fdf0f9b300fcdae01316692a1f61e454c349bfe83264736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { UtilsTest } from \"../UtilsTest\";\n\nexport class UtilsTest__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<UtilsTest> {\n    return super.deploy(overrides || {}) as Promise<UtilsTest>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): UtilsTest {\n    return super.attach(address) as UtilsTest;\n  }\n  connect(signer: Signer): UtilsTest__factory {\n    return super.connect(signer) as UtilsTest__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): UtilsTest {\n    return new Contract(address, _abi, signerOrProvider) as UtilsTest;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"n\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"findHsb\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"n\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"findLsb\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b5061031e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636413c2781461003b578063eb19394a14610065575b600080fd5b61004e610049366004610181565b610078565b60405161ffff909116815260200160405180910390f35b61004e610073366004610181565b610089565b600061008382610094565b92915050565b600061008382610115565b6000816100a357506000919050565b60016101005b8061ffff168261ffff16101561010e57600060016100c783856101b0565b61ffff16901c9050600060016100de8360026102ba565b6100e891906102d1565b9050858116610103576100fc8260016101b0565b9350610107565b8192505b50506100a9565b5092915050565b6000806101005b8061ffff168261ffff16101561010e576000600161013a83856101b0565b61ffff16901c9050600060016101518360026102ba565b61015b91906102d1565b905080861161016c5781925061017a565b6101778260016101b0565b93505b505061011c565b60006020828403121561019357600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600061ffff8083168185168083038211156101cd576101cd61019a565b01949350505050565b600181815b808511156102115781600019048211156101f7576101f761019a565b8085161561020457918102915b93841c93908002906101db565b509250929050565b60008261022857506001610083565b8161023557506000610083565b816001811461024b576002811461025557610271565b6001915050610083565b60ff8411156102665761026661019a565b50506001821b610083565b5060208310610133831016604e8410600b8410161715610294575081810a610083565b61029e83836101d6565b80600019048211156102b2576102b261019a565b029392505050565b60006102ca61ffff841683610219565b9392505050565b6000828210156102e3576102e361019a565b50039056fea2646970667358221220663e3b10c9b230a2f973d7965d4d0b1b806f860d4b88105e4d4812c954318e7b64736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { ERC20 } from \"../ERC20\";\n\nexport class ERC20__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides\n  ): Promise<ERC20> {\n    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC20>;\n  }\n  getDeployTransaction(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(name_, symbol_, overrides || {});\n  }\n  attach(address: string): ERC20 {\n    return super.attach(address) as ERC20;\n  }\n  connect(signer: Signer): ERC20__factory {\n    return super.connect(signer) as ERC20__factory;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {\n    return new Contract(address, _abi, signerOrProvider) as ERC20;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name_\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol_\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b5060405162000b5638038062000b568339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b6108c480620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610868565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610868565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b6020821081141561086257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088957634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220889f9738f938576d163ae004c2b4ae05a7aaa0695bc2dda1358085592049f21564736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { providers, Signer, ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport Web3Modal, { IProviderOptions } from \"web3modal\";\nimport LuminaAdminDeployment from \"./deployments/mumbai/LuminaAdmin.json\";\nimport { LuminaAdmin } from \"./typechain/LuminaAdmin\";\nimport { LuminaAdmin__factory } from \"./typechain/factories/LuminaAdmin__factory\";\nimport LuminaCampaignLaunchDeployment from \"./deployments/mumbai/LuminaCampaignLaunch.json\";\nimport { LuminaCampaignLaunch } from \"./typechain/LuminaCampaignLaunch\";\nimport { LuminaCampaignLaunch__factory } from \"./typechain/factories/LuminaCampaignLaunch__factory\";\nimport LuminaMarketingDeployment from \"./deployments/mumbai/LuminaMarketing.json\";\nimport { LuminaMarketing } from \"./typechain/LuminaMarketing\";\nimport { LuminaMarketing__factory } from \"./typechain/factories/LuminaMarketing__factory\";\nimport LuminaRecordsDeployment from \"./deployments/mumbai/LuminaRecords.json\";\nimport { LuminaRecords } from \"./typechain/LuminaRecords\";\nimport { LuminaRecords__factory } from \"./typechain/factories/LuminaRecords__factory\";\nimport LuminaTrusteeDeployment from \"./deployments/mumbai/LuminaTrustee.json\";\nimport { LuminaTrustee } from \"./typechain/LuminaTrustee\";\nimport { LuminaTrustee__factory } from \"./typechain/factories/LuminaTrustee__factory\";\nimport LuminaTokenDeployment from \"./deployments/mumbai/LuminaToken.json\";\nimport { LuminaToken } from \"./typechain/LuminaToken\";\nimport { LuminaToken__factory } from \"./typechain/factories/LuminaToken__factory\";\nimport ProgressContractLockerDeployment from \"./deployments/mumbai/ProgressContractLocker.json\";\nimport { ProgressContractLocker } from \"./typechain/ProgressContractLocker\";\nimport { ProgressContractLocker__factory } from \"./typechain/factories/ProgressContractLocker__factory\";\nimport TokenFaucetDeployment from \"./deployments/mumbai/TokenFaucet.json\";\nimport { TokenFaucet } from \"./typechain/TokenFaucet\";\nimport { TokenFaucet__factory } from \"./typechain/factories/TokenFaucet__factory\";\nimport { UtilsTest } from \"./typechain/UtilsTest\";\nimport { UtilsTest__factory } from \"./typechain/factories/UtilsTest__factory\";\nimport { ERC20 } from \"./typechain/ERC20\";\nimport { ERC20__factory } from \"./typechain/factories/ERC20__factory\";\n\nconst emptyContract = {\n    instance: undefined,\n    factory: undefined\n};\nconst defaultProvider: providers.Provider | undefined = undefined;\nexport const ProviderContext = React.createContext<[providers.Provider | undefined, React.Dispatch<React.SetStateAction<providers.Provider | undefined>>]>([defaultProvider, () => { }]);\nconst defaultCurrentAddress: string = \"\";\nexport const CurrentAddressContext = React.createContext<[string, React.Dispatch<React.SetStateAction<string>>]>([defaultCurrentAddress, () => { }]);\nconst defaultSigner: Signer | undefined = undefined;\nexport const SignerContext = React.createContext<[Signer | undefined, React.Dispatch<React.SetStateAction<Signer | undefined>>]>([defaultSigner, () => { }]);\nconst defaultSymfoniContext: SymfoniContextInterface = {\n    currentHardhatProvider: \"\",\n    init: () => { throw Error(\"Symfoni context not initialized\") },\n    loading: false,\n    messages: [],\n    providers: []\n};\nexport const SymfoniContext = React.createContext<SymfoniContextInterface>(defaultSymfoniContext);\nexport const LuminaAdminContext = React.createContext<SymfoniLuminaAdmin>(emptyContract);\nexport const LuminaCampaignLaunchContext = React.createContext<SymfoniLuminaCampaignLaunch>(emptyContract);\nexport const LuminaMarketingContext = React.createContext<SymfoniLuminaMarketing>(emptyContract);\nexport const LuminaRecordsContext = React.createContext<SymfoniLuminaRecords>(emptyContract);\nexport const LuminaTrusteeContext = React.createContext<SymfoniLuminaTrustee>(emptyContract);\nexport const LuminaTokenContext = React.createContext<SymfoniLuminaToken>(emptyContract);\nexport const ProgressContractLockerContext = React.createContext<SymfoniProgressContractLocker>(emptyContract);\nexport const TokenFaucetContext = React.createContext<SymfoniTokenFaucet>(emptyContract);\nexport const UtilsTestContext = React.createContext<SymfoniUtilsTest>(emptyContract);\nexport const ERC20Context = React.createContext<SymfoniERC20>(emptyContract);\n\nexport interface SymfoniContextInterface {\n    init: (provider?: string) => void;\n    loading: boolean;\n    messages: string[];\n    currentHardhatProvider: string;\n    providers: string[];\n}\n\nexport interface SymfoniProps {\n    autoInit?: boolean;\n    showLoading?: boolean;\n    loadingComponent?: React.ReactNode;\n}\n\nexport interface SymfoniLuminaAdmin {\n    instance?: LuminaAdmin;\n    factory?: LuminaAdmin__factory;\n}\n\nexport interface SymfoniLuminaCampaignLaunch {\n    instance?: LuminaCampaignLaunch;\n    factory?: LuminaCampaignLaunch__factory;\n}\n\nexport interface SymfoniLuminaMarketing {\n    instance?: LuminaMarketing;\n    factory?: LuminaMarketing__factory;\n}\n\nexport interface SymfoniLuminaRecords {\n    instance?: LuminaRecords;\n    factory?: LuminaRecords__factory;\n}\n\nexport interface SymfoniLuminaTrustee {\n    instance?: LuminaTrustee;\n    factory?: LuminaTrustee__factory;\n}\n\nexport interface SymfoniLuminaToken {\n    instance?: LuminaToken;\n    factory?: LuminaToken__factory;\n}\n\nexport interface SymfoniProgressContractLocker {\n    instance?: ProgressContractLocker;\n    factory?: ProgressContractLocker__factory;\n}\n\nexport interface SymfoniTokenFaucet {\n    instance?: TokenFaucet;\n    factory?: TokenFaucet__factory;\n}\n\nexport interface SymfoniUtilsTest {\n    instance?: UtilsTest;\n    factory?: UtilsTest__factory;\n}\n\nexport interface SymfoniERC20 {\n    instance?: ERC20;\n    factory?: ERC20__factory;\n}\n\nexport const Symfoni: React.FC<SymfoniProps> = ({\n    showLoading = true,\n    autoInit = true,\n    ...props\n}) => {\n    const [initializeCounter, setInitializeCounter] = useState(0);\n    const [currentHardhatProvider, setCurrentHardhatProvider] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [messages, setMessages] = useState<string[]>([]);\n    const [signer, setSigner] = useState<Signer | undefined>(defaultSigner);\n    const [provider, setProvider] = useState<providers.Provider | undefined>(defaultProvider);\n    const [currentAddress, setCurrentAddress] = useState<string>(defaultCurrentAddress);\n    const [fallbackProvider] = useState<string | undefined>(undefined);\n    const [providerPriority, setProviderPriority] = useState<string[]>([\"web3modal\", \"hardhat\"]);\n    const [LuminaAdmin, setLuminaAdmin] = useState<SymfoniLuminaAdmin>(emptyContract);\n    const [LuminaCampaignLaunch, setLuminaCampaignLaunch] = useState<SymfoniLuminaCampaignLaunch>(emptyContract);\n    const [LuminaMarketing, setLuminaMarketing] = useState<SymfoniLuminaMarketing>(emptyContract);\n    const [LuminaRecords, setLuminaRecords] = useState<SymfoniLuminaRecords>(emptyContract);\n    const [LuminaTrustee, setLuminaTrustee] = useState<SymfoniLuminaTrustee>(emptyContract);\n    const [LuminaToken, setLuminaToken] = useState<SymfoniLuminaToken>(emptyContract);\n    const [ProgressContractLocker, setProgressContractLocker] = useState<SymfoniProgressContractLocker>(emptyContract);\n    const [TokenFaucet, setTokenFaucet] = useState<SymfoniTokenFaucet>(emptyContract);\n    const [UtilsTest, setUtilsTest] = useState<SymfoniUtilsTest>(emptyContract);\n    const [ERC20, setERC20] = useState<SymfoniERC20>(emptyContract);\n    useEffect(() => {\n        if (messages.length > 0)\n            console.debug(messages.pop())\n    }, [messages])\n\n    const getProvider = async (): Promise<{ provider: providers.Provider, hardhatProviderName: string } | undefined> => {\n        let hardhatProviderName = \"Not set\";\n        let _providerPriority = [...providerPriority];\n        // Fallback provider\n        if (fallbackProvider && autoInit && initializeCounter === 0) {\n            if (localStorage.getItem(\"WEB3_CONNECT_CACHED_PROVIDER\") === null) {\n                _providerPriority = _providerPriority.sort((a, b) => {\n                    return a === fallbackProvider ? -1 : b === fallbackProvider ? 1 : 0;\n                })\n            }\n        }\n        const provider = await _providerPriority.reduce(async (maybeProvider: Promise<providers.Provider | undefined>, providerIdentification) => {\n            let foundProvider = await maybeProvider\n            if (foundProvider) {\n                return Promise.resolve(foundProvider)\n            }\n            else {\n                switch (providerIdentification.toLowerCase()) {\n                    case \"web3modal\":\n                        try {\n                            const provider = await getWeb3ModalProvider()\n                            const web3provider = new ethers.providers.Web3Provider(provider);\n                            hardhatProviderName = \"web3modal\";\n                            return Promise.resolve(web3provider)\n                        } catch (error) {\n                            return Promise.resolve(undefined)\n                        }\n                    case \"hardhat\":\n                        try {\n                            const provider = new ethers.providers.JsonRpcProvider({\n                                url: \"http://127.0.0.1:8545\",\n                            });\n                            hardhatProviderName = \"hardhat\";\n                            return Promise.resolve(provider)\n                        } catch (error) {\n                            return Promise.resolve(undefined)\n                        } default:\n                        return Promise.resolve(undefined)\n                }\n            }\n        }, Promise.resolve(undefined)) // end reduce\n        return provider ? { provider, hardhatProviderName } : undefined\n    };\n    const getSigner = async (_provider: providers.Provider, hardhatProviderName: string): Promise<Signer | undefined> => {\n        switch (hardhatProviderName) {\n            case \"web3modal\":\n                const web3provider = _provider as ethers.providers.Web3Provider\n                return await web3provider.getSigner()\n            case \"hardhat\":\n                return ethers.Wallet.fromMnemonic(\"rapid marriage slogan catalog swift off kite differ pluck million argue cost\").connect(_provider)\n            default:\n                return undefined\n        }\n    };\n    const getWeb3ModalProvider = async (): Promise<any> => {\n        const providerOptions: IProviderOptions = {\n\n        };\n        const web3Modal = new Web3Modal({\n            // network: \"mainnet\",\n            cacheProvider: false,\n            providerOptions, // required\n        });\n        return await web3Modal.connect();\n    };\n\n    useEffect(() => {\n        let subscribed = true\n        const doAsync = async () => {\n            const finish = (text: string) => {\n                setLoading(false)\n                setMessages(old => [...old, text])\n            }\n            const finishWithContracts = (text: string) => {\n                setLuminaAdmin(getLuminaAdmin(_provider, _signer))\n                setLuminaCampaignLaunch(getLuminaCampaignLaunch(_provider, _signer))\n                setLuminaMarketing(getLuminaMarketing(_provider, _signer))\n                setLuminaRecords(getLuminaRecords(_provider, _signer))\n                setLuminaTrustee(getLuminaTrustee(_provider, _signer))\n                setLuminaToken(getLuminaToken(_provider, _signer))\n                setProgressContractLocker(getProgressContractLocker(_provider, _signer))\n                setTokenFaucet(getTokenFaucet(_provider, _signer))\n                setUtilsTest(getUtilsTest(_provider, _signer))\n                setERC20(getERC20(_provider, _signer))\n                finish(text)\n            }\n            if (!autoInit && initializeCounter === 0) return finish(\"Auto init turned off.\")\n            setLoading(true)\n            setMessages(old => [...old, \"Initiating Symfoni React\"])\n            const providerObject = await getProvider() // getProvider can actually return undefined, see issue https://github.com/microsoft/TypeScript/issues/11094\n\n            if (!subscribed || !providerObject) return finish(\"No provider or signer.\")\n            const _provider = providerObject.provider\n            setProvider(_provider)\n            setMessages(old => [...old, \"Useing \" + providerObject.hardhatProviderName])\n            setCurrentHardhatProvider(providerObject.hardhatProviderName)\n            const _signer = await getSigner(_provider, providerObject.hardhatProviderName);\n\n            if (!subscribed || !_signer) return finishWithContracts(\"Provider, without signer.\")\n            setSigner(_signer)\n            setMessages(old => [...old, \"Useing signer\"])\n            const address = await _signer.getAddress()\n\n            if (!subscribed || !address) return finishWithContracts(\"Provider and signer, without address.\")\n            setCurrentAddress(address)\n\n            return finishWithContracts(\"Completed Symfoni context initialization.\")\n        };\n        doAsync();\n        return () => { subscribed = false }\n    }, [initializeCounter])\n\n    const getLuminaAdmin = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = LuminaAdminDeployment.receipt.contractAddress\n        const instance = _signer ? LuminaAdmin__factory.connect(contractAddress, _signer) : LuminaAdmin__factory.connect(contractAddress, _provider)\n        const contract: SymfoniLuminaAdmin = {\n            instance: instance,\n            factory: _signer ? new LuminaAdmin__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getLuminaCampaignLaunch = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = LuminaCampaignLaunchDeployment.receipt.contractAddress\n        const instance = _signer ? LuminaCampaignLaunch__factory.connect(contractAddress, _signer) : LuminaCampaignLaunch__factory.connect(contractAddress, _provider)\n        const contract: SymfoniLuminaCampaignLaunch = {\n            instance: instance,\n            factory: _signer ? new LuminaCampaignLaunch__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getLuminaMarketing = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = LuminaMarketingDeployment.receipt.contractAddress\n        const instance = _signer ? LuminaMarketing__factory.connect(contractAddress, _signer) : LuminaMarketing__factory.connect(contractAddress, _provider)\n        const contract: SymfoniLuminaMarketing = {\n            instance: instance,\n            factory: _signer ? new LuminaMarketing__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getLuminaRecords = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = LuminaRecordsDeployment.receipt.contractAddress\n        const instance = _signer ? LuminaRecords__factory.connect(contractAddress, _signer) : LuminaRecords__factory.connect(contractAddress, _provider)\n        const contract: SymfoniLuminaRecords = {\n            instance: instance,\n            factory: _signer ? new LuminaRecords__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getLuminaTrustee = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = LuminaTrusteeDeployment.receipt.contractAddress\n        const instance = _signer ? LuminaTrustee__factory.connect(contractAddress, _signer) : LuminaTrustee__factory.connect(contractAddress, _provider)\n        const contract: SymfoniLuminaTrustee = {\n            instance: instance,\n            factory: _signer ? new LuminaTrustee__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getLuminaToken = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = LuminaTokenDeployment.receipt.contractAddress\n        const instance = _signer ? LuminaToken__factory.connect(contractAddress, _signer) : LuminaToken__factory.connect(contractAddress, _provider)\n        const contract: SymfoniLuminaToken = {\n            instance: instance,\n            factory: _signer ? new LuminaToken__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getProgressContractLocker = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = ProgressContractLockerDeployment.receipt.contractAddress\n        const instance = _signer ? ProgressContractLocker__factory.connect(contractAddress, _signer) : ProgressContractLocker__factory.connect(contractAddress, _provider)\n        const contract: SymfoniProgressContractLocker = {\n            instance: instance,\n            factory: _signer ? new ProgressContractLocker__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getTokenFaucet = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = TokenFaucetDeployment.receipt.contractAddress\n        const instance = _signer ? TokenFaucet__factory.connect(contractAddress, _signer) : TokenFaucet__factory.connect(contractAddress, _provider)\n        const contract: SymfoniTokenFaucet = {\n            instance: instance,\n            factory: _signer ? new TokenFaucet__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getUtilsTest = (_provider: providers.Provider, _signer?: Signer) => {\n        let instance = _signer ? UtilsTest__factory.connect(ethers.constants.AddressZero, _signer) : UtilsTest__factory.connect(ethers.constants.AddressZero, _provider)\n        const contract: SymfoniUtilsTest = {\n            instance: instance,\n            factory: _signer ? new UtilsTest__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getERC20 = (_provider: providers.Provider, _signer?: Signer) => {\n        let instance = _signer ? ERC20__factory.connect(ethers.constants.AddressZero, _signer) : ERC20__factory.connect(ethers.constants.AddressZero, _provider)\n        const contract: SymfoniERC20 = {\n            instance: instance,\n            factory: _signer ? new ERC20__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n\n    const handleInitProvider = (provider?: string) => {\n        if (provider) {\n            setProviderPriority(old => old.sort((a, b) => {\n                return a === provider ? -1 : b === provider ? 1 : 0;\n            }))\n        }\n        setInitializeCounter(initializeCounter + 1)\n    }\n    return (\n        <SymfoniContext.Provider value={{ init: (provider) => handleInitProvider(provider), providers: providerPriority, currentHardhatProvider, loading, messages }}>\n            <ProviderContext.Provider value={[provider, setProvider]}>\n                <SignerContext.Provider value={[signer, setSigner]}>\n                    <CurrentAddressContext.Provider value={[currentAddress, setCurrentAddress]}>\n                        <LuminaAdminContext.Provider value={LuminaAdmin}>\n                            <LuminaCampaignLaunchContext.Provider value={LuminaCampaignLaunch}>\n                                <LuminaMarketingContext.Provider value={LuminaMarketing}>\n                                    <LuminaRecordsContext.Provider value={LuminaRecords}>\n                                        <LuminaTrusteeContext.Provider value={LuminaTrustee}>\n                                            <LuminaTokenContext.Provider value={LuminaToken}>\n                                                <ProgressContractLockerContext.Provider value={ProgressContractLocker}>\n                                                    <TokenFaucetContext.Provider value={TokenFaucet}>\n                                                        <UtilsTestContext.Provider value={UtilsTest}>\n                                                            <ERC20Context.Provider value={ERC20}>\n                                                                {showLoading && loading ?\n                                                                    props.loadingComponent\n                                                                        ? props.loadingComponent\n                                                                        : <div>\n                                                                            {messages.map((msg, i) => (\n                                                                                <p key={i}>{msg}</p>\n                                                                            ))}\n                                                                        </div>\n                                                                    : props.children\n                                                                }\n                                                            </ERC20Context.Provider >\n                                                        </UtilsTestContext.Provider >\n                                                    </TokenFaucetContext.Provider >\n                                                </ProgressContractLockerContext.Provider >\n                                            </LuminaTokenContext.Provider >\n                                        </LuminaTrusteeContext.Provider >\n                                    </LuminaRecordsContext.Provider >\n                                </LuminaMarketingContext.Provider >\n                            </LuminaCampaignLaunchContext.Provider >\n                        </LuminaAdminContext.Provider >\n                    </CurrentAddressContext.Provider>\n                </SignerContext.Provider>\n            </ProviderContext.Provider>\n        </SymfoniContext.Provider>\n    )\n\n};\n","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport css from \"./Metamask.module.css\"\n\nexport interface MetamaskProps {\n}\n\nexport const isMetamaskInstalled = () => window.ethereum && window.ethereum.isMetaMask\nexport const isMetamaskConnected = () => window.ethereum && window.ethereum.isConnected() && window.ethereum._state.accounts.length > 0\n\nconst handleConnect = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault()\n    try {\n        await window.ethereum.request({method: \"eth_requestAccounts\"})\n    } catch(ex) {\n\n    }\n}\n\nconst MetamaskConnectButton: React.FC<MetamaskProps> = () => {\n    const className = css.connect\n\n    return <button title=\"Connect this dApp to the MetaMask\" className={className} onClick={(e) => handleConnect(e)}>{isMetamaskConnected() ? <>&nbsp;<FontAwesomeIcon icon={[\"far\", \"hourglass\"]}/>&nbsp;</> : \"Connect\"}</button>\n}\n\nexport default MetamaskConnectButton\n","//\n// Parameters\n//\n\n// Token Symbol\nexport const TOKEN_SYMBOL = \"LUMI\"\n\n// Limiting number of challenges displayed in a table\nexport const CHALLENGES_LIMIT = 25;\n\n// The lucky number determines the premium challenges\nexport const LUCKY_NUMBER = 2;\n\nexport const CHALLENGE_NULL = 255;\nexport const MAX_CHALLENGE_CNT = 100;\nexport const MIN_CHALLENGE_DIFFICULTY = (demo: boolean) => demo ? 10 : 20;\nexport const MAX_CHALLENGE_DIFFICULTY = (demo: boolean) => demo ? 208 : 218;\nexport const CHALLENGE_DIFFICULTY_STEP = 2;\n\nexport const TOKEN_DECIMALS = 18;\n\nexport const REWARDS_CNT_LIMIT = (demo: boolean) => demo ? 2 : 500;\n","// import React from 'react'\nimport { BigNumber } from \"@ethersproject/bignumber\"\n\nexport function formatBalance(balance: BigNumber, decimals: number) {\n    const b1 = balance.div(BigNumber.from(10).pow(decimals))\n    const b2 = balance.div(BigNumber.from(10).pow(decimals-3)).mod(1000)\n    const r = b1.toNumber().toLocaleString()+(b2.isZero() ? \"\" : \".\"+b2.toString().padStart(3, \"0\"))\n    return r\n}\n\nexport const ZERO = BigNumber.from(0)\nexport const ONE = BigNumber.from(1)\nexport const TWO = BigNumber.from(2)\nexport const TEN = BigNumber.from(10)\n\n// finds the highest significant bit of the argument\n// the result is encoded as if bits were numbered from 1\n// e.g. findHsb of 0 returns 0\n//      findHsb of 1 returns 1\n//      findHsb of 2 returns 2\n//      findHsb of 4 returns 3\n//      etc.\nexport function findHsb(n: BigNumber): number {\n    let from = 0;\n    let to = 256\n\n    while(from < to) {\n        const middle = (from + to) >> 1\n        const mask = ONE.shl(middle).sub(ONE)\n\n        if(n.lte(mask)) {\n            to = middle\n        } else {\n            from = middle+1\n        }\n    }\n\n    return from\n}\n\n// finds the lowest significant bit of the argument\n// the result is encoded as if bits were numbered from 1\n// e.g. findLsb of 0 returns 0\n//      findLsb of 1 returns 1\n//      findLsb of 2 returns 2\n//      findLsb of 4 returns 3\n//      etc.\nexport function findLsb(n: BigNumber): number {\n    if(n.isZero()) {\n        return 0\n    }\n    let from = 1\n    let to = 256\n\n    while(from < to) {\n        const middle = (from + to) >> 1\n        const mask = ONE.shl(middle).sub(ONE)\n\n        if(n.and(mask).isZero()) {\n            from = middle+1\n        } else {\n            to = middle\n        }\n    }\n\n    return from;\n}\n","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { findLsb, ONE, TEN } from \"../utils/bigNumber\"\n\nexport function getRewardUnits(challengeHash: string): [number, number] {\n    let n: [number, number]\n    if(challengeHash.startsWith(\"0x22222\")) {\n        n = [500, 2000]\n    } else if(challengeHash.startsWith(\"0x2222\")) {\n        n = [200, 500]\n    } else if(challengeHash.startsWith(\"0x222\")) {\n        n = [100, 100]\n    } else if(challengeHash.startsWith(\"0x22\")) {\n        n = [50, 20]\n    } else if(challengeHash.startsWith(\"0x2\")) {\n        n = [20, 5]\n    } else {\n        n = [10, 1]\n    }\n    return n\n}\n\nexport function getWalletDifficultyDiscount(challengeHash: string, address: string, balance: BigNumber, decimals: number): number {\n    const h1 = BigNumber.from(challengeHash)\n    const h2 = BigNumber.from(address)\n    let o = h1.xor(h2)\n    let n = findLsb(o)\n    if(n === 0) {\n        n = 256\n    }\n    n--\n\n    const b1 = balance.div(TEN.pow(decimals))\n    if(b1.gte(ONE)) {\n        if(n >= 20) {\n            n = 30\n        } else if(n >= 10) {\n            n = 20 + (n - 10)\n        } else {\n            n = 2 * n\n        }\n    } else {\n        if(n > 10) {\n            n = 10\n        }\n    }\n\n    return n\n}\n\nexport function getBalanceDifficultyDiscount(balance: BigNumber, decimals: number): number {\n    const b1 = balance.div(TEN.pow(decimals))\n    const b2 = balance.mod(TEN.pow(decimals)).div(TEN.pow(decimals-3))\n    let discount\n    if(b1.gte(ONE)) {\n        if(b1.gte(BigNumber.from(1000))) {\n            discount = 2 * 10 + 10\n        } else if(b1.gte(BigNumber.from(500))) {\n            discount = 2 * 9 + 10\n        } else if(b1.gte(BigNumber.from(200))) {\n            discount = 2 * 8 + 10\n        } else if(b1.gte(BigNumber.from(100))) {\n            discount = 2 * 7 + 10\n        } else if(b1.gte(BigNumber.from(50))) {\n            discount = 2 * 6 + 10\n        } else if(b1.gte(BigNumber.from(20))) {\n            discount = 2 * 5 + 10\n        } else if(b1.gte(TEN)) {\n            discount = 2 * 4 + 10\n        } else if(b1.gte(BigNumber.from(5))) {\n            discount = 2 * 3 + 10\n        } else if(b1.gte(BigNumber.from(3))) {\n            discount = 2 * 2 + 10\n        } else if(b1.gte(BigNumber.from(2))) {\n            discount = 2 * 1 + 10\n        } else {\n            discount = 2 * 0 + 10\n        }\n    } else {\n        if(b2.gte(BigNumber.from(500))) {\n            discount = 9\n        } else if(b2.gte(BigNumber.from(200))) {\n            discount = 8\n        } else if(b2.gte(BigNumber.from(100))) {\n            discount = 7\n        } else if(b2.gte(BigNumber.from(50))) {\n            discount = 6\n        } else if(b2.gte(BigNumber.from(20))) {\n            discount = 5\n        } else if(b2.gte(TEN)) {\n            discount = 4\n        } else if(b2.gte(BigNumber.from(5))) {\n            discount = 3\n        } else if(b2.gte(BigNumber.from(2))) {\n            discount = 2\n        } else if(b2.gte(ONE)) {\n            discount = 1\n        } else {\n            discount = 0\n        }\n    }\n    return discount\n}\n\nexport function getDifficultyLabel(difficulty: number): string {\n    let s = \"\"\n\n    if(difficulty <= 20) {\n        s = \"too easy\"\n    } else if(difficulty <= 30) {\n        s = \"easy\"\n    } else if(difficulty <= 40) {\n        s = \"medium\"\n    } else if(difficulty <= 50) {\n        s = \"hard\"\n    } else if(difficulty <= 60) {\n        s = \"very hard\"\n    } else if(difficulty <= 70) {\n        s = \"extremely hard\"\n    } else if(difficulty <= 80) {\n        s = \"almost impossible\"\n    } else if(difficulty <= 90) {\n        s = \"impossible\"\n    } else {\n        s = \"a miracle\"\n    } \n\n    return s;\n}\n\nexport function getReasonLabel(reason: number) {\n    let s = \"\"\n\n    if(typeof(reason) === \"string\") {\n        return reason\n    }\n    switch(reason) {\n        case 0:\n            s = \"Request satisfies all criteria to claim the tokens (at this moment)\"\n            break\n        case 1:\n            s = \"blockNumber does not exist or has no live challenge assigned right now\"\n            break\n        case 2:\n            s = \"Invalid or weak solution\"\n            break\n        case 3:\n            s = \"This challenge has already been claimed by this address\"\n            break\n        case 4:\n            s = \"All available rewards have been claimed already\"\n            break\n        case 5:\n            s = \"Recipient's address is not eligible for rewards, external miners can only make claims on addresses with at least 0.001 LUMI\"\n            break\n        case 6:\n            s = \"Recipient's address is not eligible for rewards, external miners can only make claims on addresses with at most 10,000 LUMI\"\n            break\n        case 7:\n            s = \"recipient's address is not eligible for rewards, it is a contract that is not a Lumina Fund\"\n            break\n        case 100:\n            s = \"Invalid claim string\"\n            break\n        case 101:\n            s = \"The contract is paused\"\n            break\n        default:\n            s = \"Unknown Reason #\" + reason\n            break\n    }\n\n    return s\n}\n","import React, { useState } from 'react'\n\nimport css from \"./IconButton.module.css\"\n\nexport interface IconButtonProps {\n    url?: string;\n    children: JSX.Element;\n}\n\nconst IconButton: React.FC<IconButtonProps> = ({url, children}) => {\n    const [hover, setHover] = useState(false);\n    const [down, setDown] = useState(false);\n    const { button, buttonHover, buttonDown } = css\n    const className = down ? buttonDown : hover ? buttonHover : button\n\n    return <span\n        onPointerOver={()=> setHover(true)}\n        onPointerOut={() => setHover(false)}\n        onPointerDown={()=> setDown(true)}\n        onPointerUp={() => setDown(false)}\n    >\n        {url ? <a title={url} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <button className={className}>{children}</button>\n        </a> : <button className={className}>{children}</button>}\n    </span>\n}\n\nexport default IconButton\n","\nconst hexRegex = /0x[a-fA-F0-9]+/\n\nexport function verifyHex(hex: string) {\n    return hexRegex.test(hex)\n}\n\nexport function verifyHex256(hex: string) {\n    return hex.length === 66 && hexRegex.test(hex)\n}\n\nexport function verifyAddress(address: string) {\n    return address.length === 42 && verifyHex(address)\n}\n","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport IconButton from \"./IconButton\"\n\nimport { verifyAddress } from \"../utils/hex\"\n\nimport css from \"./Address.module.css\"\n\nexport interface AddressProps {\n    children: string;\n    chainId: number;\n}\n\nconst Address: React.FC<AddressProps> = ({children: address, chainId}) => {\n    const url = chainId === 80001 ? \"http://mumbai.polygonscan.com/address\" : \"http://polygonscan.com/address\"\n\n    if(!address) {\n        return null\n    }\n\n    address = address.trim()\n    if(!address) {\n        return null\n    }\n\n    const valid = verifyAddress(address)\n    const shortAddress = address.substring(0, 8)+\"-\"+address.substring(address.length-8)\n    return <span>\n        <span className={css.address+(!valid?\" \"+css.invalid:\"\")}><code>{shortAddress}</code></span>\n        &nbsp;\n        {!valid ? <FontAwesomeIcon style={{color: \"red\"}} title={\"Invalid Address: \"+address} icon=\"exclamation-triangle\"/>\n        : <>\n            <FontAwesomeIcon icon=\"info\"/>\n            &nbsp;\n            {address && <CopyToClipboard text={address}>\n                <span title={\"Copy: \"+address}>\n                    <IconButton>\n                        <FontAwesomeIcon icon={[\"far\", \"copy\"]}/>\n                    </IconButton>\n                </span>\n            </CopyToClipboard>}\n            <IconButton url={url+\"/\"+address}>\n                <FontAwesomeIcon title={url+\"/\"+address} icon=\"external-link-alt\"/>\n            </IconButton>\n        </>}\n    </span>\n}\n\nexport default Address\n","import React, { Component } from 'react'\n\nimport Select from 'react-select'\n\nconst commisionOptions = [\n  { value: 0, label: \"0%\"},\n  { value: 10, label: \"10%\"},\n  { value: 20, label: \"20%\"},\n  { value: 30, label: \"30%\"},\n  { value: 40, label: \"40%\"},\n  { value: 50, label: \"50%\"},\n  { value: 60, label: \"60%\"},\n  { value: 70, label: \"70%\"},\n  { value: 80, label: \"80%\"},\n  { value: 90, label: \"90%\"},\n]\n\nconst commisionOptionsMap = {}\n\ncommisionOptions.forEach(o => commisionOptionsMap[o.value.toString()] = o)\n\nconst customStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    background: '#fff',\n    borderColor: '#9e9e9e',\n    minHeight: '20px',\n    height: '20px',\n    boxShadow: state.isFocused ? null : null,\n  }),\n\n  valueContainer: (provided, state) => ({\n    ...provided,\n    height: '20px',\n    padding: '0 6px'\n  }),\n\n  input: (provided, state) => ({\n    ...provided,\n    margin: '0px',\n  }),\n\n  indicatorSeparator: state => ({\n    display: 'none',\n  }),\n\n  indicatorsContainer: (provided, state) => ({\n    ...provided,\n    height: '20px',\n  }),\n}\n\nexport default class CommisionSetting extends Component {\n\n  handleChange = selectedOption => {\n    this.props.setCommision(selectedOption.value)\n  }\n\n  render() {\n    const { commision } = this.props\n    const selectedOption = commisionOptionsMap[commision.toString()] || null\n\n    return <Select\n      styles={customStyles}\n      placeholder={\"\"+commision+\"%\"}\n      width={25}\n      value={selectedOption}\n      onChange={this.handleChange}\n      options={commisionOptions}\n    />\n  }\n}\n","import React from 'react'\n\nimport css from './Category.module.css'\n\nconst Cat2Color = (cat: string) => {\n  let color\n  switch(cat) {\n    case \"too easy\":\n        color = \"white\" // white\n        break\n    case \"easy\":\n      color = \"#ffff9c\" // yellow\n      break\n    case \"medium\":\n      color = \"#ffcf9c\" // orange\n      break\n    case \"hard\":\n      color = \"pink\" // \"#ff1010\"\n      break\n      case \"very hard\":\n        color = \"#ff9c9c\" // red\n        break\n      case \"extremely hard\":\n        color = \"#E1BEE7\" // purple\n        break\n    default:\n      color = \"#D1C4E9\" // deep purple\n      break\n  }\n  return color\n}\n\nconst Category = (props: any) => {\n  const { style, cat } = props\n  const color = Cat2Color(cat)\n\n  return <span title={cat} style={{...style, backgroundColor: color}} className={css.cat}>\n    &nbsp;\n    {props.children}\n    &nbsp;\n  </span>\n}\n\nexport default Category\n","import React from 'react'\n\nimport Category from './Category'\nimport { getDifficultyLabel } from \"./Rules\"\n\nconst second = 1\nconst minute = 60\nconst hour = 60 * minute\nconst day = 24 * hour\nconst week = 7 * day\nconst year = 365.25 * day\nconst century = 100 * year - day\nconst millenium = 10 * century\nconst millionYears = 1000*millenium\nconst billionYears = 1000*millionYears\nconst trillionYears = 1000*billionYears\nconst quadYears = 1000*trillionYears\n\nconst difficulties = Array.from(Array(11).keys()).map(n => n*10+20)\n\nconst timeLabels1 = [ \"quad years\", \"trillion years\", \"billion years\", \"million years\", \"millenium\", \"century\", \"year\", \"week\", \"day\", \"hour\", \"minute\", \"second\" ]\nconst timeLabels = [ \"quad years\", \"trillion years\", \"billion years\", \"million years\", \"millenia\", \"centuries\", \"years\", \"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\" ]\nconst timeSpans0: any = { quadYears, trillionYears, billionYears, millionYears, millenium, century, year, week, day, hour, minute, second }\nconst timeSpans = Object.keys(timeSpans0).map((ts, i) => ({time: timeSpans0[ts], label: timeLabels[i], label1: timeLabels1[i]}))\n\nconst getTime = (t: number) => {\n  \n    const fts = timeSpans.filter(ts => t >= ts.time)\n\n    let s = \"0 seconds\"\n\n    if(fts.length > 0) {\n        const ts = fts[0]\n        const n = Math.floor(t / ts.time * 10) / 10\n        if(n > 1.0) {\n            s = n.toString() + \" \" + ts.label\n        } else {\n            s = \"1 \" + ts.label\n        }\n    }\n\n    return s\n}\n\nconst Difficulties = (props: any) => {\n    return <div>\n        <h2>Difficulties</h2>\n        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <thead>\n                <tr>\n                    <th title=\"Difficulty Level\" style={{textAlign: \"left\"}}>Level</th>\n                    <th title=\"Average mining time at hash rate 1GH/s\">Avg Mining Time</th>\n                </tr>\n            </thead>\n            <tbody>\n                {difficulties\n                .map((d, i) => {\n                    const label = getDifficultyLabel(d)\n                    return <tr key={i}>\n                        <td style={{textAlign: \"left\"}}>{<Category cat={label}>{d} - {label}</Category>}</td>\n                        <td style={{textAlign: \"right\"}}>{getTime(Math.floor(Math.pow(2, d)/Math.pow(10, 9)))}</td>\n                    </tr>\n                })}\n            </tbody>\n        </table>\n    </div>\n}\n\nexport default Difficulties\n","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { keccak256 } from \"@ethersproject/solidity\"\nimport { random } from \"sjcl\"\n\n\nexport default function solve(\n    blockNumber: BigNumber,\n    challengeHash: string,\n    address: string,\n    solvedDifficulty: number,\n    status: (trials:number, timeMs: number, solution?: BigNumber, solvedDifficulty?: number)=>void,\n) {\n    const one = BigNumber.from(1)\n\n    // Generate some good random number here\n    if(!random.isReady()) {\n        throw new Error(\"RNG is not ready\")\n    }\n    const rnd = random.randomWords(8)\n    let rnds = \"0x\"\n    for(let i = 0; i < 8; i++) {\n        const r = rnd[i] >>> 0\n        rnds += r.toString(16)\n    }\n    let nonce = BigNumber.from(rnds)\n    let difficultyN = solvedDifficulty + 1\n    // The solution must be <= target to pass\n    let targetN = one.shl(256-difficultyN).sub(one)\n\n    let stop = false\n    let cnt = 0\n    let timeMs = 0;\n\n    function batch() {\n        if(stop) {\n            return\n        }\n        const startTimeMs = Date.now()\n        for(let i = 0; i < 1000; i++) {\n            cnt++\n            const digest = keccak256([ \"uint256\", \"uint256\", \"uint256\", \"uint256\" ], [ nonce, BigNumber.from(challengeHash), BigNumber.from(address), BigNumber.from(address) ])\n            const digestNum = BigNumber.from(digest)\n            if(digestNum.lte(targetN)) {\n                solvedDifficulty = difficultyN\n                while(digestNum.lte(targetN)) {\n                    solvedDifficulty = difficultyN\n                    difficultyN++;\n                    targetN = one.shl(256-difficultyN).sub(one)\n                }\n                status(cnt, timeMs, nonce, solvedDifficulty)\n                if(stop) {\n                    // Found the required solution!\n                    return\n                }\n            }\n            nonce = nonce.add(one)\n            if((cnt % 1000) === 0) {\n                status(cnt, timeMs)\n            }\n        }\n        if(!stop) {\n            setTimeout(batch, 0)\n        }\n        const endTimeMs = Date.now()\n        timeMs += endTimeMs - startTimeMs\n    }\n\n    if(!stop) {\n        setTimeout(batch, 0)\n    }\n\n    return () => stop = true\n}\n","import React, { useState, useEffect } from 'react'\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport solve from \"./Solve\"\nimport { ZERO } from \"../utils/bigNumber\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport { getRewardUnits, getWalletDifficultyDiscount, getBalanceDifficultyDiscount, getDifficultyLabel } from \"./Rules\"\nimport { MIN_CHALLENGE_DIFFICULTY, MAX_CHALLENGE_DIFFICULTY, CHALLENGE_DIFFICULTY_STEP, TOKEN_DECIMALS, REWARDS_CNT_LIMIT } from \"./Parameters\"\n\nimport Category from \"./Category\"\n\nexport type RegisteredBalancesType = {balances: BigNumber[], blockNumbers: BigNumber[]}\nexport type ChallengesType = {totalCnt: number, indexes: number[], blockNumbers: BigNumber[], rewardUnits: number[], challengeHashes: string[], nexts: number[], claimsCnt: number[], claimed: boolean[]}\nexport type ChallengesMapType = {\n    blockNumberHex: string,\n    challengeHash: string,\n    generalDifficulty: number,\n    addressDiscount: number,\n    balance: BigNumber,\n    balanceDiscount: number,\n    adjustedDifficulty: number,\n    claimsCnt: number,\n    claimed: boolean,\n}\nexport type RunStatusType = {\n    group: string;\n    blockNumberHex: string;\n    challengeHash: string;\n    trials: number,\n    targetDifficulty: number,\n    solutionTrials: number,\n    solution?: BigNumber,\n    solvedDifficulty: number,\n    solved: boolean,\n    timeMs: number,\n    stopFn?: () => void,\n}\nexport type VerifyClaimType = { rewardUnits: number, reason: number, premium: boolean, rewardsCnt: number }\n\nexport interface ChallengesProps {\n    challenges: ChallengesType;\n    group: string;\n    address: string;\n    registeredBalances: RegisteredBalancesType;\n    demo: boolean;\n    mobile: boolean;\n    verifyClaim: (blockNumber: BigNumber, miner: string, recipient: string, solution: BigNumber) => Promise<VerifyClaimType>,\n    claimReward: (blockNumber: BigNumber, miner: string, recipient: string, solution: BigNumber) => void,\n}\n\nfunction stopAll(runStatus: {[key: string]: RunStatusType}) {\n    runStatus && Object.keys(runStatus).forEach(bnStr => {\n        const rs = runStatus[bnStr]\n\n        if(rs.stopFn !== undefined) {\n            rs.stopFn()\n            rs.stopFn = undefined\n        }\n    })\n}\n\nexport const challengesRunStatus: {[address: string]: {[key: string]: RunStatusType}} = {}\nexport const Challenges: React.FC<ChallengesProps> = ({challenges, group, address, registeredBalances, demo, mobile, verifyClaim, claimReward}) => {\n    let runStatus = challengesRunStatus[address]\n    if(!runStatus) {\n        runStatus = {}\n        challengesRunStatus[address] = runStatus\n    }\n    const challengesMap = toChallengesMap(challenges, registeredBalances)\n\n    const [runStatusSnap, setRunStatusSnap] = useState({...runStatus})\n    const [currentAddress, setCurrentAddress] = useState(\"\")\n    const initChallenges: ChallengesType = {totalCnt: 0, indexes: [], blockNumbers: [], rewardUnits: [], challengeHashes: [], nexts: [], claimsCnt: [], claimed: []}\n    const [currentChallenges, setCurrentChallenges] = useState(initChallenges)\n\n    let mounted = true\n\n    const refresh = () => {\n\n        const _refresh = async () => {\n\n            if(mounted) {\n                if(currentAddress !== address) {\n                    stopAll(challengesRunStatus[currentAddress])\n\n                    setCurrentAddress(address)\n                    const nrn: {[key: string]: RunStatusType} = {}\n                    Object.keys(runStatus).forEach(bnStr => {\n                        const rs = runStatus[bnStr]\n                        const nrs = {...rs}\n                        nrn[bnStr] = nrs                            \n                    })\n                    setRunStatusSnap(nrn)\n                } else if(currentChallenges !== challenges) {\n                    // Reconcile challenges\n                    // First, stop and remove the run status for challenges that have been removed\n                    // Second, update difficulty in the run status\n                    Object.keys(runStatus).forEach(bnStr =>{\n                        const rs = runStatus[bnStr]\n                        if(rs.group === group) {\n                            const cmt = challengesMap[bnStr]\n                            if(cmt) {\n                                if(rs.targetDifficulty !== cmt.adjustedDifficulty) {\n                                    // Update the difficulty\n                                    rs.targetDifficulty = cmt.adjustedDifficulty\n                                    if(rs.solvedDifficulty >= rs.targetDifficulty) {\n                                        // Got it!\n                                        rs.solved = true\n                                        if(rs.stopFn) {\n                                            rs.stopFn()\n                                            rs.stopFn = undefined\n                                        }\n                                    }\n                                }\n                            } else {\n                                // Stop the job\n                                if(rs.stopFn) {\n                                    rs.stopFn()\n                                    rs.stopFn = undefined\n                                }\n                                delete runStatus[bnStr]\n                            }\n                        }\n                    })\n \n                    setCurrentChallenges(challenges)\n                    const nrn: {[key: string]: RunStatusType} = {}\n                    Object.keys(runStatus).forEach(bnStr => {\n                        const rs = runStatus[bnStr]\n                        const nrs = {...rs}\n                        nrn[bnStr] = nrs                            \n                    })\n                    setRunStatusSnap(nrn)\n                }\n            }\n        }\n\n        const _cleanup = () => {\n            mounted = false\n        }\n\n        _refresh()\n\n        return _cleanup\n    }\n\n    useEffect(refresh)\n\n    function findBalance(registeredBalances: RegisteredBalancesType, blockNumber: BigNumber) {\n        const cnt = registeredBalances.blockNumbers.length\n        for(let i = 0; i < cnt; i++) {\n            const bn = registeredBalances.blockNumbers[i]\n            const bal = registeredBalances.balances[i]\n            if(blockNumber.gte(bn)) {\n                return bal\n            }\n        }\n        return ZERO\n    }\n\n    function toChallengesMap(challenges: ChallengesType, registeredBalances: RegisteredBalancesType) {\n\n        const challengesMap: {[bnStr: string]: ChallengesMapType} = {}\n        challenges.blockNumbers.forEach((bn, i) =>{\n            const bnStr = bn.toHexString()\n            const challengeHash = challenges.challengeHashes[i]\n            if(challengesMap[bnStr]) {\n                throw new Error(\"Duplicate block number in challenges: \"+bnStr)\n            }\n\n            const balance = findBalance(registeredBalances, bn)\n            const generalDifficulty = MAX_CHALLENGE_DIFFICULTY(demo) - CHALLENGE_DIFFICULTY_STEP * (challenges.totalCnt - i - 1)\n            const addressDiscount = getWalletDifficultyDiscount(challengeHash, address, balance, TOKEN_DECIMALS)\n            const balanceDiscount = getBalanceDifficultyDiscount(balance, TOKEN_DECIMALS)\n            let adjustedDifficulty = generalDifficulty - addressDiscount - balanceDiscount\n            if(adjustedDifficulty < MIN_CHALLENGE_DIFFICULTY(demo)) {\n                adjustedDifficulty = MIN_CHALLENGE_DIFFICULTY(demo)\n            }\n\n            const claimsCnt = challenges.claimsCnt[i]\n            const claimed = challenges.claimed[i]\n            const ch = {\n                blockNumberHex: bnStr,\n                challengeHash,\n                generalDifficulty,\n                addressDiscount,\n                balance,\n                balanceDiscount,\n                adjustedDifficulty,\n                claimsCnt,\n                claimed,\n            }\n            challengesMap[bnStr] = ch\n        })\n    \n        return challengesMap\n    }\n    \n    const handleStartMining = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, blockNumber: BigNumber, challengeHash: string, address: string, difficulty: number) => {\n        e.preventDefault()\n\n        const bnStr = blockNumber.toHexString()\n        let rs = runStatus[bnStr]\n\n        if(!rs) {\n            rs = {\n                group,\n                blockNumberHex: bnStr,\n                challengeHash,\n                trials: 0,\n                targetDifficulty: difficulty,\n                solutionTrials: 0,\n                solvedDifficulty: 0,\n                solved: false,\n                timeMs: 0,\n                stopFn: undefined,\n            }\n            runStatus[bnStr] = rs\n        }\n\n        if(rs.stopFn) {\n            throw new Error(\"The solver is already running on block \"+bnStr)\n        }\n\n        const trials0 = rs.trials\n        const timeMs0 = rs.timeMs\n        const status = (trials: number, timeMs: number, solution?: BigNumber, solvedDifficulty?: number) => {\n            const rs = runStatus[bnStr]\n            rs.trials = trials0 + trials\n            rs.timeMs = timeMs0 + timeMs\n\n            if(solution) {\n                if(solvedDifficulty !== undefined && solvedDifficulty > rs.solvedDifficulty) {\n                    rs.solutionTrials = rs.trials\n                    rs.solution = solution\n                    rs.solvedDifficulty = solvedDifficulty\n                    if(rs.solvedDifficulty >= rs.targetDifficulty) {\n                        // Got it!\n                        rs.solved = true\n                        if(rs.stopFn) {\n                            rs.stopFn()\n                            rs.stopFn = undefined\n                        }\n                    }\n                }\n            }\n\n            const nrn = {...runStatus}\n            const nrs = {...rs}\n            nrn[bnStr] = nrs\n            setRunStatusSnap(nrn)\n        }\n\n        rs.stopFn = solve(blockNumber, challengeHash, address, rs.solvedDifficulty, status)\n\n        const nrn = {...runStatus}\n        nrn[bnStr] = {...rs}\n        setRunStatusSnap(nrn)\n    }\n\n    const handleStopMining = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, blockNumber: BigNumber) => {\n        e.preventDefault()\n\n        const bnStr = blockNumber.toHexString()\n        const rs = runStatus[bnStr]\n        if(!rs) {\n            throw new Error(\"The solver does not exist \"+bnStr)\n        }\n        if(rs.stopFn) {\n            rs.stopFn()\n            rs.stopFn = undefined\n        }\n\n        const nrn = {...runStatus}\n        const nrs = {...rs}\n        nrn[bnStr] = nrs\n        setRunStatusSnap(nrn)\n    }\n    \n    const handleClaimReward = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, blockNumber: BigNumber) => {\n        e.preventDefault()\n\n        const bnStr = blockNumber.toHexString()\n        const rs = runStatus[bnStr]\n        if(!rs) {\n            throw new Error(\"The solver does not exist \"+bnStr)\n        }\n\n        if(rs.solution) {\n            await claimReward(blockNumber, address, address, rs.solution);\n        }\n\n        const nrn = {...runStatus}\n        const nrs = {...rs}\n        nrn[bnStr] = nrs\n        setRunStatusSnap(nrn)\n    }\n    \n    return mobile ?\n    <table>\n        <thead>\n            <tr>\n                <th>\n                    N\n                </th>\n                <th>\n                    Block\n                </th>\n                <th style={{textAlign: \"left\"}}>\n                    YOUR<br/>Difficulty\n                </th>\n                <th>\n                    LUMI\n                </th>\n                <th>\n                    Claims\n                </th>\n                <th>\n                    Mining<br/>Progress\n                </th>\n                <th>\n                    Mining<br/>Time\n                </th>\n                <th>\n                    Mine\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            {challenges.blockNumbers.map((bn, i) => {\n                const challengeHash = challenges.challengeHashes[i]\n\n                const bnStr = bn.toHexString()\n                const cmt = challengesMap[bnStr]\n                const { adjustedDifficulty, claimsCnt, claimed } = cmt\n\n                const rs = runStatusSnap[bnStr]\n                let [ rewardsCnt, rewardUnits ] = getRewardUnits(challengeHash)\n                const rewardUnit = challenges.rewardUnits[i]\n                rewardsCnt = REWARDS_CNT_LIMIT(demo)\n\n                const progressTitle = (rs || \"\") && (rs.solved ? \"\"+rs.solvedDifficulty : rs.stopFn || rs.trials > 0 ? \"\"+rs.solvedDifficulty+\" / \"+adjustedDifficulty : \"\") \n                const progress = (rs || \"\") && (rs.solved ? 100 : rs.stopFn || rs.trials > 0? Math.floor(rs.solvedDifficulty * 100 / adjustedDifficulty) : \"\")\n\n                const startable = !(claimed || (rs && (rs.solved || rs.stopFn)))\n                const stopable = rs && rs.stopFn\n                const claimable = !claimed && rs && rs.solvedDifficulty >= adjustedDifficulty\n\n                const startFn = (e:any) => handleStartMining(e, bn, challengeHash, address, adjustedDifficulty)\n                const stopFn = (e: any) => handleStopMining(e, bn)\n                const claimFn = (e: any) => handleClaimReward(e, bn)\n\n                const title = startable ? \"Start Mining\" : stopable ? \"Stop Mining\" : claimable ? \"Claim\" : \"Done\"\n                const disabled = !startable && !stopable && !claimable\n                const onClick: any = startable ? startFn : stopable ? stopFn : claimable ? claimFn : null\n                const icon = startable ? \"play\" : stopable ? \"pause\" : claimable ? \"trophy\" : \"check\"\n                const style = startable ? {} : stopable ? {} : claimable ? {color: \"red\"} : {color: \"green\"}\n                return <tr key={i}>\n                    <td>{i+1}</td>\n                    <th>{bn.toString()}</th>\n                    <td style={{textAlign: \"left\"}}><Category cat={getDifficultyLabel(adjustedDifficulty)}>{adjustedDifficulty}{mobile ? \"\" : \" - \"+getDifficultyLabel(adjustedDifficulty)}</Category></td>\n                    <td>{rewardUnits*rewardUnit/1000}</td>\n                    <td>{claimsCnt}/{rewardsCnt}</td>\n                    <td>{progress === \"\" ? \"\" : <span title={progressTitle}><ProgressBar width=\"60px\" height=\"18px\" labelSize=\"10px\" labelColor=\"black\" bgColor=\"#BBDEFB\" labelAlignment=\"center\" animateOnRender={false} transitionTimingFunction=\"linear\" transitionDuration=\"500ms\" completed={progress}/></span>}</td>\n                    <td>{rs && (rs.timeMs > 0 ? \"\"+Math.floor(rs.timeMs / 1000).toLocaleString()+\"s\" : \"\")}</td>\n                    <td>\n                        <button title={title} style={style} disabled={disabled} onClick={onClick}><FontAwesomeIcon icon={icon}/></button>\n                    </td>\n                </tr>\n            })}\n        </tbody>\n    </table>\n    : <table>\n        <thead>\n            <tr>\n                <th>\n                    N\n                </th>\n                <th>\n                    Block<br/>Number\n                </th>\n                <th>\n                    Challenge Hash\n                </th>\n                {/* <th>\n                    Registered<br/>Balance\n                </th>\n                <th style={{textAlign: \"left\"}}>\n                    General<br/>Difficulty\n                </th>\n                <th>\n                    Wallet<br/>Discount\n                </th>\n                <th>\n                    Balance<br/>Discount\n                </th> */}\n                <th>\n                    YOUR<br/>Discount\n                </th>\n                <th style={{textAlign: \"left\"}}>\n                    YOUR<br/>Difficulty\n                </th>\n                <th>\n                    Reward<br/>Tokens\n                </th>\n                <th>\n                    Claims\n                </th>\n                <th>\n                    Status\n                </th>\n                <th>\n                    Mining<br/>Progress\n                </th>\n                <th>\n                    Trials\n                </th>\n                <th>\n                    Time\n                </th>\n                <th>\n                    Mine/Verify/Claim\n                </th>\n                <th>\n                    GoMiner<br/>Command\n                </th>\n                <th>\n                    N\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            {challenges.blockNumbers.map((bn, i) => {\n                const challengeHash = challenges.challengeHashes[i]\n                const hash = challengeHash.substr(0, 8)+\"-\"+challengeHash.substr(challengeHash.length - 10, 10)\n\n                const bnStr = bn.toHexString()\n                const cmt = challengesMap[bnStr]\n                // const { generalDifficulty, addressDiscount, balance, balanceDiscount } = cmt\n                const { addressDiscount, balanceDiscount } = cmt\n                const { adjustedDifficulty, claimsCnt, claimed } = cmt\n\n                const rs = runStatusSnap[bnStr]\n                const claimable = !claimed && rs && rs.solvedDifficulty >= adjustedDifficulty\n                // const verifiable = !claimed && rs && rs.solvedDifficulty > 0\n                let [ rewardsCnt, rewardUnits ] = getRewardUnits(challengeHash)\n                const rewardUnit = challenges.rewardUnits[i]\n                rewardsCnt = REWARDS_CNT_LIMIT(demo)\n\n                const statusTitle = claimed ? \"Claimed\" : rs && (rs.solved ? \"Solved (now you need to claim)\" : rs.stopFn ? \"Mining\" : rs.trials > 0 ? \"Stopped\" : \"\")\n                const statusIcon = claimed ? \"check\" : (rs || \"\") && (rs.solved ? \"check\" : rs.stopFn ? \"running\" : rs.trials > 0 ? \"stop\" : \"\")\n                const statusColor = claimed ? \"green\" : (rs || \"\") && (rs.solved ? \"red\" : rs.stopFn ? \"red\" : rs.trials > 0 ? \"red\" : \"\")\n                const progressTitle = (rs || \"\") && (rs.solved ? \"\"+rs.solvedDifficulty : rs.stopFn || rs.trials > 0 ? \"\"+rs.solvedDifficulty+\" / \"+adjustedDifficulty : \"\") \n                const progress = (rs || \"\") && (rs.solved ? 100 : rs.stopFn || rs.trials > 0? Math.floor(rs.solvedDifficulty * 100 / adjustedDifficulty) : \"\")\n\n                const gominer = \"./gominer -a \"+address+\" -b \"+bn.toString()+\" -c \"+challengeHash+\" -d \"+adjustedDifficulty.toString()+\" -t 2\"\n\n                return <tr key={i}>\n                    <td>{i+1}</td>\n                    <th>{bn.toString()}</th>\n                    <td><code>{hash}</code></td>\n                    {/* <td>{formatBalance(balance, TOKEN_DECIMALS)}</td>\n                    <td style={{textAlign: \"left\"}}>{generalDifficulty} - {getDifficultyLabel(generalDifficulty)}</td>\n                    {addressDiscount > 0 ? <td>{addressDiscount}</td> : <td/>}\n                    {balanceDiscount > 0 ? <td>{balanceDiscount}</td> : <td/>} */}\n                    {addressDiscount > 0 || balanceDiscount > 0 ? <td>{addressDiscount+balanceDiscount}</td> : <td/>}\n                    <td style={{textAlign: \"left\"}}><Category cat={getDifficultyLabel(adjustedDifficulty)}>{adjustedDifficulty} - {getDifficultyLabel(adjustedDifficulty)}</Category></td>\n                    <td>{rewardUnits*rewardUnit/1000}</td>\n                    <td>{claimsCnt}/{rewardsCnt}</td>\n                    <td>{statusIcon && <FontAwesomeIcon title={statusTitle} color={statusColor} icon={statusIcon}/>}</td>\n                    <td>{progress === \"\" ? \"\" : <span title={progressTitle}><ProgressBar width=\"60px\" height=\"18px\" labelSize=\"10px\" labelColor=\"black\" bgColor=\"#BBDEFB\" labelAlignment=\"center\" animateOnRender={false} transitionTimingFunction=\"linear\" transitionDuration=\"500ms\" completed={progress}/></span>}</td>\n                    <td>{rs && (rs.solved ? rs.solutionTrials.toLocaleString() : rs.trials > 0 ? rs.trials.toLocaleString() : \"\")}</td>\n                    <td>{rs && (rs.timeMs > 0 ? \"\"+Math.floor(rs.timeMs / 1000).toLocaleString()+\" s\" : \"\")}</td>\n                    <td>\n                        <button title=\"Start Mining\" disabled={!!(claimed || (rs && (rs.solved || rs.stopFn)))} onClick={(e) => handleStartMining(e, bn, challengeHash, address, adjustedDifficulty)}><FontAwesomeIcon icon=\"play\"/></button>\n                        <button title=\"Stop Mining\" disabled={!(rs && rs.stopFn)} onClick={(e) => handleStopMining(e, bn)}><FontAwesomeIcon icon=\"pause\"/></button>\n                        {/* <button disabled={!verifiable} onClick={(e) => handleVerifyClaim(e, bn)}>&#x2714;</button> */}\n                        <button title=\"Claim Your Reward\" style={{color: claimable ? \"red\" : \"\"}} disabled={!claimable} onClick={(e) => handleClaimReward(e, bn)}><FontAwesomeIcon icon=\"trophy\"/></button>\n                    </td>\n                    <td>\n                        <CopyToClipboard text={gominer}>\n                            <button title=\"Copy GoMiner Command\" disabled={claimed}><FontAwesomeIcon icon={[\"far\", \"copy\"]}/></button>\n                        </CopyToClipboard>\n                    </td>\n                    <td>{i+1}</td>\n                </tr>\n            })}\n        </tbody>\n    </table>\n}\n","/* https://htmlcolorcodescom/color-chart/material-design-color-chart/   \n    \nRed #FFCDD2\nPink    #F8BBD0\nPurple  #E1BEE7\nDeep Purple #D1C4E9\nIndigo  #C5CAE9\nBlue    #BBDEFB\nLight Blue  #B3E5FC\nCyan    #B2EBF2\nTeal    #B2DFDB\nGreen   #C8E6C9\nLight Green #DCEDC8\nLime    #F0F4C3\nYellow  #FFF9C4\nAmber   #FFECB3\nOrange  #FFE0B2\nDeep Orange #FFCCBC\nBrown   #D7CCC8\nGrey    #F5F5F5\nBlue Grey   #CFD8DC */\n\nexport default {\nwhite: {\n    backgroundColor: \"white\",\n},\n\nred: {\n    backgroundColor: \"#FFCDD2\",\n},\n\npink: {\n    backgroundColor: \"#F8BBD0\",\n},\n\npurple: {\n    backgroundColor: \"#E1BEE7\",\n},\n\ndeepPurple: {\n    backgroundColor: \"#D1C4E9\",\n},\n\nindigo: {\n    backgroundColor: \"#C5CAE9\",\n},\n\nblue: {\n    backgroundColor: \"#BBDEFB\",\n},\n\nlightBlue: {\n    backgroundColor: \"#B3E5FC\",\n},\n\nblack: {\n    backgroundColor: \"#000000\",\n    color: \"white\",\n},\n\ncyan: {\n    backgroundColor: \"#B2EBF2\",\n},\n\nteal: {\n    backgroundColor: \"#B2DFDB\",\n},\n\ngreen: {\n    backgroundColor: \"#C8E6C9\",\n},\n\nlightGreen: {\n    backgroundColor: \"#DCEDC8\",\n},\n\nyellow: {\n    backgroundColor: \"#FFF9C4\",\n},\n\namber: {\n    backgroundColor: \"#FFECB3\",\n},\n\norange: {\n    backgroundColor: \"#FFE0B2\",\n},\n\nbrown: {\n    backgroundColor: \"#D7CCC8\",\n},\n\ndarkGrey: {\n    backgroundColor: \"#D8D8D8\",\n},\n\ngrey: {\n    backgroundColor: \"#E8E8E8\",\n},\n\nlightgrey: {\n    backgroundColor: \"#F5F5F5\",\n},\n\nblueGrey: {\n    backgroundColor: \"#CFD8DC\",\n},\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { LuminaTokenContext as TokenContext } from \"../hardhat/SymfoniContext\"\nimport { LuminaRecordsContext as RecordsContext } from \"../hardhat/SymfoniContext\"\nimport { LuminaTrusteeContext as TrusteeContext } from \"../hardhat/SymfoniContext\"\nimport { LuminaAdminContext as AdminContext } from \"../hardhat/SymfoniContext\"\nimport { LuminaMarketingContext as MarketingContext } from \"../hardhat/SymfoniContext\"\nimport { ProgressContractLockerContext as LockerContext } from \"../hardhat/SymfoniContext\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport { Web3Provider } from \"@ethersproject/providers\"\nimport { ContractTransaction } from \"@ethersproject/contracts\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { TOKEN_SYMBOL, CHALLENGES_LIMIT, TOKEN_DECIMALS } from \"./Parameters\"\nimport { getReasonLabel } from \"./Rules\"\nimport Address from \"./Address\"\nimport IconButton from \"./IconButton\"\nimport CommisionSetting from \"./CommisionSetting\"\nimport Difficulties from \"./Difficulties\"\nimport MetamaskConnectButton, { isMetamaskConnected } from \"./MetamaskConnectButton\"\n\nimport { ChallengesType, Challenges, RegisteredBalancesType } from \"./Challenges\"\nimport { formatBalance, ZERO } from \"../utils/bigNumber\"\nimport { verifyAddress, verifyHex256 } from \"../utils/hex\"\nimport Colors from \"../utils/colors\"\n\ninterface Props { }\n\nconst GoMiner = false\nconst symbol = TOKEN_SYMBOL\nconst tokenDecimals = TOKEN_DECIMALS\n\nexport const LuminaToken: React.FC<Props> = () => {\n    const [err, setErr] = useState(\"\")\n    const [blockNumber, setBlockNumber] = useState(0)\n    const [address, setAddress] = useState(\"\")\n    const [totalSupply, setTotalSupply] = useState(ZERO)\n    const [balance, setBalance] = useState(ZERO)\n    const [ownerAddress, setOwnerAddress] = useState(\"\")\n    const [paused, setPaused] = useState(false)\n    const [challengesAllowance, setChallengesAllowance] = useState(0)\n    const [useEffectCnt, setUseEffectCnt] = useState(0)\n    const [txCnt, setTxCnt] = useState(0)\n    const initRegisteredBalances: RegisteredBalancesType = {balances: [], blockNumbers: []}\n    const [registeredBalances, setRegisteredBalances] = useState(initRegisteredBalances)\n    const initChallenges: ChallengesType = {totalCnt: 0, indexes: [], blockNumbers: [], rewardUnits: [], challengeHashes: [], nexts: [], claimsCnt: [], claimed: []}\n    const [basicChallenges, setBasicChallenges] = useState(initChallenges)\n    const [premiumChallenges, setPremiumChallenges] = useState(initChallenges)\n    const [totalLockedSupply, setTotalLockedBalance] = useState(ZERO)\n    const [lockedBalance, setLockedBalance] = useState(ZERO)\n    const [lockedAvailableBalance, setLockedAvailableBalance] = useState(ZERO)\n    const [claimedTokens, setClaimedTokens] = useState(ZERO)\n    const [availableTokens, setAvailableTokens] = useState(ZERO)\n    const [network, setNetwork] = useState({chainId: 0, name: 'unknown'})\n    const [timerCnt, setTimerCnt] = useState(0)\n    const [demo, setDemo] = useState(false)\n    const [goMiner, setGoMiner] = useState(\"\")\n    const [goMinerErr, setGoMinerErr] = useState(\"\")\n    const [commision, setCommision] = useState(0)\n    const [balanceMatic, setBalanceMatic] = useState(BigNumber.from(0))\n\n    const token = useContext(TokenContext).instance\n    const records = useContext(RecordsContext).instance\n    const trustee = useContext(TrusteeContext).instance\n    const admin = useContext(AdminContext).instance\n    const marketing = useContext(MarketingContext).instance\n    const locker = useContext(LockerContext).instance\n\n    const provider = window.ethereum ? new Web3Provider(window.ethereum) : null\n    const signer = provider && provider.getSigner()\n\n    const mobile = true\n\n    let eerr = \"\"\n    if(!window.ethereum) {\n        eerr = \"Please install the MetaMask plugin\"\n    }\n\n    async function getNetwork() {\n        return provider && provider.detectNetwork()\n    }\n\n    // Listen for events\n    // if(records) {\n    //     console.log(\"records on\")\n    //     records.on(\"RegisteredBalance\", (wallet, blockNumber, balance) => {\n    //         console.log(\"RegisteredBalance\", wallet, blockNumber, balance)\n    //     })\n    //     records.on(\"Commision\", (wallet, commisionPrc) => {\n    //         console.log(\"Commision\", wallet, commisionPrc)\n    //     })\n    // }\n\n    let mounted = true\n    const refresh = () => {\n        const _refresh = async () => {\n            const _network = await getNetwork() || network\n            if(network.chainId !== _network.chainId) {\n                setNetwork({chainId: _network.chainId, name: _network.name})\n            }\n\n            if(!isMetamaskConnected()) {\n                return\n            }\n\n            if (!token) {\n                return null\n            }\n            if(!records) {\n                return null\n            }\n            if(!trustee) {\n                return null\n            }\n            if(!admin) {\n                return null\n            }\n            if(!marketing) {\n                return null\n            }\n            if(!locker) {\n                return null\n            }\n\n            const t = token\n\n            try {\n            const _paused = await trustee.paused()\n\n            const _ownerAddress = await trustee.owner()\n\n            const _registeredBalances = await records.getBalances()\n\n            const _totalSupply = await t.totalSupply()\n\n            const _challengesAllowance = await admin.getChallengesAllowance()\n\n            let _address\n            try {\n                _address = signer ? (await signer.getAddress()).toString() : \"\"\n            } catch(ex) {\n                _address = \"\"\n            }\n\n            const _commision = _address ? await records.getCommision(_address) : 0\n\n            const _balance = _address ? await t.balanceOf(_address) : ZERO\n            const _balanceMatic = signer ? await signer.getBalance() : BigNumber.from(0)\n\n            const _blockNumber = provider ? await provider.getBlockNumber() : 0\n\n            const _claimedTokens = await trustee.getClaimedTokens()\n\n            const _availableTokens = await t.balanceOf(trustee.address)\n\n            if(mounted) {\n                if(useEffectCnt === 0) {\n                    const _demo = await trustee.DEMO()\n                    setDemo(_demo)\n                }\n                if(\n                    paused !== _paused ||\n                    ownerAddress !== _ownerAddress ||\n                    // registeredBalances !== _registeredBalances ||\n                    address !== _address ||\n                    commision !== _commision ||\n                    !totalSupply.eq(_totalSupply) ||\n                    _challengesAllowance !== challengesAllowance ||\n                    !balance.eq(_balance) ||\n                    !balanceMatic.eq(_balanceMatic) ||\n                    blockNumber !== _blockNumber ||\n                    !claimedTokens.eq(_claimedTokens) ||\n                    !availableTokens.eq(_availableTokens)\n                ) {\n                    setPaused(_paused)\n                    setOwnerAddress(_ownerAddress)\n                    setRegisteredBalances(_registeredBalances)\n                    setAddress(_address)\n                    setCommision(_commision)\n                    setTotalSupply(_totalSupply)\n                    setChallengesAllowance(_challengesAllowance)\n                    setBalance(_balance)\n                    setBalanceMatic(_balanceMatic)\n                    setBlockNumber(_blockNumber)\n                    setClaimedTokens(_claimedTokens)\n                    setAvailableTokens(_availableTokens)\n                    setUseEffectCnt(useEffectCnt + 1)\n                    await readAllChallenges()\n                }\n\n                const l = locker\n                const _lockedBalance = _address ? await l.balanceOf(_address) : ZERO\n                const _lockedAvailableBalance = _address ? await l.availableBalanceOf(_address) : ZERO\n                const _totalLockedSupply = _address ? await l.totalLockedBalance() : ZERO\n\n                if(mounted) {\n                    if(\n                        lockedBalance !== _lockedBalance ||\n                        lockedAvailableBalance !== _lockedAvailableBalance ||\n                        totalLockedSupply !== _totalLockedSupply\n                    ) {\n                        setLockedBalance(_lockedBalance);\n                        setLockedAvailableBalance(_lockedAvailableBalance);\n                        setTotalLockedBalance(_totalLockedSupply);\n                    }\n                }\n            }\n            } catch(e) {\n                const ex: any = e\n                const err = ex.toString()\n                let msg = ex.data && ex.data.message ? ex.data.message : ex.message ? ex.message : ex.toString()\n                if(err.startsWith(\"Error: call revert exception \")) {\n                    msg = \"No smart contract, please make sure MetaMask is pointing to the MATIC network\"\n                    msg += \" \" + err\n                } else if(err.startsWith(\"Error: \")) {\n                    msg = err.substring(7)\n                }\n                setErr(msg)\n            }\n        }\n\n        const tm = setTimeout(()=>{\n            if(mounted) {\n                setTimerCnt(timerCnt+1)\n            }\n        }, 5000)\n\n        const _cleanup = () => {\n            mounted = false\n            clearTimeout(tm)\n        }\n\n        _refresh()\n\n        return _cleanup\n    }\n\n    async function runTx<T> (\n        contract: T|undefined,\n        txf: (t: T) => Promise<ContractTransaction>,\n        f?: (t: T) => void\n    ) {\n        setErr(\"\")\n        try {\n            const t = contract\n            if (!t) {\n                throw Error(\"Contract instance not ready\")\n            }\n            const tx = await txf(t)\n            const cr = await tx.wait()\n            if(cr.confirmations <= 0) {\n                throw new Error(\"No confirmations in contract receipt\")\n            }\n            if(f) {\n                f(t)\n            }\n            setTxCnt(txCnt + 1)\n        } catch(e) {\n            const ex: any = e\n            let msg = ex.data && ex.data.message ? ex.data.message : ex.message ? ex.message : ex.toString()\n            // setErr(msg)\n            const err0 = \"VM Exception while processing transaction: revert \"\n            if(msg && msg.startsWith(err0)) {\n                msg = msg.substring(err0.length)\n            }\n            window.alert(msg)\n            return false\n        }\n        return true\n    }\n\n    const handlePause = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        runTx(trustee, t => t.pause())\n    }\n\n    const handleUnpause = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        runTx(trustee, t => t.unpause())\n    }\n\n    const readBasicChallenges = async () => {\n        if (!admin) return\n\n        const basicCha = await admin.readChallenges(false, CHALLENGES_LIMIT)\n        const {totalCnt, indexes, blockNumbers, rewardUnits, challengeHashes, nexts, claimsCnt, claimed} = basicCha\n        const ch: string[] = challengeHashes.map(n => n.toHexString())\n        setBasicChallenges({totalCnt, indexes, blockNumbers, rewardUnits, challengeHashes: ch, nexts, claimsCnt, claimed})\n    }\n\n    const readPremiumChallenges = async () => {\n        if (!admin) return\n\n        const premiumCha = await admin.readChallenges(true, CHALLENGES_LIMIT)\n        const {totalCnt, indexes, blockNumbers, rewardUnits, challengeHashes, nexts, claimsCnt, claimed} = premiumCha\n        const ch: string[] = challengeHashes.map(n => n.toHexString())\n        setPremiumChallenges({totalCnt, indexes, blockNumbers, rewardUnits, challengeHashes: ch, nexts, claimsCnt, claimed})\n    }\n\n    const readAllChallenges = async () => {\n        readBasicChallenges()\n        readPremiumChallenges()\n    }\n\n    const handleAddChallenges = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n\n        await runTx(admin, t => t.addChallenges(challengesAllowance))\n        readAllChallenges()\n    }\n\n    const handleLockBalance = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        const lockerAddress: any = locker && locker.address\n        await runTx(token, t => t.approve(lockerAddress, balance))\n        await runTx(locker, l => l.deposit(balance))\n    }\n\n    const handleWithdrawBalance = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        await runTx(locker, l => l.withdraw(lockedAvailableBalance))\n    }\n\n    const handleRegisterBalance = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        await runTx(token, t => t.registerBalance())\n    }\n\n    const handleClearClaim = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        setGoMiner(\"\")\n        setGoMinerErr(\"\")\n    }\n\n    const parseClaim = (goMiner: string) => {\n        let valid\n        try {\n            const claim: any = JSON.parse(goMiner)\n            const { blockNumber, minerAddress: miner, address: recipient, solution } = claim\n\n\n            if(\n                typeof(blockNumber) === \"number\" &&\n                typeof(miner) === \"string\" &&\n                typeof(recipient) === \"string\" &&\n                typeof(solution) === \"string\" &&\n                blockNumber >= 0 &&\n                verifyAddress(miner) &&\n                verifyAddress(recipient) &&\n                verifyHex256(solution)\n            ) {\n                valid = true\n                setGoMinerErr(\"\")\n            } else {\n                valid = false\n                setGoMinerErr(\"Invalid GoMiner Solution String\")\n            }\n            return { valid, \n                blockNumber: BigNumber.from(blockNumber),\n                miner,\n                recipient,\n                solution: BigNumber.from(solution),\n            }\n        } catch(ex) {\n            if(ex instanceof Error) {\n                setGoMinerErr(ex.message)\n            }\n            valid = false   \n        }\n\n        return { valid, blockNumber: BigNumber.from(0), miner: \"\", recipient: \"\", solution: BigNumber.from(0) }\n    }\n\n    const handleVerifyClaim = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n\n        const { valid, blockNumber, miner, recipient, solution } = parseClaim(goMiner)\n        if(valid) {\n            const { rewardUnits, reason } = await verifyClaim(blockNumber, miner, recipient, solution)\n            verifyAlert(blockNumber, reason, rewardUnits)\n        } else {\n            window.alert(\"Invalid GoMiner Solution String\")\n        }\n    }\n\n    const handleClaim = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n\n        const { valid, blockNumber, miner, recipient, solution } = parseClaim(goMiner)\n        if(valid) {\n            const success = await claimReward(blockNumber, miner, recipient, solution)\n            if(success) {\n                setGoMiner(\"\")\n                readAllChallenges()\n            }\n        } else {\n            window.alert(\"Invalid GoMiner Solution String\")\n        }\n    }\n\n    const handleGoMinerChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault()\n        setGoMiner(e.target.value.trim())\n    }\n\n    const verifyClaim = async (blockNumber: BigNumber, miner: string, recipient: string, solution: BigNumber) => {\n        if (!trustee) {\n            throw new Error(\"Couldn't call trustee contract\")\n        }\n        if(paused) {\n            return { rewardUnits: 0, reason: 101, premium: false, rewardsCnt: 0 }\n        }\n        try {\n            const { rewardUnits, reason, premium, rewardsCnt } = await trustee.verifyClaim(blockNumber, miner, recipient, solution)\n\n            return { rewardUnits, reason, premium, rewardsCnt }\n        } catch(ex) {\n            return { rewardUnits: 0, reason: 100, premium: false, rewardsCnt: 0 }\n        }\n    }\n\n    const verifyAlert = (blockNumber: BigNumber, reason: number, rewardUnits: number) => {\n        if(reason === 0) {\n            window.alert(\"Claim Verification on block #\"+blockNumber.toString()+\"\\nStatus: SUCCESS\\nReward Amount: \"+rewardUnits / 1000+\" LUMI\")\n        } else {\n            window.alert(\"Claim Verification on block #\"+blockNumber.toString()+\"\\nStatus: FAILED\\nReason: \" + getReasonLabel(reason))\n        }\n    }\n\n    const claimAlert = (blockNumber: BigNumber, reason: number, rewardUnits: number) => {\n        if(reason === 0) {\n        } else {\n            window.alert(\"Claim on block #\"+blockNumber.toString()+\"\\nStatus: FAILED\\nReason: \" + getReasonLabel(reason))\n        }\n    }\n\n    const claimReward = async (blockNumber: BigNumber, miner: string, recipient: string, solution: BigNumber) => {\n        const { rewardUnits, reason, premium } = await verifyClaim(blockNumber, miner, recipient, solution)\n\n        if(reason === 0) {\n            const success = await runTx(trustee, t => t.claimReward(blockNumber, miner, recipient, solution))\n            if(success) {\n                if(premium) {\n                    readPremiumChallenges()\n                } else {\n                    readBasicChallenges()\n                }\n            }\n            return true\n        }\n        claimAlert(blockNumber, reason, rewardUnits)\n        return false\n    }\n\n    async function handleSetCommision(commision: number) {\n        if (!records) {\n            throw new Error(\"Couldn't call records contract\")\n        }\n        setCommision(commision)\n        const success = await runTx(records, t => t.setCommision(commision))\n        if(success) {\n            setCommision(commision)\n        } else {\n            window.alert(\"Could not change commision\")\n        }\n    }\n\n    const owner = address === ownerAddress\n\n    useEffect(refresh, [timerCnt])\n\n    const SmallLogo = () => <img width={24} alt=\"\" src=\"logo256.png\"/>\n    \n    const chainId = network.chainId\n    const networkName = chainId === 31337 ? \"HARDHAT\" : chainId === 80001 ? \"MUMBAI\": network.name.toUpperCase()\n    const faucetUrl = chainId === 31337 ? \"https://matic.supply/\" : chainId === 80001 ? \"https://faucet.polygon.technology/\": \"https://matic.supply/\"\n    const tradeUrl = chainId === 31337 ? \"https://app.uniswap.org/#/pool?chain=polygon_mumbai\" : chainId === 80001 ? \"https://app.uniswap.org/#/pool?chain=polygon_mumbai\": \"https://app.uniswap.org/#/pool?chain=polygon\"\n\n    return <div>\n        {(err||eerr) && (err||eerr) !== \"Internal JSON-RPC error.\" ? <h2 style={Colors.red}>ERROR: {err||eerr}</h2> : null}\n        {paused ? <h2 style={{...Colors.red, margin: \"3px\"}}>The Smart Contract Is PAUSED<br/>Please Wait Until it Resumes</h2> : null}\n        <p/>\n        <h2 style={{color: chainId === 137 ? \"black\" : \"red\"}}><span style={{fontWeight: \"bold\"}}>Network:</span> {networkName} ({chainId})</h2>\n        {demo ? <h2 style={{color: \"red\"}}>DEMO MODE</h2> : null}\n        <h2>LUMINA Coins</h2>\n        <p title=\"The address of the Lumina ERC20 coin contract\">\n            <span style={{fontWeight: \"bold\"}}>Contract:</span>\n            &nbsp;\n            <Address chainId={chainId}>{token ? token.address : \"\"}</Address>\n        </p>\n        {!address ? null : <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <tbody>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Total Supply:</th>\n                <td style={{textAlign: \"right\"}}>\n                    {formatBalance(totalSupply, tokenDecimals)} {symbol}\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Locked:</th>\n                <td style={{textAlign: \"right\"}}>\n                    {formatBalance(totalLockedSupply, tokenDecimals)} {symbol}\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Mined:</th>\n                <td style={{textAlign: \"right\"}}>\n                    {formatBalance(claimedTokens, tokenDecimals)} {symbol}\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Available:</th>\n                <td style={{textAlign: \"right\"}}>\n                    {formatBalance(availableTokens, tokenDecimals)} {symbol}\n                </td>\n            </tr>\n            </tbody>\n        </table>}\n        <p/>\n        <SmallLogo/>\n        <h2>YOUR Wallet</h2>\n        <p title=\"The adddress of your wallet, currently connected to Metamask\">\n            {address ? <span style={{fontWeight: \"bold\"}}>\n                Wallet:\n                &nbsp;\n                <Address chainId={chainId}>{address}</Address>\n            </span> : <MetamaskConnectButton/>}\n        </p>\n        {!address ? null : <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <tbody>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Balance:</th>\n                <td style={{textAlign: \"left\", fontWeight: \"bold\"}}>\n                    {formatBalance(balance, tokenDecimals)} {symbol}\n                    &nbsp;{<IconButton url={tradeUrl}><FontAwesomeIcon icon=\"shopping-cart\"/></IconButton>}\n                </td>\n                <td>\n                    {balance.gte(BigNumber.from(10).pow(tokenDecimals+5)) ? <button disabled={paused} onClick={(e) => handleLockBalance(e)}>Lock Balance</button> : null}\n                    &nbsp;{balance.gt(ZERO)?<button title=\"Register Balance\" disabled={paused} onClick={(e) => handleRegisterBalance(e)}><FontAwesomeIcon icon=\"share-square\"/></button>:null}\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>MATIC:</th>\n                <td style={{textAlign: \"left\"}}>\n                    {formatBalance(balanceMatic, tokenDecimals)}\n                    &nbsp;MATIC\n                    {balanceMatic.eq(0) ? <span title={\"You need MATIC to claim LUMI rewards...\\nClick the link icon to open MATIC faucet at \"+faucetUrl}>\n                        &nbsp;\n                        <FontAwesomeIcon color=\"red\" icon=\"exclamation-triangle\"/>\n                        <IconButton url={faucetUrl}><FontAwesomeIcon  color=\"red\" icon=\"external-link-alt\"/></IconButton>\n                    </span> : null}\n                </td>\n                <td>\n                </td>\n            </tr>\n            {registeredBalances.blockNumbers.length > 0 ? <tr>\n                <th style={{textAlign: \"right\"}}>Registered:</th>\n                <td style={{textAlign: \"left\"}}>{formatBalance(registeredBalances.balances[0], tokenDecimals)} {symbol}</td>\n                <td/>\n            </tr> : null}\n            {lockedBalance.gt(0) ? <tr>\n                <th style={{textAlign: \"right\"}}>Locked:</th>\n                <td style={{textAlign: \"left\"}}>{formatBalance(lockedBalance, tokenDecimals)} {symbol}</td>\n            </tr> : null}\n            {lockedAvailableBalance.gt(0) ? <tr>\n                <th style={{textAlign: \"right\"}}>Withdrawable:</th>\n                <td style={{textAlign: \"left\"}}>\n                    {formatBalance(lockedAvailableBalance, tokenDecimals)} {symbol}\n                    &nbsp;<button disabled={paused} onClick={(e) => handleWithdrawBalance(e)}>Withdraw</button>\n                </td>\n            </tr> : null}\n            {address ? <tr title={\"Portion of reward you are willing to share with any miner,\\nwho would claim mine a reward for the benefit of your wallet.\\n\\nAllowed values: 0% or within range [10%-90%].\\n\\nThe default value is 22% but you can change it at any time.\"}>\n                <th style={{textAlign: \"right\"}}>Commision:</th>\n                <td style={{textAlign: \"left\"}}><CommisionSetting commision={commision} setCommision={handleSetCommision}/></td>\n                <td style={{textAlign: \"left\"}}><FontAwesomeIcon icon=\"info\"/></td>\n            </tr> : null}\n            </tbody>\n        </table>}\n        { !address ? null : <>\n        <p/>\n        <SmallLogo/>\n        {demo ? <h2 style={{color: \"red\"}}>DEMO MODE</h2> : null}\n        <h2>Premium Challenges ({premiumChallenges.blockNumbers.length}){paused || challengesAllowance <= 0 ? null : <>&nbsp;<button title=\"Add More Challenges\" disabled={paused || challengesAllowance <= 0} onClick={(e) => handleAddChallenges(e)}><FontAwesomeIcon icon=\"plus\"/>{challengesAllowance}</button></>}</h2>\n        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <tbody>\n            <tr>\n                <td>\n                    <Challenges challenges={premiumChallenges} group=\"premium\" address={address} registeredBalances={registeredBalances} demo={demo} mobile={mobile} verifyClaim={verifyClaim} claimReward={claimReward}/>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n        <p/>\n        <SmallLogo/>\n        {demo ? <h2 style={{color: \"red\"}}>DEMO MODE</h2> : null}\n        <h2>Regular Challenges ({basicChallenges.blockNumbers.length}){paused || challengesAllowance <= 0 ? null : <>&nbsp;<button title=\"Add More Challenges\" disabled={paused || challengesAllowance <= 0} onClick={(e) => handleAddChallenges(e)}><FontAwesomeIcon icon=\"plus\"/>{challengesAllowance}</button></>}</h2>\n        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <tbody>\n            <tr>\n                <td>\n                    <Challenges challenges={basicChallenges} group=\"basic\" address={address} registeredBalances={registeredBalances} demo={demo} mobile={mobile} verifyClaim={verifyClaim} claimReward={claimReward}/>\n                </td>\n                </tr>\n            <tr>\n                <td><p/></td>\n            </tr>\n            </tbody>\n        </table>\n        <p/>\n        <SmallLogo/>\n        <Difficulties/>\n        {GoMiner ? <>\n        <p/>\n        <SmallLogo/>\n        <h2>Lumina Coin GoMiner</h2>\n        {mobile ? null : <p>Download GoMiner\n            &nbsp;\n            <a href=\"/downloads/gominer-linux-amd64\" download=\"gominer\">\n                Linux\n            </a>\n            &nbsp;&bull;&nbsp;\n            <a href=\"/downloads/gominer-linux-amd64\" download=\"gominer\">\n                Linux arm64\n            </a>\n            &nbsp;&bull;&nbsp;\n            <a href=\"/downloads/gominer.exe\" download=\"gominer.exe\">\n                Windows\n            </a>\n            &nbsp;&bull;&nbsp;\n            <a href=\"/downloads/gominer-macos-amd64.exe\" download=\"gominer\">\n                Mac OS\n            </a>\n            &nbsp;&bull;&nbsp;\n            <a href=\"/downloads/gominer-macos-arm64.exe\" download=\"gominer\">\n                Mac OS M1\n            </a>\n        </p>}\n        <form>\n            <input type=\"text\" size={25} value={goMiner} placeholder=\"paste GoMiner solution here ...\" onChange={e => handleGoMinerChange(e)}/>\n            <button title=\"Clear\" disabled={!goMiner} onClick={(e) => handleClearClaim(e)}><FontAwesomeIcon icon=\"recycle\"/></button>\n            <button title=\"Verify\" disabled={!goMiner} onClick={(e) => handleVerifyClaim(e)}><FontAwesomeIcon icon=\"check\"/></button>\n            <button title=\"Claim\" style={{color: goMiner ? \"red\" : \"\"}} disabled={!goMiner} onClick={(e) => handleClaim(e)}><FontAwesomeIcon icon=\"trophy\"/></button>\n        </form>\n        {goMinerErr ? <h2 style={Colors.red}>ERROR: {goMinerErr}</h2> : null}\n        </> : null }\n\n        {registeredBalances.blockNumbers.length > 0 ? <>\n        <p/>\n        <SmallLogo/>\n        <h2>Registered Balances</h2>\n        <p/>\n        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <thead>\n                <tr>\n                    <th style={{textAlign: \"right\"}}>Balance</th>\n                    <th>Since Block</th>\n                </tr>\n            </thead>\n            <tbody>\n                {registeredBalances.balances\n                .slice(0, registeredBalances.blockNumbers.length)\n                .map((balance, i) => {\n                    const blockNumber = registeredBalances.blockNumbers[i]\n                    return <tr key={i}>\n                        <td>{formatBalance(balance, tokenDecimals)} {symbol}</td>\n                        <td>{blockNumber.toString()}</td>\n                    </tr>\n                })}\n            </tbody>\n        </table>\n        </> : balance.gte(BigNumber.from(10).pow(tokenDecimals-3)) ? <p>Please register your current balance to be eligible for additional benefits</p> : null}\n        </>}\n        <p/>\n        <SmallLogo/>\n        <h2>Contracts</h2>\n        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <tbody>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Token:</th>\n                <td style={{textAlign: \"left\"}}>\n                <Address chainId={chainId}>{token ? token.address : \"\"}</Address>\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Records:</th>\n                <td style={{textAlign: \"left\"}}>\n                <Address chainId={chainId}>{records ? records.address : \"\"}</Address>\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Trustee:</th>\n                <td style={{textAlign: \"left\"}}>\n                <Address chainId={chainId}>{trustee ? trustee.address : \"\"}</Address>\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Admin:</th>\n                <td style={{textAlign: \"left\"}}>\n                <Address chainId={chainId}>{admin ? admin.address : \"\"}</Address>\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Marketing:</th>\n                <td style={{textAlign: \"left\"}}>\n                <Address chainId={chainId}>{marketing ? marketing.address : \"\"}</Address>\n                </td>\n            </tr>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Locker:</th>\n                <td style={{textAlign: \"left\"}}>\n                <Address chainId={chainId}>{locker ? locker.address : \"\"}</Address>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n        {owner ? <>\n            <p/>\n            <SmallLogo/>\n            <h2>Management</h2>\n            <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n                <thead>\n                <tr>\n                    <th>Paused: {paused ? \"YES\" : \"NO\"}</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td>\n                        <button disabled={paused} onClick={(e) => handlePause(e)}>Pause</button>\n                        <button disabled={!paused} onClick={(e) => handleUnpause(e)}>Unpause</button>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        </> : null }\n        <p/>\n        <SmallLogo/>\n        {/* <h2>Debug</h2>\n        <p>Block Number: {blockNumber}</p>\n        <p>Refresh Cnt: {useEffectCnt}</p> */}\n   </div>\n}","import React from 'react'\n\nimport { isMetamaskInstalled } from \"./MetamaskConnectButton\"\nimport { LuminaToken } from \"./LuminaToken\"\n\nexport interface LuminaConnectProps {\n}\n\nconst BigLogo = () => <img style={{ \"margin\": \"5px\" }} width={360} alt=\"\" src=\"lumina-logo.png\"/>\n\nconst LuminaConnect: React.FC<LuminaConnectProps> = () => {\n    const installed = isMetamaskInstalled()\n    return <div>\n        <BigLogo/>\n        <p/>\n        {!installed ? <div>\n            <h2>Please Install Metamask Plugin in Your Browser ...</h2>\n            <h3><a href=\"https://metamask.io/download/\" target=\"_blank\" rel=\"noopener noreferrer\">https://metamask.io/download/</a></h3>\n        </div> : <LuminaToken/>}\n    </div>\n}\n\nexport default LuminaConnect\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faWifi } from '@fortawesome/free-solid-svg-icons'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons'\nimport { faHeartbeat } from '@fortawesome/free-solid-svg-icons'\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport { faTerminal } from '@fortawesome/free-solid-svg-icons'\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons'\nimport { faTachometerAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faInfo } from '@fortawesome/free-solid-svg-icons'\nimport { faMicrochip } from '@fortawesome/free-solid-svg-icons'\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faMinus } from '@fortawesome/free-solid-svg-icons'\nimport { faHandPaper } from '@fortawesome/free-solid-svg-icons'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { faBackspace } from '@fortawesome/free-solid-svg-icons'\nimport { faCalculator } from '@fortawesome/free-solid-svg-icons'\nimport { faPercent } from '@fortawesome/free-solid-svg-icons'\nimport { faSmile } from '@fortawesome/free-solid-svg-icons'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport { faUserMinus } from '@fortawesome/free-solid-svg-icons'\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faRandom } from '@fortawesome/free-solid-svg-icons'\nimport { faDiceD20 } from '@fortawesome/free-solid-svg-icons'\n\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faToggleOn } from '@fortawesome/free-solid-svg-icons'\nimport { faToggleOff } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { faSearchMinus } from '@fortawesome/free-solid-svg-icons'\nimport { faSearchPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faArrowsAltH } from '@fortawesome/free-solid-svg-icons'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\nimport { faPause } from '@fortawesome/free-solid-svg-icons'\nimport { faStop } from '@fortawesome/free-solid-svg-icons'\nimport { faShareSquare } from '@fortawesome/free-solid-svg-icons'\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons'\nimport { faRunning } from '@fortawesome/free-solid-svg-icons'\nimport { faTh } from '@fortawesome/free-solid-svg-icons'\nimport { faGripVertical } from '@fortawesome/free-solid-svg-icons'\nimport { faGripHorizontal } from '@fortawesome/free-solid-svg-icons'\nimport { faBug } from '@fortawesome/free-solid-svg-icons'\nimport { faHistory } from '@fortawesome/free-solid-svg-icons'\nimport { faCodeBranch } from '@fortawesome/free-solid-svg-icons'\nimport { faGenderless } from '@fortawesome/free-solid-svg-icons'\nimport { faTable } from '@fortawesome/free-solid-svg-icons'\nimport { faListUl } from '@fortawesome/free-solid-svg-icons'\nimport { faBookMedical } from '@fortawesome/free-solid-svg-icons'\nimport { faPalette } from '@fortawesome/free-solid-svg-icons'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\nimport { faGolfBall } from '@fortawesome/free-solid-svg-icons'\nimport { faBowlingBall } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashRestore } from '@fortawesome/free-solid-svg-icons'\nimport { faCoins } from '@fortawesome/free-solid-svg-icons'\nimport { faCopy } from '@fortawesome/free-regular-svg-icons'\nimport { faRecycle } from '@fortawesome/free-solid-svg-icons'\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faHourglass } from '@fortawesome/free-regular-svg-icons'\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faWifi)\nlibrary.add(faHeart)\nlibrary.add(farHeart)\nlibrary.add(faHeartbeat)\nlibrary.add(faExclamationTriangle)\nlibrary.add(faThumbsUp)\nlibrary.add(faHome)\nlibrary.add(faTerminal)\nlibrary.add(faChartLine)\nlibrary.add(faTachometerAlt)\nlibrary.add(faInfo)\nlibrary.add(faMicrochip)\nlibrary.add(faTrophy)\nlibrary.add(faPlus)\nlibrary.add(faMinus)\nlibrary.add(faHandPaper)\nlibrary.add(faCheck)\nlibrary.add(faBackspace)\nlibrary.add(faCalculator)\nlibrary.add(faPercent)\nlibrary.add(faSmile)\nlibrary.add(faUser)\nlibrary.add(faUserMinus)\nlibrary.add(faUserPlus)\nlibrary.add(faRandom)\nlibrary.add(faDiceD20)\n\nlibrary.add(faSyncAlt)\nlibrary.add(faToggleOn)\nlibrary.add(faToggleOff)\nlibrary.add(faTrashAlt)\nlibrary.add(faFilter)\nlibrary.add(faSearch)\nlibrary.add(faSearchMinus)\nlibrary.add(faSearchPlus)\nlibrary.add(faArrowsAltH)\nlibrary.add(faPlay)\nlibrary.add(faPause)\nlibrary.add(faStop)\nlibrary.add(faShareSquare)\nlibrary.add(faEllipsisH)\nlibrary.add(faRunning)\nlibrary.add(faTh)\nlibrary.add(faGripVertical)\nlibrary.add(faGripHorizontal)\nlibrary.add(faBug)\nlibrary.add(faHistory)\nlibrary.add(faCodeBranch)\nlibrary.add(faGenderless)\nlibrary.add(faTable)\nlibrary.add(faListUl)\nlibrary.add(faBookMedical)\nlibrary.add(faPalette)\nlibrary.add(faCog)\nlibrary.add(faGolfBall)\nlibrary.add(faBowlingBall)\nlibrary.add(faTrashRestore)\nlibrary.add(faCoins)\nlibrary.add(faCopy)\nlibrary.add(faRecycle)\nlibrary.add(faExternalLinkAlt)\nlibrary.add(faHourglass)\nlibrary.add(faShoppingCart)\n","import React from 'react'\nimport './App.css'\nimport { Symfoni } from \"./hardhat/SymfoniContext\"\nimport LuminaConnect from \"./components/LuminaConnect\"\n\nimport './components/Icons'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Symfoni autoInit={true} showLoading={false} >\n          <LuminaConnect/>\n        </Symfoni>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// import { Provider as AlertProvider } from 'react-alert'\n// const AlertTemplate: any = require('react-alert-template-basic')\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <AlertProvider template={AlertTemplate}> */}\n      <App />\n    {/* </AlertProvider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"IconButton_button__38sbU\",\"buttonHover\":\"IconButton_buttonHover__1fn1s\",\"buttonDown\":\"IconButton_buttonDown__1U4T-\"};"],"sourceRoot":""}